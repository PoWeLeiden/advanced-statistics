{"title":"Voorspelde kansen","markdown":{"yaml":{"code-annotations":"hover"},"headingText":"Voorspelde kansen","headingAttr":{"id":"sec-logit-predicted-probabilities","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n```{r}\n#| label: setup\n#| echo: false\n#| message: false\n#| warning: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(sjPlot)          #overzichten van data objecten\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\n#Data\nESS9NL <- import(\"data/ESS9e03, Netherlands.sav\")\n```\n\nIn het vorige hoofdstuk lag de focus op marginale effecten: hoeveel verandert de *probabiliteit* dat Y=1 gemiddeld genomen als X 1 eenheid stijgt. In dit hoofdstuk gebruiken we de `predictions()` functie uit het `marginaleffects` package om de onderliggende kansen te bestuderen. We gebruiken deze functie voor drie soorten voorspelde kansen:\n\n-   De voorspelde kans voor elke observatie in het model\n-   De verwachte kansen als een bepaalde predictor verschillende waarden aanneemt\n-   De verwachte kans als alle predictoren specifieke waarden aannemen\n\nZie @sec-predicted-residual-values om na te gaan hoe je deze functie gebruikt voor lineaire modellen.\n\nWe gebruiken deze packages en data:\n\n```{r}\n#| eval: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(sjPlot)          #overzichten van data objecten\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\n#Data\nESS9NL <- import(\"ESS9e03, Netherlands.sav\")\n```\n\nWe maken gebruik van hetzelfde model als in het vorige hoofdstuk. We voorspelden daarin de kans dat iemand ging stemmen op basis van gender, leeftijd, vertrouwen in politici en links-rechtsideologie. We doen hier eerst de nodige data management, meer informatie over deze stappen vind je in vorige hoofdstukken:\n\n```{r}\n#Datamanagement\nESS9NL <- ESS9NL |>\n  #Factor maken van categorische variabelen\n  mutate(gndr_F = factorize(gndr), # <1> \n         vote_F = factorize(vote))  |> \n  #Not Eligible op missing zetten\n  mutate(vote_F = na_if(vote_F,\"Not eligible to vote\")) |> # <1> \n  #Relevel van variabelen\n  mutate(vote_F = relevel(vote_F, \"No\"), \n         gndr_F = relevel(gndr_F, \"Female\"))\n\n#Het model\nVote_model_mp <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = ESS9NL, family = \"binomial\")\n\n#Resultaten printen\nsummary(Vote_model_mp)\n```\n\n## Voorspelde kans voor individuele observaties\n\nOm op basis van het logistische regressiemodel de kans dat de afhankelijke variabele Y gelijk is aan 1 (hier: dat een respondent heeft gestemd) te voorspellen voor elke observatie in het model maken we gebruik van de `predictions` functie. De resultaten worden altijd opgeslaan in een nieuwe dataset, die je een naam geeft naar keuze (hier: Vote_pred).\n\n```{r}\n#Resultaten opslaan in nieuw object\nVote_pred <- predictions(Vote_model_mp,\n                         conf_level = 0.95, \n                         newdata = ESS9NL)\n\n#tibble() gebruiken voor overzicht\ntibble(Vote_pred)\n```\n\nDit is de syntax-uitleg:\n\n`Vote_pred <-`\n\n:   Nieuw data object met voorspelde kansen.\n\n`predictions(Vote_model_mp,`\n\n:   We voeren de predictions functie uit op het model tussen haakjes.\n\n`conf_level = 0.95,`\n\n:   Standaard betrouwbaarheidsniveau. De waarde kan veranderd worden (bv. `conf_level = 0.99`).\n\n`newdata = ESS9NL)`\n\n:   We kopiëren de variabelen uit de originele dataset. Dit gedeelte kan weggelaten worden als je dit niet nodig acht.\n\n## Gemiddelde voorspelde kansen\n\nWe kunnen de `predictions()` functie ook gebruiken om de gemiddelde voorspelde kans dat Y=1 te berekenen voor specifieke waarden van een onafhankelijke variabele. De andere onafhankelijke variabelen worden constant gehouden op hun gemiddelde (continue variabelen) of modus (factor variabelen). Deze voorspellingen kunnen we ook weergeven in een figuur zoals besproken in @sec-presentation-predicted-probability-plots .\n\n### Continue onafhankelijke variabele\n\nDe volgende code gebruiken we als de predictor die ons interesseert continu is. Hier berekenen we de gemiddelde voorspelde kans om te stemmen als vertrouwen in politici (`trstplt`) verandert.\n\n```{r}\nESS9NL |> \n  select(trstplt) |> \n  view_df()\n\ntable(ESS9NL$trstplt)\n```\n\nDe variabele loopt van 0 tot 10 dus deze waarden gebruiken we als minimum en maximum. We berekenen verder de kans per interval van 2 eenheden (missing waarden zijn reeds op NA gezet). We zouden ook voor elke eenheid de kans kunnen berekenen maar dit geeft vrij veel output, wellicht meer dan we nodig hebben. We zouden in plaats van deze intervallen ook minimum, 1ste kwartiel, mediaan, 3rde kwartiel en maximum van de variabele kunnen gebruiken (zie @sec-predictions-for-a-continuous-predictor-variable voor het proces om deze waarden te verkrijgen).\n\n```{r}\n#Voorspellingen in nieuw object\nPred_conts <- predictions(Vote_model_mp,\n                          newdata = datagrid(trstplt = seq(from = 0, to = 10, by = 2))) \n```\n\n`newdata = datagrid(trstplt`\n\n:   Alle predictoren in het model worden op hun gemiddelde/modus gehouden behalve de predictor die tussen haakjes staat.\n\n`= seq(from=0,to=10,by=2)))`\n\n:   We vragen hier voorspellingen voor een sequentie (`seq`) van waarden: van (`from`) het minimum tot (`to`) het maximum met tussenstappen (`by`) van 2. We zouden als alternatief deze code kunnen gebruiken: `trstplt = c(0,2,4,6,8,10)`).\n\nLaten we de voorspellingen bekijken:\n\n```{r}\ntibble(Pred_conts) # <1>\n```\n\n1.  `tibble()` wordt gebruikt om de onderliggende data beter te kunnen zien.\n\n::: callout-note\n#### Output uitleg\n\nDe output is gelijkaardig aan die voor voorspellingen voor lineaire regressiemodellen (zie @sec-predicted-residual-values):\n\n-   De `estimate` kolom bevat de voorspelde kans. We doen dit getal \\*100 om de kans in percent uit te drukken. bv. Voor iemand met een score van '0' op de schaal `trstplt` verwachten we een kans om te stemmen van 69,86%.\n-   De `p.value` t.e.m. `conf.high` kolommen geven de onzekerheid van de schatting weer.\n-   We kunnen ook de kolommen zien voor de andere onafhankelijke variabelen in het model (`gndr_F`, `agea`, `lrscale)` . Deze kolommen tonen de waarde waarop deze variabelen constant worden gehouden. De `predictions()` functie houdt continue variabelen op hun gemiddelde en factor variabelen op hun modus als je `newdata = datagrid()` gebruikt zoals we hierboven gedaan hebben.\n-   De laatste 2 kolommen tonen `trstplt`, met de waarden gebruikt om de voorspelling te berekenen en een kolom (niet zichtbaar hier) met de Y (`vote_F`) die toont welke categorie voorspeld wordt.\n:::\n\n### Factor onafhankelijke variabele\n\nDe code voor categorische variabelen is licht anders. We gebruiken hier de `by=` optie. In dit voorbeeld berekenen we de gemiddelde voorspelde kans voor mannen en vrouwen (met andere predictoren constant gehouden op hun gemiddelde).\n\n```{r}\n#voorspellingen in nieuw object\nPred_cat <- predictions(Vote_model_mp,\n              by=\"gndr_F\", \n              newdata = \"mean\") \n\n#tibble voor overzicht\ntibble(Pred_cat)\n```\n\n`by=\"gndr_F\"`\n\n:   Met deze optie duiden we aan dat we voor elk niveau van de factor variabele een voorspelde kans willen berekenen.\n\n`newdata = \"mean\"`\n\n:   Deze optie moeten we toevoegen om duidelijk te maken dat andere predictoren op hun gemiddelde/modus gehouden moeten worden. Deze optie moet samen met `by=` gebruikt worden.\n\n## Voorspelde kansen voor specifieke waarden van predictoren\n\nTen slotte kunnen we de voorspelde kans op Y berekenen als een observatie bepaalde, hypothetische waarden zou aannemen.\n\nBijvoorbeeld, hier berekenen we de voorspelde kans om te stemmen voor een man (`gndr`), die 33 jaar oud is (`agea`), een score van 2 heeft voor vertrouwen in politici (`trstplt`) en een score van 8 heeft op de links-rechts schaal (`lrscale`). We moeten hiervoor de waarden voor alle predictoren verduidelijken tussen haakjes bij `newdata=datagrid`.\n\n```{r}\n#Berekenen en opslaan in object\nPred_specific <- predictions(Vote_model_mp,\n                             newdata = datagrid(gndr_F=c(\"Male\"), # <1>\n                                                agea=c(33),   \n                                                trstplt=c(2), \n                                                lrscale=c(8)))\n#bekijken\nPred_specific\n```\n\n1.  We gebruiken haakjes omdat dit een factor variabele is met labels voor categorieën.\n","srcMarkdownNoYaml":"\n\n# Voorspelde kansen {#sec-logit-predicted-probabilities}\n\n```{r}\n#| label: setup\n#| echo: false\n#| message: false\n#| warning: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(sjPlot)          #overzichten van data objecten\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\n#Data\nESS9NL <- import(\"data/ESS9e03, Netherlands.sav\")\n```\n\nIn het vorige hoofdstuk lag de focus op marginale effecten: hoeveel verandert de *probabiliteit* dat Y=1 gemiddeld genomen als X 1 eenheid stijgt. In dit hoofdstuk gebruiken we de `predictions()` functie uit het `marginaleffects` package om de onderliggende kansen te bestuderen. We gebruiken deze functie voor drie soorten voorspelde kansen:\n\n-   De voorspelde kans voor elke observatie in het model\n-   De verwachte kansen als een bepaalde predictor verschillende waarden aanneemt\n-   De verwachte kans als alle predictoren specifieke waarden aannemen\n\nZie @sec-predicted-residual-values om na te gaan hoe je deze functie gebruikt voor lineaire modellen.\n\nWe gebruiken deze packages en data:\n\n```{r}\n#| eval: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(sjPlot)          #overzichten van data objecten\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\n#Data\nESS9NL <- import(\"ESS9e03, Netherlands.sav\")\n```\n\nWe maken gebruik van hetzelfde model als in het vorige hoofdstuk. We voorspelden daarin de kans dat iemand ging stemmen op basis van gender, leeftijd, vertrouwen in politici en links-rechtsideologie. We doen hier eerst de nodige data management, meer informatie over deze stappen vind je in vorige hoofdstukken:\n\n```{r}\n#Datamanagement\nESS9NL <- ESS9NL |>\n  #Factor maken van categorische variabelen\n  mutate(gndr_F = factorize(gndr), # <1> \n         vote_F = factorize(vote))  |> \n  #Not Eligible op missing zetten\n  mutate(vote_F = na_if(vote_F,\"Not eligible to vote\")) |> # <1> \n  #Relevel van variabelen\n  mutate(vote_F = relevel(vote_F, \"No\"), \n         gndr_F = relevel(gndr_F, \"Female\"))\n\n#Het model\nVote_model_mp <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = ESS9NL, family = \"binomial\")\n\n#Resultaten printen\nsummary(Vote_model_mp)\n```\n\n## Voorspelde kans voor individuele observaties\n\nOm op basis van het logistische regressiemodel de kans dat de afhankelijke variabele Y gelijk is aan 1 (hier: dat een respondent heeft gestemd) te voorspellen voor elke observatie in het model maken we gebruik van de `predictions` functie. De resultaten worden altijd opgeslaan in een nieuwe dataset, die je een naam geeft naar keuze (hier: Vote_pred).\n\n```{r}\n#Resultaten opslaan in nieuw object\nVote_pred <- predictions(Vote_model_mp,\n                         conf_level = 0.95, \n                         newdata = ESS9NL)\n\n#tibble() gebruiken voor overzicht\ntibble(Vote_pred)\n```\n\nDit is de syntax-uitleg:\n\n`Vote_pred <-`\n\n:   Nieuw data object met voorspelde kansen.\n\n`predictions(Vote_model_mp,`\n\n:   We voeren de predictions functie uit op het model tussen haakjes.\n\n`conf_level = 0.95,`\n\n:   Standaard betrouwbaarheidsniveau. De waarde kan veranderd worden (bv. `conf_level = 0.99`).\n\n`newdata = ESS9NL)`\n\n:   We kopiëren de variabelen uit de originele dataset. Dit gedeelte kan weggelaten worden als je dit niet nodig acht.\n\n## Gemiddelde voorspelde kansen\n\nWe kunnen de `predictions()` functie ook gebruiken om de gemiddelde voorspelde kans dat Y=1 te berekenen voor specifieke waarden van een onafhankelijke variabele. De andere onafhankelijke variabelen worden constant gehouden op hun gemiddelde (continue variabelen) of modus (factor variabelen). Deze voorspellingen kunnen we ook weergeven in een figuur zoals besproken in @sec-presentation-predicted-probability-plots .\n\n### Continue onafhankelijke variabele\n\nDe volgende code gebruiken we als de predictor die ons interesseert continu is. Hier berekenen we de gemiddelde voorspelde kans om te stemmen als vertrouwen in politici (`trstplt`) verandert.\n\n```{r}\nESS9NL |> \n  select(trstplt) |> \n  view_df()\n\ntable(ESS9NL$trstplt)\n```\n\nDe variabele loopt van 0 tot 10 dus deze waarden gebruiken we als minimum en maximum. We berekenen verder de kans per interval van 2 eenheden (missing waarden zijn reeds op NA gezet). We zouden ook voor elke eenheid de kans kunnen berekenen maar dit geeft vrij veel output, wellicht meer dan we nodig hebben. We zouden in plaats van deze intervallen ook minimum, 1ste kwartiel, mediaan, 3rde kwartiel en maximum van de variabele kunnen gebruiken (zie @sec-predictions-for-a-continuous-predictor-variable voor het proces om deze waarden te verkrijgen).\n\n```{r}\n#Voorspellingen in nieuw object\nPred_conts <- predictions(Vote_model_mp,\n                          newdata = datagrid(trstplt = seq(from = 0, to = 10, by = 2))) \n```\n\n`newdata = datagrid(trstplt`\n\n:   Alle predictoren in het model worden op hun gemiddelde/modus gehouden behalve de predictor die tussen haakjes staat.\n\n`= seq(from=0,to=10,by=2)))`\n\n:   We vragen hier voorspellingen voor een sequentie (`seq`) van waarden: van (`from`) het minimum tot (`to`) het maximum met tussenstappen (`by`) van 2. We zouden als alternatief deze code kunnen gebruiken: `trstplt = c(0,2,4,6,8,10)`).\n\nLaten we de voorspellingen bekijken:\n\n```{r}\ntibble(Pred_conts) # <1>\n```\n\n1.  `tibble()` wordt gebruikt om de onderliggende data beter te kunnen zien.\n\n::: callout-note\n#### Output uitleg\n\nDe output is gelijkaardig aan die voor voorspellingen voor lineaire regressiemodellen (zie @sec-predicted-residual-values):\n\n-   De `estimate` kolom bevat de voorspelde kans. We doen dit getal \\*100 om de kans in percent uit te drukken. bv. Voor iemand met een score van '0' op de schaal `trstplt` verwachten we een kans om te stemmen van 69,86%.\n-   De `p.value` t.e.m. `conf.high` kolommen geven de onzekerheid van de schatting weer.\n-   We kunnen ook de kolommen zien voor de andere onafhankelijke variabelen in het model (`gndr_F`, `agea`, `lrscale)` . Deze kolommen tonen de waarde waarop deze variabelen constant worden gehouden. De `predictions()` functie houdt continue variabelen op hun gemiddelde en factor variabelen op hun modus als je `newdata = datagrid()` gebruikt zoals we hierboven gedaan hebben.\n-   De laatste 2 kolommen tonen `trstplt`, met de waarden gebruikt om de voorspelling te berekenen en een kolom (niet zichtbaar hier) met de Y (`vote_F`) die toont welke categorie voorspeld wordt.\n:::\n\n### Factor onafhankelijke variabele\n\nDe code voor categorische variabelen is licht anders. We gebruiken hier de `by=` optie. In dit voorbeeld berekenen we de gemiddelde voorspelde kans voor mannen en vrouwen (met andere predictoren constant gehouden op hun gemiddelde).\n\n```{r}\n#voorspellingen in nieuw object\nPred_cat <- predictions(Vote_model_mp,\n              by=\"gndr_F\", \n              newdata = \"mean\") \n\n#tibble voor overzicht\ntibble(Pred_cat)\n```\n\n`by=\"gndr_F\"`\n\n:   Met deze optie duiden we aan dat we voor elk niveau van de factor variabele een voorspelde kans willen berekenen.\n\n`newdata = \"mean\"`\n\n:   Deze optie moeten we toevoegen om duidelijk te maken dat andere predictoren op hun gemiddelde/modus gehouden moeten worden. Deze optie moet samen met `by=` gebruikt worden.\n\n## Voorspelde kansen voor specifieke waarden van predictoren\n\nTen slotte kunnen we de voorspelde kans op Y berekenen als een observatie bepaalde, hypothetische waarden zou aannemen.\n\nBijvoorbeeld, hier berekenen we de voorspelde kans om te stemmen voor een man (`gndr`), die 33 jaar oud is (`agea`), een score van 2 heeft voor vertrouwen in politici (`trstplt`) en een score van 8 heeft op de links-rechts schaal (`lrscale`). We moeten hiervoor de waarden voor alle predictoren verduidelijken tussen haakjes bij `newdata=datagrid`.\n\n```{r}\n#Berekenen en opslaan in object\nPred_specific <- predictions(Vote_model_mp,\n                             newdata = datagrid(gndr_F=c(\"Male\"), # <1>\n                                                agea=c(33),   \n                                                trstplt=c(2), \n                                                lrscale=c(8)))\n#bekijken\nPred_specific\n```\n\n1.  We gebruiken haakjes omdat dit een factor variabele is met labels voor categorieën.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"logit_03.html"},"language":{"toc-title-document":"Inhoudsopgave","toc-title-website":"Op deze pagina","related-formats-title":"Andere formaten","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Bron","other-links-title":"Andere Links","code-links-title":"Code Links","launch-dev-container-title":"Dev Container starten","launch-binder-title":"Binder starten","article-notebook-label":"Artikel Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Broncode downloaden","notebook-preview-back":"Terug naar Artikel","manuscript-meca-bundle":"MECA Archief","section-title-abstract":"Samenvatting","section-title-appendices":"Bijlagen","section-title-footnotes":"Voetnoten","section-title-references":"Referenties","section-title-reuse":"Hergebruik","section-title-copyright":"Auteursrechten","section-title-citation":"Citaat","appendix-attribution-cite-as":"Citeer dit werk als:","appendix-attribution-bibtex":"BibTeX citaat:","appendix-view-license":"Licentie Bekijken","title-block-author-single":"Auteur","title-block-author-plural":"Auteurs","title-block-affiliation-single":"Affiliatie","title-block-affiliation-plural":"Affiliaties","title-block-published":"Publicatiedatum","title-block-modified":"Gewijzigd","title-block-keywords":"Trefwoorden","callout-tip-title":"Tip","callout-note-title":"Opmerking","callout-warning-title":"Waarschuwing","callout-important-title":"Belangrijk","callout-caution-title":"Opgelet","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Alle code tonen","code-tools-hide-all-code":"Alle code verbergen","code-tools-view-source":"Broncode bekijken","code-tools-source-code":"Broncode","tools-share":"Share","tools-download":"Download","code-line":"Regel","code-lines":"Regels","copy-button-tooltip":"Kopieer naar klembord","copy-button-tooltip-success":"Gekopieerd!","repo-action-links-edit":"Pagina bewerken","repo-action-links-source":"Broncode bekijken","repo-action-links-issue":"Een probleem melden","back-to-top":"Terug naar boven","search-no-results-text":"Geen resultaten","search-matching-documents-text":"Gevonden documenten","search-copy-link-title":"Kopieer link om te zoeken","search-hide-matches-text":"Extra overeenkomsten verbergen","search-more-match-text":"meer overeenkomst in dit document","search-more-matches-text":"meer overeenkomsten in dit document","search-clear-button-title":"Wissen","search-text-placeholder":"","search-detached-cancel-button-title":"Annuleren","search-submit-button-title":"Verzenden","search-label":"Zoeken","toggle-section":"Schakel sectie","toggle-sidebar":"Schakel zijbalknavigatie","toggle-dark-mode":"Schakel donkere modus","toggle-reader-mode":"Schakel leesmodus","toggle-navigation":"Schakel navigatie","crossref-fig-title":"Figuur","crossref-tbl-title":"Tabel","crossref-lst-title":"Listing","crossref-thm-title":"Stelling","crossref-lem-title":"Lemma","crossref-cor-title":"Conclusie","crossref-prp-title":"Voorstel","crossref-cnj-title":"Aanname","crossref-def-title":"Definitie","crossref-exm-title":"Voorbeeld","crossref-exr-title":"Oefening","crossref-ch-prefix":"Hoofdstuk","crossref-apx-prefix":"Bijlage","crossref-sec-prefix":"Paragraaf","crossref-eq-prefix":"Vergelijking","crossref-lof-title":"Lijst van figuren","crossref-lot-title":"Lijst van tabellen","crossref-lol-title":"Lijst van listings","environment-proof-title":"Bewijs","environment-remark-title":"Opmerking","environment-solution-title":"Oplossing","listing-page-order-by":"Sorteer op","listing-page-order-by-default":"Standaard","listing-page-order-by-date-asc":"Oudste","listing-page-order-by-date-desc":"Nieuwste","listing-page-order-by-number-desc":"Aflopend","listing-page-order-by-number-asc":"Oplopend","listing-page-field-date":"Datum","listing-page-field-title":"Titel","listing-page-field-description":"Beschrijving","listing-page-field-author":"Auteur","listing-page-field-filename":"Bestandsnaam","listing-page-field-filemodified":"Gewijzigd","listing-page-field-subtitle":"Subtitel","listing-page-field-readingtime":"Leestijd","listing-page-field-wordcount":"Woordentelling","listing-page-field-categories":"Categorieën","listing-page-minutes-compact":"{0} min","listing-page-category-all":"Alle","listing-page-no-matches":"Geen overeenkomsten","listing-page-words":"{0} woorden","listing-page-filter":"Filter","draft":"Ontwerp"},"metadata":{"lang":"nl","fig-responsive":true,"quarto-version":"1.5.57","bibliography":["references.bib"],"editor":"visual","theme":{"light":"cosmo","dark":"darkly"},"code-annotations":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}