{"title":"Marginale Effecten","markdown":{"yaml":{"code-annotations":"hover","citation-location":"margin"},"headingText":"Marginale Effecten","headingAttr":{"id":"sec-marginal-effects","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n```{r}\n#| label: setup\n#| echo: false\n#| message: false\n#| warning: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(marginaleffects) #voorspelde waarden en marginale effecten berekenen\n\n#Data\nESS9NL <- import(\"data/ESS9e03, Netherlands.sav\")\n\n```\n\nIn het vorige hoofdstuk leerden we een logistisch regressiemodel schatten en interpreteren met behulp van de coëfficiënten en odds ratios. Beide zijn echter niet erg intuïtief. Wat we vaak echt willen weten is hoeveel de kans op Y=1 verandert als de onafhankelijke variabele met 1 eenheid stijgt. We kunnen naar de marginale effecten van onze onafhankelijke variabelen kijken om iets te zeggen over de verandering in de *probabiliteit* dat Y=1. We gebruiken hiervoor functies uit het `marginaleffects` package.\n\nWe gebruiken volgende packages en data:\n\n```{r}\n#| eval: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(marginaleffects) #voorspelde waarden en marginale effecten berekenen\n\n#Data\nESS9NL <- import(\"ESS9e03, Netherlands.sav\")\n```\n\n## Data Management, voorbeeldmodel, en problemen met `factorize()`\n\nWe maken gebruiken van eenzelfde model dat we gebruikt hebben in vorig hoofdstuk. Daarin voorspelden we stemmen op basis van gender, leeftijd, vertouwen in politici en linsk-rechtsideologie. We herhalen eerst een paar data management stappen:\n\n```{r}\n#Datamanagement\nESS9NL <- ESS9NL |>\n  #Factor maken van categorische variabelen\n  mutate(gndr_F = factorize(gndr), # <1> \n         vote_F = factorize(vote))  |> \n  #Not Eligible op missing zetten\n  mutate(vote_F = na_if(vote_F,\"Not eligible to vote\")) |> # <1> \n  #Relevel van variabelen\n  mutate(vote_F = relevel(vote_F, \"No\"), \n         gndr_F = relevel(gndr_F, \"Female\"))\n\n#Het model\nVote_model_mp <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = ESS9NL, family = \"binomial\")\n\n#Resultaten printen\nsummary(Vote_model_mp)\n```\n\n1.  We zouden ook deze 3 `mutate()` stappen in 1 stap kunnen combineren.\n\nHet `marginaleffects`package is niet volledig compatibel met de `factorize` functie die we hierboven hebben gebruikt voor gender. Laten we even kijken naar de `gndr_F`variabele:\n\n```{r}\nlevels(ESS9NL$gndr_F)\ntable(ESS9NL$gndr_F)\n\n```\n\nEr zijn 3 niveaus of levels voor `gndr_F`: \"Female\", \"Male\", en \"No Answer\". Er vallen echter 0 respondenten onder \"No Answer\". In dergelijke situaties zal onderstaande functie een error geven omdat de functie zoekt naar een derde niveau dat er niet is.\n\nOm dit te voorkomen kunnen we gebruik maken van de `droplevels()` functie om lege niveaus te verwijderen. Of we gebruiken `factor()` ipv `factorize`om `gndr` een factor variabele te maken. Zie. @sec-slopes-error in de Veelvoorkomende Fouten Appendix voor meer informatie.\n\n```{r}\n#Drop levels: verwijderen van categorieën zonder observaties\nESS9NL <- ESS9NL |>\n  mutate(gndr_F = droplevels(gndr_F))\n\n#Checken van syntax\nlevels(ESS9NL$gndr_F)\ntable(ESS9NL$gndr_F)\n```\n\n## Gemiddelde Marginale Effecten (AME)\n\nDe eerste soort marginale effecten die we bekijken zijn de gemiddelde marginale effecten: de Average Marginal Effects (AME). We gebruiken hiervoor de `avg_slopes()` functie uit `marginaleffects`. De AME geeft de gemiddelde verandering in probabiliteit dat Y=1 weer (in termen van percentpunten) als de onafhankelijke met 1 eenheid omhoog gaat (dy/dx). We bereken het marginale effect voor elke observatie en elke variabele in het model en nemen dan het gemiddelde per variabele. Deze figuur beschrijft het proces (uit @heiss2022):\n\n![AME berekening door avg_slopes](figures/flow-ame.png)\n\nLaten we kijken naar de AMEs van ons model:\n\n```{r}\n#Schatten van AMEs obv model\nAME <- avg_slopes(Vote_model_mp,\n                  conf_level = 0.95)\n\n```\n\nDe syntax lees je zo\n\n`AME <- avg_slopes(Vote_model_mp,`\n\n:   We gebruiken de functie avg_slopes op het model tussen haakjes. De resultaten slaan we op in een nieuw data object (AME).\n\n`conf_level = 0.95)`\n\n:   Standaard wordt een betrouwbaarheidsniveau van 95% gebruikt, dus deze code kan weggelaten worden als dit het gewenste niveau is. Met de code kun je het niveau ook veranderen (bv. 0.99).\n\nDit is de output:\n\n```{r}\ntibble(AME) # <1> \n```\n\n1.  We zouden `AME` kunnen typen eerder dan `tibble(AME)` maar dit geeft andere kolomnamen. We gebruiken `tibble()` om de kolomnamen te zien zoals ze ook in de dataset zijn opgeslagen. Zie de waarschuwing hiervover in Hoofdstuk 5 @sec-predicted-residual-values.\n\n::: callout-note\n#### Output uitleg\n\n-   `term`: bevat de namen van de variabelen (bv., `agea`, `gndr_F`, etc.).\n-   `contrast`: Het 'contrast' duidt aan welke vergelijking gemaakt wordt: 1 eenheid toename voor continue variabelen, een verandering van categorie voor factor variabelen.\n-   `estimate`: De AME\n-   `std.error` t.e.m. `conf.high`: Informatie over de onzekerheid van de schatting.\n:::\n\n::: callout-warning\n#### Interpretatie\n\nDe gemiddelde marginale effecten (AMEs) geven weer wat de gemiddelde verandering is in de probabiliteit dat Y=1 (in percentpunten) als X met 1 eenheid stijgt. De percentpunten verkrijg je door de AME schatting te vermenigvuldigen met 100. Bijvoorbeeld:\n\n-   De kans om te stemmen is gemiddeld 0.5 percentpunten hoger voor een mannelijke respondent dan voor een vrouwelijke respondent.\n-   De kans om te stemmen stijgt gemiddeld met 2.3 percentpunten met elke eenheid dat respondenten meer vertrouwen hebben in politici.\n:::\n\n## Effecten op gemiddelde waarden van de predictors (MEM)\n\nWe raden aan om AME te gebruiken als je marginale effecten op basis van een logistische regressie interpreteert. Echter zie je ook soms onderzoek waarin men gebruik maakt van \"effecten op gemiddelde waarden\": \"marginal effect at the mean\" of MEM. Daarmee berekenen we het effect op de probabiliteit dat Y=1 wanneer predictors hun gemiddelde waarden aannemen, of de modus bij categorische variabelen. Deze figuur beschrijft de berekening (uit @heiss2022):\n\n![He avg_slopes de MEM berekent](figures/flow-mem.png)\n\nDe syntax wordt licht aangepast voor de MEM;\n\n```{r}\nMEM <- slopes(Vote_model_mp, \n              conf_level = 0.95,\n              newdata = datagrid()\n              )\n```\n\n`newdata = datagrid()`\n\n:   We maken een nieuwe dataset voor de berekening waarin alle onafhankelijke variabelen op hun gemiddelde of modus worden gehouden.\n\nLaten we kijken naar de resultaten:\n\n```{r}\ntibble(MEM)\n```\n\nBehalve estimate, standaardfout, test statistiek, p-waarde, en onder- en bovengrens van de betrouwbaarheidsintervallen, bevat de MEM dataset ook de gemiddelden en/of modus waarden voor de predictoren.\n\n```{r}\nMEM |> \n  select(gndr_F, agea, trstplt, lrscale) |> \n  as_tibble()\n```\n\n::: callout-warning\n#### Interpretatie\n\nDe interpretatie van MEMs is gelijkaardig aan die van AME: Welke gemiddelde verandering in de kans dat Y=1 verwachten we als X 1 eenheid stijgt? Vermenigvuldigen met 100 leidt tot een interpretatie in termen van percentpunten. De gemiddelde verandering is nu wel berekend wanneer onafhankelijke variabelen hun gemiddelde waarden aannemen. Dit moet gerapporteerd worden. Bijvoorbeeld: mannelijke respondenten hebben een 0.5 percentpunten hogere kans om te stemmen dan vrouwelijke respondenten, als leeftijd, ideologie, en vertrouwen in politici constant worden gehouden op hun gemiddelde waarde.\n:::\n","srcMarkdownNoYaml":"\n\n# Marginale Effecten {#sec-marginal-effects}\n\n```{r}\n#| label: setup\n#| echo: false\n#| message: false\n#| warning: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(marginaleffects) #voorspelde waarden en marginale effecten berekenen\n\n#Data\nESS9NL <- import(\"data/ESS9e03, Netherlands.sav\")\n\n```\n\nIn het vorige hoofdstuk leerden we een logistisch regressiemodel schatten en interpreteren met behulp van de coëfficiënten en odds ratios. Beide zijn echter niet erg intuïtief. Wat we vaak echt willen weten is hoeveel de kans op Y=1 verandert als de onafhankelijke variabele met 1 eenheid stijgt. We kunnen naar de marginale effecten van onze onafhankelijke variabelen kijken om iets te zeggen over de verandering in de *probabiliteit* dat Y=1. We gebruiken hiervoor functies uit het `marginaleffects` package.\n\nWe gebruiken volgende packages en data:\n\n```{r}\n#| eval: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(marginaleffects) #voorspelde waarden en marginale effecten berekenen\n\n#Data\nESS9NL <- import(\"ESS9e03, Netherlands.sav\")\n```\n\n## Data Management, voorbeeldmodel, en problemen met `factorize()`\n\nWe maken gebruiken van eenzelfde model dat we gebruikt hebben in vorig hoofdstuk. Daarin voorspelden we stemmen op basis van gender, leeftijd, vertouwen in politici en linsk-rechtsideologie. We herhalen eerst een paar data management stappen:\n\n```{r}\n#Datamanagement\nESS9NL <- ESS9NL |>\n  #Factor maken van categorische variabelen\n  mutate(gndr_F = factorize(gndr), # <1> \n         vote_F = factorize(vote))  |> \n  #Not Eligible op missing zetten\n  mutate(vote_F = na_if(vote_F,\"Not eligible to vote\")) |> # <1> \n  #Relevel van variabelen\n  mutate(vote_F = relevel(vote_F, \"No\"), \n         gndr_F = relevel(gndr_F, \"Female\"))\n\n#Het model\nVote_model_mp <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = ESS9NL, family = \"binomial\")\n\n#Resultaten printen\nsummary(Vote_model_mp)\n```\n\n1.  We zouden ook deze 3 `mutate()` stappen in 1 stap kunnen combineren.\n\nHet `marginaleffects`package is niet volledig compatibel met de `factorize` functie die we hierboven hebben gebruikt voor gender. Laten we even kijken naar de `gndr_F`variabele:\n\n```{r}\nlevels(ESS9NL$gndr_F)\ntable(ESS9NL$gndr_F)\n\n```\n\nEr zijn 3 niveaus of levels voor `gndr_F`: \"Female\", \"Male\", en \"No Answer\". Er vallen echter 0 respondenten onder \"No Answer\". In dergelijke situaties zal onderstaande functie een error geven omdat de functie zoekt naar een derde niveau dat er niet is.\n\nOm dit te voorkomen kunnen we gebruik maken van de `droplevels()` functie om lege niveaus te verwijderen. Of we gebruiken `factor()` ipv `factorize`om `gndr` een factor variabele te maken. Zie. @sec-slopes-error in de Veelvoorkomende Fouten Appendix voor meer informatie.\n\n```{r}\n#Drop levels: verwijderen van categorieën zonder observaties\nESS9NL <- ESS9NL |>\n  mutate(gndr_F = droplevels(gndr_F))\n\n#Checken van syntax\nlevels(ESS9NL$gndr_F)\ntable(ESS9NL$gndr_F)\n```\n\n## Gemiddelde Marginale Effecten (AME)\n\nDe eerste soort marginale effecten die we bekijken zijn de gemiddelde marginale effecten: de Average Marginal Effects (AME). We gebruiken hiervoor de `avg_slopes()` functie uit `marginaleffects`. De AME geeft de gemiddelde verandering in probabiliteit dat Y=1 weer (in termen van percentpunten) als de onafhankelijke met 1 eenheid omhoog gaat (dy/dx). We bereken het marginale effect voor elke observatie en elke variabele in het model en nemen dan het gemiddelde per variabele. Deze figuur beschrijft het proces (uit @heiss2022):\n\n![AME berekening door avg_slopes](figures/flow-ame.png)\n\nLaten we kijken naar de AMEs van ons model:\n\n```{r}\n#Schatten van AMEs obv model\nAME <- avg_slopes(Vote_model_mp,\n                  conf_level = 0.95)\n\n```\n\nDe syntax lees je zo\n\n`AME <- avg_slopes(Vote_model_mp,`\n\n:   We gebruiken de functie avg_slopes op het model tussen haakjes. De resultaten slaan we op in een nieuw data object (AME).\n\n`conf_level = 0.95)`\n\n:   Standaard wordt een betrouwbaarheidsniveau van 95% gebruikt, dus deze code kan weggelaten worden als dit het gewenste niveau is. Met de code kun je het niveau ook veranderen (bv. 0.99).\n\nDit is de output:\n\n```{r}\ntibble(AME) # <1> \n```\n\n1.  We zouden `AME` kunnen typen eerder dan `tibble(AME)` maar dit geeft andere kolomnamen. We gebruiken `tibble()` om de kolomnamen te zien zoals ze ook in de dataset zijn opgeslagen. Zie de waarschuwing hiervover in Hoofdstuk 5 @sec-predicted-residual-values.\n\n::: callout-note\n#### Output uitleg\n\n-   `term`: bevat de namen van de variabelen (bv., `agea`, `gndr_F`, etc.).\n-   `contrast`: Het 'contrast' duidt aan welke vergelijking gemaakt wordt: 1 eenheid toename voor continue variabelen, een verandering van categorie voor factor variabelen.\n-   `estimate`: De AME\n-   `std.error` t.e.m. `conf.high`: Informatie over de onzekerheid van de schatting.\n:::\n\n::: callout-warning\n#### Interpretatie\n\nDe gemiddelde marginale effecten (AMEs) geven weer wat de gemiddelde verandering is in de probabiliteit dat Y=1 (in percentpunten) als X met 1 eenheid stijgt. De percentpunten verkrijg je door de AME schatting te vermenigvuldigen met 100. Bijvoorbeeld:\n\n-   De kans om te stemmen is gemiddeld 0.5 percentpunten hoger voor een mannelijke respondent dan voor een vrouwelijke respondent.\n-   De kans om te stemmen stijgt gemiddeld met 2.3 percentpunten met elke eenheid dat respondenten meer vertrouwen hebben in politici.\n:::\n\n## Effecten op gemiddelde waarden van de predictors (MEM)\n\nWe raden aan om AME te gebruiken als je marginale effecten op basis van een logistische regressie interpreteert. Echter zie je ook soms onderzoek waarin men gebruik maakt van \"effecten op gemiddelde waarden\": \"marginal effect at the mean\" of MEM. Daarmee berekenen we het effect op de probabiliteit dat Y=1 wanneer predictors hun gemiddelde waarden aannemen, of de modus bij categorische variabelen. Deze figuur beschrijft de berekening (uit @heiss2022):\n\n![He avg_slopes de MEM berekent](figures/flow-mem.png)\n\nDe syntax wordt licht aangepast voor de MEM;\n\n```{r}\nMEM <- slopes(Vote_model_mp, \n              conf_level = 0.95,\n              newdata = datagrid()\n              )\n```\n\n`newdata = datagrid()`\n\n:   We maken een nieuwe dataset voor de berekening waarin alle onafhankelijke variabelen op hun gemiddelde of modus worden gehouden.\n\nLaten we kijken naar de resultaten:\n\n```{r}\ntibble(MEM)\n```\n\nBehalve estimate, standaardfout, test statistiek, p-waarde, en onder- en bovengrens van de betrouwbaarheidsintervallen, bevat de MEM dataset ook de gemiddelden en/of modus waarden voor de predictoren.\n\n```{r}\nMEM |> \n  select(gndr_F, agea, trstplt, lrscale) |> \n  as_tibble()\n```\n\n::: callout-warning\n#### Interpretatie\n\nDe interpretatie van MEMs is gelijkaardig aan die van AME: Welke gemiddelde verandering in de kans dat Y=1 verwachten we als X 1 eenheid stijgt? Vermenigvuldigen met 100 leidt tot een interpretatie in termen van percentpunten. De gemiddelde verandering is nu wel berekend wanneer onafhankelijke variabelen hun gemiddelde waarden aannemen. Dit moet gerapporteerd worden. Bijvoorbeeld: mannelijke respondenten hebben een 0.5 percentpunten hogere kans om te stemmen dan vrouwelijke respondenten, als leeftijd, ideologie, en vertrouwen in politici constant worden gehouden op hun gemiddelde waarde.\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"logit_02.html"},"language":{"toc-title-document":"Inhoudsopgave","toc-title-website":"Op deze pagina","related-formats-title":"Andere formaten","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Bron","other-links-title":"Andere Links","code-links-title":"Code Links","launch-dev-container-title":"Dev Container starten","launch-binder-title":"Binder starten","article-notebook-label":"Artikel Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Broncode downloaden","notebook-preview-back":"Terug naar Artikel","manuscript-meca-bundle":"MECA Archief","section-title-abstract":"Samenvatting","section-title-appendices":"Bijlagen","section-title-footnotes":"Voetnoten","section-title-references":"Referenties","section-title-reuse":"Hergebruik","section-title-copyright":"Auteursrechten","section-title-citation":"Citaat","appendix-attribution-cite-as":"Citeer dit werk als:","appendix-attribution-bibtex":"BibTeX citaat:","appendix-view-license":"Licentie Bekijken","title-block-author-single":"Auteur","title-block-author-plural":"Auteurs","title-block-affiliation-single":"Affiliatie","title-block-affiliation-plural":"Affiliaties","title-block-published":"Publicatiedatum","title-block-modified":"Gewijzigd","title-block-keywords":"Trefwoorden","callout-tip-title":"Tip","callout-note-title":"Opmerking","callout-warning-title":"Waarschuwing","callout-important-title":"Belangrijk","callout-caution-title":"Opgelet","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Alle code tonen","code-tools-hide-all-code":"Alle code verbergen","code-tools-view-source":"Broncode bekijken","code-tools-source-code":"Broncode","tools-share":"Share","tools-download":"Download","code-line":"Regel","code-lines":"Regels","copy-button-tooltip":"Kopieer naar klembord","copy-button-tooltip-success":"Gekopieerd!","repo-action-links-edit":"Pagina bewerken","repo-action-links-source":"Broncode bekijken","repo-action-links-issue":"Een probleem melden","back-to-top":"Terug naar boven","search-no-results-text":"Geen resultaten","search-matching-documents-text":"Gevonden documenten","search-copy-link-title":"Kopieer link om te zoeken","search-hide-matches-text":"Extra overeenkomsten verbergen","search-more-match-text":"meer overeenkomst in dit document","search-more-matches-text":"meer overeenkomsten in dit document","search-clear-button-title":"Wissen","search-text-placeholder":"","search-detached-cancel-button-title":"Annuleren","search-submit-button-title":"Verzenden","search-label":"Zoeken","toggle-section":"Schakel sectie","toggle-sidebar":"Schakel zijbalknavigatie","toggle-dark-mode":"Schakel donkere modus","toggle-reader-mode":"Schakel leesmodus","toggle-navigation":"Schakel navigatie","crossref-fig-title":"Figuur","crossref-tbl-title":"Tabel","crossref-lst-title":"Listing","crossref-thm-title":"Stelling","crossref-lem-title":"Lemma","crossref-cor-title":"Conclusie","crossref-prp-title":"Voorstel","crossref-cnj-title":"Aanname","crossref-def-title":"Definitie","crossref-exm-title":"Voorbeeld","crossref-exr-title":"Oefening","crossref-ch-prefix":"Hoofdstuk","crossref-apx-prefix":"Bijlage","crossref-sec-prefix":"Paragraaf","crossref-eq-prefix":"Vergelijking","crossref-lof-title":"Lijst van figuren","crossref-lot-title":"Lijst van tabellen","crossref-lol-title":"Lijst van listings","environment-proof-title":"Bewijs","environment-remark-title":"Opmerking","environment-solution-title":"Oplossing","listing-page-order-by":"Sorteer op","listing-page-order-by-default":"Standaard","listing-page-order-by-date-asc":"Oudste","listing-page-order-by-date-desc":"Nieuwste","listing-page-order-by-number-desc":"Aflopend","listing-page-order-by-number-asc":"Oplopend","listing-page-field-date":"Datum","listing-page-field-title":"Titel","listing-page-field-description":"Beschrijving","listing-page-field-author":"Auteur","listing-page-field-filename":"Bestandsnaam","listing-page-field-filemodified":"Gewijzigd","listing-page-field-subtitle":"Subtitel","listing-page-field-readingtime":"Leestijd","listing-page-field-wordcount":"Woordentelling","listing-page-field-categories":"Categorieën","listing-page-minutes-compact":"{0} min","listing-page-category-all":"Alle","listing-page-no-matches":"Geen overeenkomsten","listing-page-words":"{0} woorden","listing-page-filter":"Filter","draft":"Ontwerp"},"metadata":{"lang":"nl","fig-responsive":true,"quarto-version":"1.5.57","bibliography":["references.bib"],"editor":"visual","theme":{"light":"cosmo","dark":"darkly"},"code-annotations":"hover","citation-location":"margin"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}