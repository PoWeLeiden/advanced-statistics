{"title":"Bivariate Regressie met Binaire en Categorische Predictoren","markdown":{"yaml":{"code-annotations":"hover","citation-location":"margin"},"headingText":"Bivariate Regressie met Binaire en Categorische Predictoren","headingAttr":{"id":"sec-binary-predictors","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n```{r}\n#| label: setup\n#| echo: false\n#| message: false\n#| warning: false\n\nlibrary(rio)\nlibrary(tidyverse)\n\ndemdata <- import(\"data/demdata.rds\") |> \n  as_tibble() \n```\n\nIn het vorige hoofdstuk bespraken we hoe een lineaire regressieanalyse te gebruiken om de relatie tussen continue variabelen na te gaan. In dit hoofdstuk wordt uitgelegd hoe je een bivariate regressie kan uitvoeren met binaire en categorische variabelen.\n\nWe beginnen zoals gewoonlijk met het laden van relevante R packages ('libraries'). Deze packages zijn reeds geïnstalleerd op de universitaire computers, maar moeten eerst geladen worden. We laden ook onze dataset.\n\n```{r}\n#| eval: false\n\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(broom)           #samenvattingen regressiemodellen\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\ndemdata <- import(\"demdata.rds\") |> \n  as_tibble()\n```\n\n## Data Management: Converteren naar een factor variabele\n\nVia lineaire regressieanalyse kunnen we een continue afhankelijke variabele ook voorspellen aan de hand van binaire (2 waarden) en categorische (3 of meer waarden) variabelen.\n\nOm deze variabelen te gebruiken in een regressiemodel moeten ze toegevoegd worden als dichotome of \"[dummy](https://stats.oarc.ucla.edu/other/mult-pkg/faq/general/faqwhat-is-dummy-coding/){target=\"_blank\"}\" variabelen. Als de variabele binair is, wordt 1 dummy gebruikt, als de variabelen meer categorieën kent, worden meerdere dummies gebruikt.[^linear_02-1] R voegt automatisch dummies toe voor factor variabelen, dus transformeren we binaire en categorische variabelen naar factor variabelen voor we ze in een regressie analyse gebruiken.[^linear_02-2]\n\n[^linear_02-1]: We gebruiken k-1 dummies, waarbij k = aantal categorieën. Als een categorische variabele 4 categorieën heeft (Bijvoorbeeld: Noorden, Westen, Zuiden en Oosten), dan gebruiken we (4-1=) 3 dummies.\n\n[^linear_02-2]: Transformatie is niet nodig als de originele variabelen reeds opgeslaan zijn als factor in de dataset, maar misschien moet de referentiecategorie wel aangepast worden (zie verder).\n\nIn dit voorbeeld maken we gebruik van de variabele \"TYPEDEMO1984\". Deze binaire variabele toont of een land een democratie of autocratie was in het jaar 1984. De variabele is numeriek opgeslagen (dit kunnen we controleren met behulp van de functie `class()`). De waarde 1 staat voor autocratie, de waarde 2 voor democratie.\n\n```{r}\n#Informatie over type variabele: \nclass(demdata$TYPEDEMO1984)\n\n#simpele tabel\ntable(demdata$TYPEDEMO1984)\n```\n\nAangezien de variabele numeriek is, transformeren we deze eerst naar een factor variabele. We kunnen dit doen met de ingebouwde `factor()` functie (zie [Statistiek I, 1.6.3](https://poweleiden.github.io/statistiek1/data_01_basics.html#creating-variables-in-r){target=\"_blank\"}) of met de `factorize()` functie afkomstig uit het `rio` package. Deze laatste functie is vooral handig als de waarden labels hebben zoals hier het geval is ( 1 = \"Autocratie\", 2 = \"Democratie\"). Als er geen labels zijn, moet je `factor()` gebruiken gezien `factorize()` in dat geval niet de juiste uitkomsten geeft. Zie @sec-not-seeing-the-right-number-of-categories-for-factor-variables-in-regression-models voor meer informatie.\n\nDe labels kun je zien met behulp van de `view_df()` functie uit het `sjPlot` package (zie @sec-recall-peeking-inside-data-objects) of door gebruik te maken van de ingebouwde functie `attributes()` (vooraleer je transformeert naar factor): `attributes(demdata$TYPEDEMO1984)`. Daarbij kijk je of er informatie is waar \"\\$labels\" staat.\n\n```{r}\nattributes(demdata$TYPEDEMO1984)\n```\n\nWe gebruiken `factorize()` gezien de waarden van onze variabelen labels hebben (1 = \"Autocratie\", 2 = \"Democratie\"). We kijken ook na of de functie gelukt is.\n\n```{r}\n# transformeren naar factor\ndemdata <- demdata |> \n  mutate(TYPEDEMO1984_factor = factorize(TYPEDEMO1984))\n\n#Niveaus (levels) bekijken en tabel om te checken\nlevels(demdata$TYPEDEMO1984_factor)\ntable(demdata$TYPEDEMO1984_factor)\n\n```\n\nDe syntax is eenvoudig:\n\n`factorize(`\n\n:   Naam van de functie die wordt toegepast op de variabele tussen haakjes.\n\n`TYPEDEMO1984`\n\n:   Aangeduide variabele. Het laagste numerieke niveau van deze variabele zal als eerste niveau van de factor gebruikt worden en dus als referentiecategorie.\n\nDezelfde procedure wordt gehanteerd voor een categorische variabele met 3 of meer categorieën. Bijvoorbeeld, de variabele `Typeregime2006` geeft weer of een land een liberale democratie was (=1), een electorale democratie (=2), of een autocratie (=3) in het jaar 2006. Deze variabele heeft ook waarden-labels dus kunnen we opnieuw `factorize()` gebruiken:\n\n```{r}\n#transformeer naar factor variabele\ndemdata <- demdata |> \n  mutate(Typeregime2006_factor = factorize(Typeregime2006))\n\n#Werk checken\nlevels(demdata$Typeregime2006_factor)\ntable(demdata$Typeregime2006_factor)\n```\n\n::: callout-warning\n#### Waarschuwing!\n\nWe raden aan om nieuwe variabelen aan te maken wanneer je een bestaande variabele omzet naar een factorvariabele (of wanneer je hercodeert) zoals hiervoven (bv., `mutate(TYPEDEMO1984_factor = factorize(TYPEDEMO1984))`). Als je een nieuwe variabele aanmaakt, overschrijf je nooit de originele. Dit kan helpen om fouten makkelijker te corrigeren (zonder dat je dataset opnieuw moet inladen en eerdere syntax runnen).\n:::\n\n### Veranderen van de referentiecategorie {#sec-relevelling}\n\n`factorize()` gebruikt de eerste numerieke waarde als referentiegroep bij het maken van een factorvariabele. `factor()` doet dit ook, tenzij we expliciet de volgorde van de factorniveaus (levels) aanduiden in de syntax (zie het voorbeeld in @sec-not-seeing-the-right-number-of-categories-for-factor-variables-in-regression-models). \n\nIn elk geval kunnen we de referentiecategorie veranderen als we dat willen. Dit kunnen we doen met behulp van de `relevel()` functie. Hieronder veranderen we de referentiecategorie voor \"Typeregime2006_factor\" naar \"Electoral Democracy\".\n\n```{r}\ndemdata <- demdata |> \n  mutate(Typeregime2006_factor_relevel = relevel(Typeregime2006_factor, \"Electoral democracy\"))\n\n```\n\n`relevel(`\n\n:   Naam van de functie\n\n`Typeregime2006_factor,`\n\n:   We gebruiken \"Typeregime2006_factor\" uit de \"demdata\" dataset.\n\n`\"Electoral democracy\")`\n\n:   We geven de naam op van de categorie die we als referentiecategorie willen nemen tussen dubbele aanhalingstekens. We gebruiken de naam tussen aanhalingstekens omdat de variabele reeds hierboven naar een factor is omgezet, anders zou dit niet werken.\n\nWe checken altijd beter of alles goed is gegaan:\n\n```{r}\n#Checken:\nlevels(demdata$Typeregime2006_factor)\nlevels(demdata$Typeregime2006_factor_relevel)\n```\n\n## Factor variabelen als predictoren\n\nWe voegen binaire en categorische onafhankelijke variabelen toe aan de regressieanalyse op dezelfde manier als bij continue variabelen:\n\n```{r}\n# Met binaire predictor: \nmodel_binary <- lm(v2x_polyarchy ~ TYPEDEMO1984_factor, data=demdata)\nsummary(model_binary)\n\n# Met categorische predictor: \nmodel_categorical <- lm(v2x_polyarchy ~ Typeregime2006_factor, data=demdata)\nsummary(model_categorical)\n```\n\n::: callout-note\n#### Output uitleg\n\nDe output van een model met binaire/categorische predictor is dezelfde als die van een model met een continue predictor met 1 verschil. R zal de variabelenaam bij de coëfficiënten anders weergeven als er een factor variabele is. Dan krijg je de naam van de variabele, onmiddellijk gevolgd door de categorie die de waarde 1 aanneemt in de dummy. Bijvoorbeeld: \"TypeDemo1984_factorDemocracies\" or \"Typeregime2006_factorAutocracy.\"\n:::\n\nEr zijn subtiele verschillen in de interpretatie als een factor variabele opgenomen wordt in het model:\n\n::: callout-warning\n#### Interpretatie\n\nDe `Estimate` kolom toont de coëfficiënten van het regressiemodel.\n\nHet\"(Intercept)\" toont nog steeds de verwachte waarde op de afhankelijke variabele als de onafhankelijke variabele gelijk is aan 0. Als de enige onafhankelijke variabele een factor is dan toont het intercept de gemiddelde waarde op Y voor de referentiegroep (factor dummy = 0).\n\nHier vinden we dat de gemiddelde waarde voor `v2x_polyarchy` voor autocratieën (gemeten volgens de `TYPEDEMO1984_factor` variabele) gelijk is aan het Intercept dat we hierboven vonden.\n\n```{r}\ndemdata |> \n  filter(TYPEDEMO1984_factor == \"Autocracies\") |> # <1> \n  summarize(mean_democracy = mean(v2x_polyarchy, na.rm=T)) |> \n  as.data.frame() # <2>\n\n```\n\n1.  De filter verwijdert observaties die niet de waarde \"Autocracies\" hebben voor TYPEDEMO1984_factor\n2.  Deze optie dwingt R om alle decimalen weer te geven voor een betere vergelijking met het Intercept.\n\nDe coëfficiënten voor binaire en categorische variabelen worden best gezien als het verschil in de gemiddelde score voor Y tussen de referentiecategorie en andere categorieën. De coëfficiënt voor \"TYPEDEMO1984_factorDemocracies\" is bijvoorbeeld `r coef(model_binary)[2]`.[^linear_02-3] Dit betekent dat de gemiddelde score op Y voor democratieën `r coef(model_binary)[2]` schaalpunten groter is dan de gemiddelde waarde voor autocratieën (de referentiecategorie).\n\nWe kunnen dit wiskundig nagaan:\n\n```{r}\n# Gemiddelde voor democratieën\ndemdata |> \n  group_by(TYPEDEMO1984_factor) |> \n  summarize(mean_democracy = mean(v2x_polyarchy, na.rm = T)) |>\n  as.data.frame() \n\n# gemiddelde democratieën - gemiddelde autocratieën\n 0.6902456 - 0.4175698\n\n```\n\nHetzelfde geldt voor categorische factorvariabelen. De \"(Intercept)\" waarde in `model_categorical` is de gemiddelde waarde voor de observaties in de referentiecategorie (hier: \"Liberal Democracy\"). De coefficiënten tonen hoe de andere groepen verschillen van dit gemiddelde. De gemiddelde 2020 democratiescore voor landen die in 2006 een \"Electoral Democracy\" waren is `r round(coef(model_categorical)[2],2)` schaalpunten lager dan de gemiddelde 2020 democratiescore voor de \"Liberal Democracy\" referentiegroep.\n\n```{r}\ndemdata |> \n  group_by(Typeregime2006_factor) |> \n  summarize(mean_democracy = mean(v2x_polyarchy, na.rm=T)) |> \n  as.data.frame() \n\n# gemiddelde Elec Democracy - gemiddelde in Lib Democracy\n0.4329811 - 0.7540423\n\n# gemiddelde in Autocracy - gemiddelde in Lib Democracy\n0.2482683 - 0.7540423\n```\n\nZie @sec-reporting-linear-regression voor verdere informatie over hoe de resultaten te presenteren in taken en papers.\n:::\n\n[^linear_02-3]: Normaal ronden we af op 2 of 3 decimalen, maar hier tonen we de hele coëfficiënt zodat deze beter vergeleken kan worden met het verschil tussen de gemiddelden.\n","srcMarkdownNoYaml":"\n\n# Bivariate Regressie met Binaire en Categorische Predictoren {#sec-binary-predictors}\n\n```{r}\n#| label: setup\n#| echo: false\n#| message: false\n#| warning: false\n\nlibrary(rio)\nlibrary(tidyverse)\n\ndemdata <- import(\"data/demdata.rds\") |> \n  as_tibble() \n```\n\nIn het vorige hoofdstuk bespraken we hoe een lineaire regressieanalyse te gebruiken om de relatie tussen continue variabelen na te gaan. In dit hoofdstuk wordt uitgelegd hoe je een bivariate regressie kan uitvoeren met binaire en categorische variabelen.\n\nWe beginnen zoals gewoonlijk met het laden van relevante R packages ('libraries'). Deze packages zijn reeds geïnstalleerd op de universitaire computers, maar moeten eerst geladen worden. We laden ook onze dataset.\n\n```{r}\n#| eval: false\n\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(broom)           #samenvattingen regressiemodellen\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\ndemdata <- import(\"demdata.rds\") |> \n  as_tibble()\n```\n\n## Data Management: Converteren naar een factor variabele\n\nVia lineaire regressieanalyse kunnen we een continue afhankelijke variabele ook voorspellen aan de hand van binaire (2 waarden) en categorische (3 of meer waarden) variabelen.\n\nOm deze variabelen te gebruiken in een regressiemodel moeten ze toegevoegd worden als dichotome of \"[dummy](https://stats.oarc.ucla.edu/other/mult-pkg/faq/general/faqwhat-is-dummy-coding/){target=\"_blank\"}\" variabelen. Als de variabele binair is, wordt 1 dummy gebruikt, als de variabelen meer categorieën kent, worden meerdere dummies gebruikt.[^linear_02-1] R voegt automatisch dummies toe voor factor variabelen, dus transformeren we binaire en categorische variabelen naar factor variabelen voor we ze in een regressie analyse gebruiken.[^linear_02-2]\n\n[^linear_02-1]: We gebruiken k-1 dummies, waarbij k = aantal categorieën. Als een categorische variabele 4 categorieën heeft (Bijvoorbeeld: Noorden, Westen, Zuiden en Oosten), dan gebruiken we (4-1=) 3 dummies.\n\n[^linear_02-2]: Transformatie is niet nodig als de originele variabelen reeds opgeslaan zijn als factor in de dataset, maar misschien moet de referentiecategorie wel aangepast worden (zie verder).\n\nIn dit voorbeeld maken we gebruik van de variabele \"TYPEDEMO1984\". Deze binaire variabele toont of een land een democratie of autocratie was in het jaar 1984. De variabele is numeriek opgeslagen (dit kunnen we controleren met behulp van de functie `class()`). De waarde 1 staat voor autocratie, de waarde 2 voor democratie.\n\n```{r}\n#Informatie over type variabele: \nclass(demdata$TYPEDEMO1984)\n\n#simpele tabel\ntable(demdata$TYPEDEMO1984)\n```\n\nAangezien de variabele numeriek is, transformeren we deze eerst naar een factor variabele. We kunnen dit doen met de ingebouwde `factor()` functie (zie [Statistiek I, 1.6.3](https://poweleiden.github.io/statistiek1/data_01_basics.html#creating-variables-in-r){target=\"_blank\"}) of met de `factorize()` functie afkomstig uit het `rio` package. Deze laatste functie is vooral handig als de waarden labels hebben zoals hier het geval is ( 1 = \"Autocratie\", 2 = \"Democratie\"). Als er geen labels zijn, moet je `factor()` gebruiken gezien `factorize()` in dat geval niet de juiste uitkomsten geeft. Zie @sec-not-seeing-the-right-number-of-categories-for-factor-variables-in-regression-models voor meer informatie.\n\nDe labels kun je zien met behulp van de `view_df()` functie uit het `sjPlot` package (zie @sec-recall-peeking-inside-data-objects) of door gebruik te maken van de ingebouwde functie `attributes()` (vooraleer je transformeert naar factor): `attributes(demdata$TYPEDEMO1984)`. Daarbij kijk je of er informatie is waar \"\\$labels\" staat.\n\n```{r}\nattributes(demdata$TYPEDEMO1984)\n```\n\nWe gebruiken `factorize()` gezien de waarden van onze variabelen labels hebben (1 = \"Autocratie\", 2 = \"Democratie\"). We kijken ook na of de functie gelukt is.\n\n```{r}\n# transformeren naar factor\ndemdata <- demdata |> \n  mutate(TYPEDEMO1984_factor = factorize(TYPEDEMO1984))\n\n#Niveaus (levels) bekijken en tabel om te checken\nlevels(demdata$TYPEDEMO1984_factor)\ntable(demdata$TYPEDEMO1984_factor)\n\n```\n\nDe syntax is eenvoudig:\n\n`factorize(`\n\n:   Naam van de functie die wordt toegepast op de variabele tussen haakjes.\n\n`TYPEDEMO1984`\n\n:   Aangeduide variabele. Het laagste numerieke niveau van deze variabele zal als eerste niveau van de factor gebruikt worden en dus als referentiecategorie.\n\nDezelfde procedure wordt gehanteerd voor een categorische variabele met 3 of meer categorieën. Bijvoorbeeld, de variabele `Typeregime2006` geeft weer of een land een liberale democratie was (=1), een electorale democratie (=2), of een autocratie (=3) in het jaar 2006. Deze variabele heeft ook waarden-labels dus kunnen we opnieuw `factorize()` gebruiken:\n\n```{r}\n#transformeer naar factor variabele\ndemdata <- demdata |> \n  mutate(Typeregime2006_factor = factorize(Typeregime2006))\n\n#Werk checken\nlevels(demdata$Typeregime2006_factor)\ntable(demdata$Typeregime2006_factor)\n```\n\n::: callout-warning\n#### Waarschuwing!\n\nWe raden aan om nieuwe variabelen aan te maken wanneer je een bestaande variabele omzet naar een factorvariabele (of wanneer je hercodeert) zoals hiervoven (bv., `mutate(TYPEDEMO1984_factor = factorize(TYPEDEMO1984))`). Als je een nieuwe variabele aanmaakt, overschrijf je nooit de originele. Dit kan helpen om fouten makkelijker te corrigeren (zonder dat je dataset opnieuw moet inladen en eerdere syntax runnen).\n:::\n\n### Veranderen van de referentiecategorie {#sec-relevelling}\n\n`factorize()` gebruikt de eerste numerieke waarde als referentiegroep bij het maken van een factorvariabele. `factor()` doet dit ook, tenzij we expliciet de volgorde van de factorniveaus (levels) aanduiden in de syntax (zie het voorbeeld in @sec-not-seeing-the-right-number-of-categories-for-factor-variables-in-regression-models). \n\nIn elk geval kunnen we de referentiecategorie veranderen als we dat willen. Dit kunnen we doen met behulp van de `relevel()` functie. Hieronder veranderen we de referentiecategorie voor \"Typeregime2006_factor\" naar \"Electoral Democracy\".\n\n```{r}\ndemdata <- demdata |> \n  mutate(Typeregime2006_factor_relevel = relevel(Typeregime2006_factor, \"Electoral democracy\"))\n\n```\n\n`relevel(`\n\n:   Naam van de functie\n\n`Typeregime2006_factor,`\n\n:   We gebruiken \"Typeregime2006_factor\" uit de \"demdata\" dataset.\n\n`\"Electoral democracy\")`\n\n:   We geven de naam op van de categorie die we als referentiecategorie willen nemen tussen dubbele aanhalingstekens. We gebruiken de naam tussen aanhalingstekens omdat de variabele reeds hierboven naar een factor is omgezet, anders zou dit niet werken.\n\nWe checken altijd beter of alles goed is gegaan:\n\n```{r}\n#Checken:\nlevels(demdata$Typeregime2006_factor)\nlevels(demdata$Typeregime2006_factor_relevel)\n```\n\n## Factor variabelen als predictoren\n\nWe voegen binaire en categorische onafhankelijke variabelen toe aan de regressieanalyse op dezelfde manier als bij continue variabelen:\n\n```{r}\n# Met binaire predictor: \nmodel_binary <- lm(v2x_polyarchy ~ TYPEDEMO1984_factor, data=demdata)\nsummary(model_binary)\n\n# Met categorische predictor: \nmodel_categorical <- lm(v2x_polyarchy ~ Typeregime2006_factor, data=demdata)\nsummary(model_categorical)\n```\n\n::: callout-note\n#### Output uitleg\n\nDe output van een model met binaire/categorische predictor is dezelfde als die van een model met een continue predictor met 1 verschil. R zal de variabelenaam bij de coëfficiënten anders weergeven als er een factor variabele is. Dan krijg je de naam van de variabele, onmiddellijk gevolgd door de categorie die de waarde 1 aanneemt in de dummy. Bijvoorbeeld: \"TypeDemo1984_factorDemocracies\" or \"Typeregime2006_factorAutocracy.\"\n:::\n\nEr zijn subtiele verschillen in de interpretatie als een factor variabele opgenomen wordt in het model:\n\n::: callout-warning\n#### Interpretatie\n\nDe `Estimate` kolom toont de coëfficiënten van het regressiemodel.\n\nHet\"(Intercept)\" toont nog steeds de verwachte waarde op de afhankelijke variabele als de onafhankelijke variabele gelijk is aan 0. Als de enige onafhankelijke variabele een factor is dan toont het intercept de gemiddelde waarde op Y voor de referentiegroep (factor dummy = 0).\n\nHier vinden we dat de gemiddelde waarde voor `v2x_polyarchy` voor autocratieën (gemeten volgens de `TYPEDEMO1984_factor` variabele) gelijk is aan het Intercept dat we hierboven vonden.\n\n```{r}\ndemdata |> \n  filter(TYPEDEMO1984_factor == \"Autocracies\") |> # <1> \n  summarize(mean_democracy = mean(v2x_polyarchy, na.rm=T)) |> \n  as.data.frame() # <2>\n\n```\n\n1.  De filter verwijdert observaties die niet de waarde \"Autocracies\" hebben voor TYPEDEMO1984_factor\n2.  Deze optie dwingt R om alle decimalen weer te geven voor een betere vergelijking met het Intercept.\n\nDe coëfficiënten voor binaire en categorische variabelen worden best gezien als het verschil in de gemiddelde score voor Y tussen de referentiecategorie en andere categorieën. De coëfficiënt voor \"TYPEDEMO1984_factorDemocracies\" is bijvoorbeeld `r coef(model_binary)[2]`.[^linear_02-3] Dit betekent dat de gemiddelde score op Y voor democratieën `r coef(model_binary)[2]` schaalpunten groter is dan de gemiddelde waarde voor autocratieën (de referentiecategorie).\n\nWe kunnen dit wiskundig nagaan:\n\n```{r}\n# Gemiddelde voor democratieën\ndemdata |> \n  group_by(TYPEDEMO1984_factor) |> \n  summarize(mean_democracy = mean(v2x_polyarchy, na.rm = T)) |>\n  as.data.frame() \n\n# gemiddelde democratieën - gemiddelde autocratieën\n 0.6902456 - 0.4175698\n\n```\n\nHetzelfde geldt voor categorische factorvariabelen. De \"(Intercept)\" waarde in `model_categorical` is de gemiddelde waarde voor de observaties in de referentiecategorie (hier: \"Liberal Democracy\"). De coefficiënten tonen hoe de andere groepen verschillen van dit gemiddelde. De gemiddelde 2020 democratiescore voor landen die in 2006 een \"Electoral Democracy\" waren is `r round(coef(model_categorical)[2],2)` schaalpunten lager dan de gemiddelde 2020 democratiescore voor de \"Liberal Democracy\" referentiegroep.\n\n```{r}\ndemdata |> \n  group_by(Typeregime2006_factor) |> \n  summarize(mean_democracy = mean(v2x_polyarchy, na.rm=T)) |> \n  as.data.frame() \n\n# gemiddelde Elec Democracy - gemiddelde in Lib Democracy\n0.4329811 - 0.7540423\n\n# gemiddelde in Autocracy - gemiddelde in Lib Democracy\n0.2482683 - 0.7540423\n```\n\nZie @sec-reporting-linear-regression voor verdere informatie over hoe de resultaten te presenteren in taken en papers.\n:::\n\n[^linear_02-3]: Normaal ronden we af op 2 of 3 decimalen, maar hier tonen we de hele coëfficiënt zodat deze beter vergeleken kan worden met het verschil tussen de gemiddelden.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"linear_02.html"},"language":{"toc-title-document":"Inhoudsopgave","toc-title-website":"Op deze pagina","related-formats-title":"Andere formaten","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Bron","other-links-title":"Andere Links","code-links-title":"Code Links","launch-dev-container-title":"Dev Container starten","launch-binder-title":"Binder starten","article-notebook-label":"Artikel Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Broncode downloaden","notebook-preview-back":"Terug naar Artikel","manuscript-meca-bundle":"MECA Archief","section-title-abstract":"Samenvatting","section-title-appendices":"Bijlagen","section-title-footnotes":"Voetnoten","section-title-references":"Referenties","section-title-reuse":"Hergebruik","section-title-copyright":"Auteursrechten","section-title-citation":"Citaat","appendix-attribution-cite-as":"Citeer dit werk als:","appendix-attribution-bibtex":"BibTeX citaat:","appendix-view-license":"Licentie Bekijken","title-block-author-single":"Auteur","title-block-author-plural":"Auteurs","title-block-affiliation-single":"Affiliatie","title-block-affiliation-plural":"Affiliaties","title-block-published":"Publicatiedatum","title-block-modified":"Gewijzigd","title-block-keywords":"Trefwoorden","callout-tip-title":"Tip","callout-note-title":"Opmerking","callout-warning-title":"Waarschuwing","callout-important-title":"Belangrijk","callout-caution-title":"Opgelet","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Alle code tonen","code-tools-hide-all-code":"Alle code verbergen","code-tools-view-source":"Broncode bekijken","code-tools-source-code":"Broncode","tools-share":"Share","tools-download":"Download","code-line":"Regel","code-lines":"Regels","copy-button-tooltip":"Kopieer naar klembord","copy-button-tooltip-success":"Gekopieerd!","repo-action-links-edit":"Pagina bewerken","repo-action-links-source":"Broncode bekijken","repo-action-links-issue":"Een probleem melden","back-to-top":"Terug naar boven","search-no-results-text":"Geen resultaten","search-matching-documents-text":"Gevonden documenten","search-copy-link-title":"Kopieer link om te zoeken","search-hide-matches-text":"Extra overeenkomsten verbergen","search-more-match-text":"meer overeenkomst in dit document","search-more-matches-text":"meer overeenkomsten in dit document","search-clear-button-title":"Wissen","search-text-placeholder":"","search-detached-cancel-button-title":"Annuleren","search-submit-button-title":"Verzenden","search-label":"Zoeken","toggle-section":"Schakel sectie","toggle-sidebar":"Schakel zijbalknavigatie","toggle-dark-mode":"Schakel donkere modus","toggle-reader-mode":"Schakel leesmodus","toggle-navigation":"Schakel navigatie","crossref-fig-title":"Figuur","crossref-tbl-title":"Tabel","crossref-lst-title":"Listing","crossref-thm-title":"Stelling","crossref-lem-title":"Lemma","crossref-cor-title":"Conclusie","crossref-prp-title":"Voorstel","crossref-cnj-title":"Aanname","crossref-def-title":"Definitie","crossref-exm-title":"Voorbeeld","crossref-exr-title":"Oefening","crossref-ch-prefix":"Hoofdstuk","crossref-apx-prefix":"Bijlage","crossref-sec-prefix":"Paragraaf","crossref-eq-prefix":"Vergelijking","crossref-lof-title":"Lijst van figuren","crossref-lot-title":"Lijst van tabellen","crossref-lol-title":"Lijst van listings","environment-proof-title":"Bewijs","environment-remark-title":"Opmerking","environment-solution-title":"Oplossing","listing-page-order-by":"Sorteer op","listing-page-order-by-default":"Standaard","listing-page-order-by-date-asc":"Oudste","listing-page-order-by-date-desc":"Nieuwste","listing-page-order-by-number-desc":"Aflopend","listing-page-order-by-number-asc":"Oplopend","listing-page-field-date":"Datum","listing-page-field-title":"Titel","listing-page-field-description":"Beschrijving","listing-page-field-author":"Auteur","listing-page-field-filename":"Bestandsnaam","listing-page-field-filemodified":"Gewijzigd","listing-page-field-subtitle":"Subtitel","listing-page-field-readingtime":"Leestijd","listing-page-field-wordcount":"Woordentelling","listing-page-field-categories":"Categorieën","listing-page-minutes-compact":"{0} min","listing-page-category-all":"Alle","listing-page-no-matches":"Geen overeenkomsten","listing-page-words":"{0} woorden","listing-page-filter":"Filter","draft":"Ontwerp"},"metadata":{"lang":"nl","fig-responsive":true,"quarto-version":"1.5.57","bibliography":["references.bib"],"editor":"visual","theme":{"light":"cosmo","dark":"darkly"},"code-annotations":"hover","citation-location":"margin"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}