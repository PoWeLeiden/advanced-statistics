{"title":"Rapporteren en Presenteren van Resultaten","markdown":{"yaml":{"code-annotations":"hover"},"headingText":"Rapporteren en Presenteren van Resultaten","headingAttr":{"id":"sec-reporting-logit","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n```{r}\n#| label: setup\n#| echo: false\n#| message: false\n#| warning: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(broom)           #data voor residuals en influential cases\nlibrary(modelsummary)    #regressietabellen maken\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\n#Data\nESS9NL <- import(\"data/ESS9e03, Netherlands.sav\")\n```\n\nLogistische regressiemodellen moeten we net zoals lineaire modellen ook kunnen presenteren en uitleggen aan anderen. In dit hoofdstuk bespreken we de gangbare manieren om dit te doen.\n\nWe gebruiken deze packages en data:\n\n```{r}\n#| eval: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(broom)           #data voor residuals en influential cases\nlibrary(modelsummary)    #regressietabellen maken\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\n#Data\nESS9NL <- import(\"ESS9e03, Netherlands.sav\")\n```\n\nWe gebruiken onderstaand model in deze voorbeelden. Zie ook de vorige hoofdstukken voor verdere uitleg over dit model:\n\n```{r}\n#Data management\nESS9NL <- ESS9NL |>\n  #Factor maken van categorische variabelen\n  mutate(gndr_F = factorize(gndr), \n         vote_F = factorize(vote))  |> \n  #Not Eligible op missing zetten\n  mutate(vote_F = na_if(vote_F,\"Not eligible to vote\")) |> \n  #Relevel van variabelen\n  mutate(vote_F = relevel(vote_F, \"No\"), \n         gndr_F = relevel(gndr_F, \"Female\")) |> \n  #Droppen van extra level in gndr\n  mutate(gndr_F = droplevels(gndr_F)) # <1>\n\n#model schatten\nVote_model_mp <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = ESS9NL, family = \"binomial\")\n\n#output bekijken\nsummary(Vote_model_mp)\n```\n\n1.  Deze data management stap zorgt ervoor dat we straks de gemiddelde marginale effecten (AME) kunnen berekenen zonder error zie @sec-marginal-effects. Dit is niet nodig als je `factor()` gebruikt in plaats van `factorize()`.\n\n## Rapportage\n\nEen rapport van een logistisch regressiemodel bevat best de volgende zaken:\n\n-   Een bespreking van de richting van de relatie en wat dit concreet betekent (de codering van de variabelen inachtgenomen).\n    -   Bij een multiple regressie is het belangrijk te verduidelijken dat het effect dat je vindt voor een onafhankelijke variabele gecontroleerd is op de andere onafhankelijke variabelen in het model. Deze worden 'constant gehouden' (oftewel 'ceteris paribus').\n-   Een bespreking van de AMEs of voorspelde waarden om de sterkte van de associatie te duiden.\n-   Een bespreking van de statistische significantie (verwerpen of niet nulhypothese?) met vermelding van z-statistiek en p-waarde en/of het betrouwbaarheidsinterval.\n    -   Coëfficiënten met p-waarden groter dan 0.05 worden meestal niet als statistisch significant of als statistisch significant bij conventionele niveaus beschouwd.[^logit_06-1] Rapporteer op basis van het hoogste signficantieniveau dat de p-waarde aangeeft:\n        -   Als p = 0.04, dan p \\< 0.05 (significant op 95% niveau)\n        -   Als p = 0.02, dan p \\< 0.01 (significant op 99% niveau)\n        -   Als p = 0.0000005, dan p \\< 0.001 (significant op 99.9% niveau)\n        -   We rapporteren meestal niet hoger dan 99.9% of p \\< 0.001 (bv., we zeggen niet p \\< 0.000001, maar p \\< 0.001). We schrijven ook nooit p \\< 0.000.\n    -   Het betrouwbaarheidsinterval kan ook gebruikt worden om statistische significantie te bespreken en de onzekerheid rond de geschatte AMEs/voorspellingen aan te duiden. Als je het betrouwbaarheidsinterval bespreekt, kun je dit tussen haakjes toevoegen, bv. \"het gemiddelde marginale effect van leeftijd is 0.004 (95% CI: -0.006, 0.013)\".\n    -   Het is minder gebruikelijk de z-statistiek concreet te benoemen, maar het is ook geen probleem als je dit doet. Indien de z-waarde wordt opgenomen, zet je deze bij de p-waarde: \"(z = 1.18, p \\> 0.05)\".\n\n[^logit_06-1]: Als de N van het model laag is, kan eventueel een 90% niveau gebruikt worden.\n\nHieronder vind je een voorbeeld voor `gndr_F` (binaire factor) en `trstplt` (continue predictor) op basis van het hierboven geschatte model. Zie vorige hoofdstukken voor de berekening van de AME en odds ratio waarden voor deze variabelen.\n\n::: callout-tip\n#### Rapportagevoorbeeld\n\n**trstplt (AME)**: De kans dat iemand gaat stemmen is hoger als vertrouwen in politici hoger is. De kans neemt gemiddeld genomen met 2.3 percentpunten toe als vertouwen met 1 eenheid stijgt. De relatie is statistisch significant (p \\< 0.001).\n\n**gndr (AME)**: De kans om te stemmen is gemiddeld 0.5 percentpunten hoger voor mannen dan voor vrouwen. Deze relatie is echter niet statistisch significant (p = 0.78).\n\n**gndr (Odds Ratio)**: De odds om te stemmen voor mannen zijn 1.04 keer hoger dan die voor vrouwen. Het verschil is echter niet statistisch significant (p = 0.78).\n:::\n\nBijkomende richtlijnen voor besprekingen in papers:\n\n-   In je rapportage kun je ook een bespreking van de voorspelde waarden opnemen (bv. wat is de voorspelde kans dat iemand gaat stemmen bij lage en hoge niveaus van vetrouwen in politici?) Een plot van voorspelde waarden kan de bespreking verder verduidelijken. Zie @sec-presentation-predicted-probability-plots voor meer informatie.\n-   Als je onderzoek vooral gericht is op de relatie tussen een specifieke onafhankelijke variabele en de afhankelijke variabele dan is een discussie over de controlevariabelen doorgaans niet nodig.\n-   Het intercept wordt zelden besproken bij logistische regressies. Hte intercept is de odds op Y als alle predictoren gelijk zijn aan nul.\n-   Wees voorzichting in je bespreking van de relatie tussen de variabelen. Causaliteit is moeilijk te bepalen en is onderhevig aan sterke voorwaarden. Je schrijft bijgevolg dus meestal niet het \"effect van X op Y\" , maar \"de verandering in X is geassocieerd met de verandering in Y\".\n\n## Presentatie: Regressietabellen {#sec-presentation-regression-tables-logit}\n\nWe gebruiken de `modelsummary()` functie uit het `modelsummary` package om regressietabellen te produceren. De procedure en syntax is gelijkaardig aan die voor lineaire regressietabellen (zie @sec-presenting-linear-regression-regression-tables). Het belangrijkste verschil zit in de model fit statistieken.\n\n```{r}\nmodelsummary(Vote_model_mp,\n             stars = TRUE,\n             coef_rename = c(\"(Intercept)\" = \"Constante\",\n                             \"agea\" = \"Leeftijd\",\n                             \"gndr_FMale\" = \"Man\",\n                             \"trstplt\"= \"Vertrouwen in politici\",\n                             \"lrscale\" = \"links-recht positie\"),\n             gof_map = c(\"nobs\", \"logLik\"),\n             title = \"Opkomst in Nederland (ESS9)\",\n             notes = (\"Logistische regressiecoëfficiënten met standaardfouten tussen haakjes\"))\n```\n\n`gof_map = c(\"nobs\", \"logLik\")`\n\n:   We kunnen verschillende goodness-of-fit statistieken toevoegen aan de tabel. Hier beperken we ons tot het aantal observaties en de log likelihood. We kunnen alle statistieken weglaten met `gof_map = NA`. Het is meestal een goed idee een Pseudo R^2^ maatstaf als goodness-of-fit statistiek toe te voegen aan de tabel. `modelsummary()` voegt echter niet automatisch de Nagelkerke R^2^ toe. We kunnen deze wel manueel toevoegen aan de tabel in Word in een rij onder 'Log.Lik.'.\n\n### Tabellen met Odds Ratios\n\nOm odds ratios en hun betrouwbaarheidsintervallen in de regressietabel te presenteren moeten een aantal elementen toegevoegd worden. Vergeet in dit geval ook niet het onderschrift (`notes`) te veranderen.\n\n```{r}\nmodelsummary(Vote_model_mp,\n             exponentiate = TRUE, conf_level=0.95, #<1> \n             statistic = 'conf.int', #<2>\n             stars = TRUE,\n             coef_rename = c(\"(Intercept)\" = \"Constante\",\n                             \"agea\" = \"Leeftijd\",\n                             \"gndr_FMale\" = \"Man\",\n                             \"trstplt\"= \"Vertrouwen in politici\",\n                             \"lrscale\" = \"links-recht positie\"),\n             gof_map = c(\"nobs\", \"logLik\"),\n             title = \"Opkomst in Nederland (ESS9)\",\n             notes = (\"Odds ratios met 95% betrouwbaarheidsintervallen\"))\n```\n\n1.  Vraagt `modelsummary()` de logistische coëfficiënten te exponentiëren, wat de odds ratios oplevert.\n2.  Vraagt `modelsummary()` de 95% betrouwbaarheidsintervallen te produceren. Dit is gebruikelijk bij odds ratios.\n\n`exponentiate = TRUE,`\n\n:   Met deze code vragen we om de exponentiële coëfficiënten, i.e., de odds ratios.\n\n`conf_level=0.95,`\n\n:   Met deze code kunnen we het betrouwbaarheidsniveau aanpassen. Standaard is dit niveau 0.95. Als dit het gewenste niveau is, kan deze code ook worden weggelaten.\n\n`statistic = 'conf.int'`\n\n:   Met deze code vragen we om betrouwbaarheidsintervallen te presenteren en niet de standaardfouten (de default).\n\n## Presentatie: Plots van coëfficiënten (en odds ratios)\n\nWe kunnen de output ook presenteren in de vorm van een coëfficiëntenplot (eventueel met de volledige regressietabel in Appendix), net zoals bij lineaire regressiemodellen. De procedure wordt beschreven in @sec-presenting-linear-regression-coefficient-plots . Hier is een voorbeeld op basis van bovenstaand model:\n\n```{r}\ntidy(Vote_model_mp, conf.int = TRUE) |> # <1>\n  filter(term != \"(Intercept)\") |> #<2> \n  mutate(term = recode(term, # <3>\n                       \"gndr_FMale\" = \"Man\",\n                       \"agea\" = \"Leeftijd\",\n                       \"trstplt\" = \"Vertrouwen in politici\",\n                       \"lrscale\" = \"Links-rechts positie\")) |>\n  ggplot(aes(x= estimate, y= term)) +\n  geom_pointrange(aes(xmin=conf.low, \n                      xmax=conf.high)) +\n  labs(title = \"Opkomst in Nederland (ESS9)\", \n       y = \"Variabele\", \n       x = \"Logistische regressiecoëfficiënt\") + \n  geom_vline(xintercept=0, linetype=\"dashed\", color=\"red\") +\n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5, hjust = -0.1)\n\n```\n\n1.  We produceren het plot in 1 stap, gebruikmakend van de `|>` operator. Je zou de syntax echter kunnen opbreken in meerdere stappen: (1) `tidy`resultaten opslaan in nieuw object; (2) Hercoderen van de `term` variabelen in dat object; en (3) plot maken.\n2.  Het intercept wordt doorgaans niet getoond.\n3.  We zouden i.p.v. `recode()` ook eerst een factor kunnen maken van de `term`variabele met `factor()`. Daarmee zouden we labels kunnen toevoegen en de volgorde waarin de variabelen verschijnen kunnen aanpassen. Zie @sec-presenting-linear-regression-coefficient-plots.\n\nAls we odds ratios willen plotten vragen we eerts dat `tidy()` odds ratios produceert en vervolgens zetten we de referentielijn voor statistische significantie op 1. We veranderen ook het label op de x-as.:\n\n```{r}\ntidy(Vote_model_mp, conf.int = TRUE, exponentiate = TRUE) |>  # <1> \n  filter(term != \"(Intercept)\") |> \n  mutate(term = recode(term, \n                       \"gndr_FMale\" = \"Man\",\n                       \"agea\" = \"Leeftijd\",\n                       \"trstplt\" = \"Vertrouwen in politici\",\n                       \"lrscale\" = \"Links-rechts positie\")) |>\n  ggplot(aes(x= estimate, y= term)) +\n  geom_pointrange(aes(xmin=conf.low, \n                      xmax=conf.high)) +\n  labs(title = \"Opkomst in Nederland (ESS9)\", \n       y = \"Variabele\", \n       x = \"Odds Ratio\") + \n  geom_vline(xintercept = 1, linetype = 'dashed', color ='red') + # <2>\n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5)\n```\n\n1.  `exponentiate = TRUE` voor de odds ratios\n2.  Odds ratios zijn multiplicatief. Daarom moet de referentielijn op 1 komen te staan\n\n### Instructies\n\n-   Meestal plaats je de coëfficiënt op de x-as en de naam van de variabele op de y-as. Het is mogelijk dit te veranderen met de `ggplot` syntax, maar dan kunnen de variabelenamen makkelijker overlappen. Lange variabelennamen leiden wel vaker tot problemen met de visualisatie (in deze [blog](https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/) vind je enkele tips).\n-   Standaard plot `ggplot` de coëfficiënten in alfabetische volgorde. Dit kan ervoor zorgen dat variabelen die bij elkaar horen (bv. meerdere dummies van 1 onderliggende categorische variabele) niet bij elkaar staan in het plot (zoals in het voorbeeld hierboven). We kunnen de volgorde aanpassen als we de `term` variabele omzetten in een factor variabele en de volgorde van de levels zelf bepalen. Zie @sec-presenting-linear-regression-coefficient-plots\n-   Het toevoegen van de (afgeronde) coëfficiënt-waarde kan lezers helpen de resultaten beter te vatten.\n-   Meestal plotten we de 95% betrouwbaarheidsintervallen, maar dit kan aangepast worden (we kunnen `tidy` om andere niveaus vragen).\n-   In een rapport voeg je best een notitie onderaan de figuur toe, bv. \"Notitie: OLS coëfficiënten met 95% betrouwbaarheidsinterval\".\n-   Het is handig en gebruikelijk een referentielijn toe te voegen die nul aanduidt want dan kan statistische significantie (hier: bij p \\< 0.05) onmiddellijk afgelezen worden.\n\n## Presentatie: AME Plots\n\nWe kunnen ook de gemiddelde marginale effect ( average marginal effects, AME) plotten. Dit kan het meest informatieve zijn voor lezers gezien deze waarden in termen van probabiliteiten geïnterpreteerd kunnen worden. De procedure is gelijkaardig aan die voor coëfficiëntenplots, maar in plaats van `tidy()` gebruiken we de `avg_slopes()` functie uit het `marginaleffects` package:\n\n```{r}\navg_slopes(Vote_model_mp) |> # <1>\n  mutate(term = recode(term, #<2>\n                       \"gndr_F\" = \"Man\", #<3> \n                       \"agea\" = \"Leeftijd\",\n                       \"trstplt\" = \"Vertrouwen in politici\",\n                       \"lrscale\" = \"Links-rechts positie\")) |>\n  ggplot(aes(x = estimate, y = term)) + \n  geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) + \n  labs(title = \"Opkomst in Nederland (ESS9)\", \n       y = \"Variabele\", \n       x = \"Gemiddelde Marginale Effect\") + \n  geom_vline(xintercept = 0, linetype = 'dashed', color ='red') + \n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5)\n  \n```\n\n1.  We produceren het plot in 1 stap, gebruikmakend van de `|>` operator. Je zou de syntax echter kunnen opbreken in meerdere stappen: (1) `avg_slopes`resultaten opslaan in nieuw object; (2) Hercoderen van de `term` variabelen in dat object; en (3) plot\n2.  We zouden i.p.v. `recode()` ook eerst een factor kunnen maken van de `term`variabele met `factor()`. Daarmee zouden we labels kunnen toevoegen en de volgorde waarin de variabelen verschijnen kunnen aanpassen. Zie @sec-presenting-linear-regression-coefficient-plots.\n3.  `avg_slopes()` combineert niet de variabelenaam en de categorielabel bij factor variabelen in `term` (bv. het toont `gndr` in plaats van `gndrMale`).\n\nBovenstaand voorbeeld plot probabiliteiten lopende van 0 tot 1. Met de afronding op 2 decimalen vinden we gewoon een waarde van 0 voor links-rechtspositie en leeftijd. Dit is niet zo handig. We kunnen de resultaten ook in percentpunten uitdrukken wanneer we de AME (`estimate`) en de betrouwbaarheidsintervallen (`conf.low`, `conf.high`) met 100 vermenigvuldigen:\n\n```{r}\navg_slopes(Vote_model_mp) |> \n   mutate(term = recode(term, #<2>\n                       \"gndr_F\" = \"Man\", #<3> \n                       \"agea\" = \"Leeftijd\",\n                       \"trstplt\" = \"Vertrouwen in politici\",\n                       \"lrscale\" = \"Links-rechts positie\"), \n         estimate = estimate * 100, \n         conf.low = conf.low * 100,\n         conf.high = conf.high * 100) |> \n  ggplot(aes(x = estimate, y = term)) + \n  geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) + \n  labs(title = \"Opkomst in Nederland (ESS9)\", \n       y = \"Variabele\", \n       x = \"Gemiddelde Marginale Effect (Percentpunten)\") + \n  geom_vline(xintercept = 0, linetype = 'dashed', color ='red') + \n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5)\n\n```\n\n### Instructies\n\nDe richtlijnen voor coëfficiënteplots worden ook hier gehanteerd (zie boven en @sec-presenting-linear-regression-coefficient-plots).\n\n## Presentatie: Plots van Voorspelde Waarden {#sec-presentation-predicted-probability-plots}\n\nTen slotte kunnen we de resultaten van een model ook grafisch presenteren met behulp van voorspelde waarden. We zagen eerder hoe we de voorspelde waarden plotten voor specifieke waarden van een continue of categorische onafhankelijke variabele in een lineair regressiemodel (see @sec-presenting-linear-regression-predicted-values-plots). Nu doen we hetzelfde voor logistische modellen.\n\n### Continue onafhankelijke variabele\n\nDe output van het model toonde dat stemmen waarschijnlijker wordt naarmate mensen meer vertouwen hebben in politici. De AME toonde dat de stijging gemiddeld 2.3 percentpunten was per eenheid vertrouwen. Maar hoeveel impact heeft dit dan echt op stemgedrag? Gaat men van heel onwaarschijnlijk tot zeer waarschijnlijk om te stemmen? Een plot kan helpen dit te verduidelijken.\n\nWe beginnen met de `predictions()` functie om de voorspelde kansen te berekenen bij verschillende waarden van vertrouwen in politici (`trstplt`).\n\n```{r}\n#Voorspellingen opslaan\nPred_conts <- predictions(Vote_model_mp, \n                          newdata = datagrid(trstplt = seq(from = 0, to = 10, by = 2))) # <1>\n#en bekijken\ntibble(Pred_conts)\n```\n\n1.  We zouden `predictions()` ook intervallen van 1pt kunnen laten berekenen, maar dit is doorgaans niet nodig. `ggplot()` verbindt de punten in een lijn.\n\nWe voeren deze data door naar `ggplot()` zoals we voorheen ook bij lineaire regressie deden:\n\n```{r}\nggplot(Pred_conts, aes(x = trstplt, y = estimate)) +   # <1> \n  geom_line() +                                        # <2> \n  geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.2) +  # <3>\n  labs(title = \"Vertrouwen en opkomst in Nederland\", # <4> \n             x = \"Vertrouwen in politici\", \n       y = \"Voorspelde kans om te stemmen\")\n```\n\n1.  Zegt `ggplot()` welke data te gebruiken (`Pred_conts`) en wat op de x- (`trstplt`) en y-as (`estimate`) te zetten.\n2.  Zegt `ggplot()` dat we een verbindingslijn willen tussen de voorspellingen.\n3.  Zegt `ggplot()` dat we een band met betrouwbaarheidsintervallen willen en hoe donker de kleur daarvan mag zijn (`alpha = 0.2`).\n4.  Informatieve labels.\n\nWe zouden ook de schaal van y kunnen aanpassen om het volledige theoretische bereik van probabiliteiten (0 tot 1) weer te geven, indien we denken dat resultaten misleidend kunnen zijn zonder deze aanpassing:\n\n```{r}\nggplot(Pred_conts, aes(x = trstplt, y = estimate)) +   \n  geom_line() +                                        \n  geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.2) +  \n  labs(title = \"Vertrouwen en opkomst in Nederland\",\n             x = \"Vertrouwen in politici\", \n       y = \"Voorspelde kans om te stemmen\") + \n  scale_y_continuous(limits = c(0,1))\n```\n\n### Factor onafhankelijke variabele\n\nWe kunnen deze syntax gebruiken voor predictors die factors zijn:\n\n```{r}\n#Voorspellingen opslaan\nPred_cat <- predictions(Vote_model_mp, by = \"gndr_F\", newdata = \"mean\") \n\n#en bekijken\ntibble(Pred_cat)\n```\n\nDe data wordt dan naar een plot overgezet:\n\n```{r}\nggplot(Pred_cat, aes(x= gndr_F, y= estimate)) +   \n  geom_pointrange(aes(ymin=conf.low, ymax=conf.high)) +  \n  labs(title = \"Gender en opkomst in Nederland\", \n       x = \"Gender\",\n       y = \"Voorspelde kans om te stemmen\") +\n  geom_text(aes(label = round(estimate, 2)), hjust = -0.25) +\n  scale_x_discrete(labels = c(\"Male\" = \"Man\", \"Female\" = \"Vrouw\"))\n```\n\n### Instructies\n\n-   Welke variabelen en waarden plot je?\n    -   Als de variabele binair/categorisch is, gebruik je alle categorieën die relevant zijn voor de discussie.\n    -   Als de variabele continue is gebruik je het minimum en maximum met redelijke tussenintervallen. Om het minimum en maximum te bepalen kijk je naar de data voor de observaties gebruikt in het model (dit is niet noodzakelijk de volledige dataset gezien observaties kunnen wegvallen door missing waarden). Met de `predictions()` kun je gemakkelijk een dataset aanmaken met alle observaties gebruikt in het model en vervolgens gebruik je `summary` om minimum en maximum te bepalen (zie @sec-predictions-for-a-continuous-predictor-variable).\n-   We gebruiken een lijn met betrouwbaarheidsintervallen voor continue predictoren; voor categorische doen we beroep op `geom_pointrange()` of `geom_errorbar()`.\n-   De y-schaal verdient bijzonder aandacht bij dit soort plots. In het eerste voorbeeld (continue predictor) wordt `scale_y_continuous()` gebruikt om ervoor te zorgen dat het plot het volledige bereik van de afhankelijke variabele (kans om te stemmen) omvat. Het tweede voorbeeld (categorische predictor) laat de keuze aan `ggplot()`. Soms maakt `ggplot()` de schaal kleiner om ongebruikte ruimte weg te laten, maar dan kan een effect groter lijken dan het is. Deze aanpak heeft ook wel nadelen, bijvoorbeeld juist veel ongebruikte ruimte in een plot en minder duidelijke visualisatie. Socioloog Kieran Healy geeft een verdere [bespreking](https://socviz.co/lookatdata.html#problems-of-honesty-and-good-judgment) over deze verschillende manieren om de schaal vorm te geven in zijn boek over datavisualisatie.\n","srcMarkdownNoYaml":"\n\n# Rapporteren en Presenteren van Resultaten {#sec-reporting-logit}\n\n```{r}\n#| label: setup\n#| echo: false\n#| message: false\n#| warning: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(broom)           #data voor residuals en influential cases\nlibrary(modelsummary)    #regressietabellen maken\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\n#Data\nESS9NL <- import(\"data/ESS9e03, Netherlands.sav\")\n```\n\nLogistische regressiemodellen moeten we net zoals lineaire modellen ook kunnen presenteren en uitleggen aan anderen. In dit hoofdstuk bespreken we de gangbare manieren om dit te doen.\n\nWe gebruiken deze packages en data:\n\n```{r}\n#| eval: false\n\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(broom)           #data voor residuals en influential cases\nlibrary(modelsummary)    #regressietabellen maken\nlibrary(marginaleffects) #voorspelde waarden berekenen\n\n#Data\nESS9NL <- import(\"ESS9e03, Netherlands.sav\")\n```\n\nWe gebruiken onderstaand model in deze voorbeelden. Zie ook de vorige hoofdstukken voor verdere uitleg over dit model:\n\n```{r}\n#Data management\nESS9NL <- ESS9NL |>\n  #Factor maken van categorische variabelen\n  mutate(gndr_F = factorize(gndr), \n         vote_F = factorize(vote))  |> \n  #Not Eligible op missing zetten\n  mutate(vote_F = na_if(vote_F,\"Not eligible to vote\")) |> \n  #Relevel van variabelen\n  mutate(vote_F = relevel(vote_F, \"No\"), \n         gndr_F = relevel(gndr_F, \"Female\")) |> \n  #Droppen van extra level in gndr\n  mutate(gndr_F = droplevels(gndr_F)) # <1>\n\n#model schatten\nVote_model_mp <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = ESS9NL, family = \"binomial\")\n\n#output bekijken\nsummary(Vote_model_mp)\n```\n\n1.  Deze data management stap zorgt ervoor dat we straks de gemiddelde marginale effecten (AME) kunnen berekenen zonder error zie @sec-marginal-effects. Dit is niet nodig als je `factor()` gebruikt in plaats van `factorize()`.\n\n## Rapportage\n\nEen rapport van een logistisch regressiemodel bevat best de volgende zaken:\n\n-   Een bespreking van de richting van de relatie en wat dit concreet betekent (de codering van de variabelen inachtgenomen).\n    -   Bij een multiple regressie is het belangrijk te verduidelijken dat het effect dat je vindt voor een onafhankelijke variabele gecontroleerd is op de andere onafhankelijke variabelen in het model. Deze worden 'constant gehouden' (oftewel 'ceteris paribus').\n-   Een bespreking van de AMEs of voorspelde waarden om de sterkte van de associatie te duiden.\n-   Een bespreking van de statistische significantie (verwerpen of niet nulhypothese?) met vermelding van z-statistiek en p-waarde en/of het betrouwbaarheidsinterval.\n    -   Coëfficiënten met p-waarden groter dan 0.05 worden meestal niet als statistisch significant of als statistisch significant bij conventionele niveaus beschouwd.[^logit_06-1] Rapporteer op basis van het hoogste signficantieniveau dat de p-waarde aangeeft:\n        -   Als p = 0.04, dan p \\< 0.05 (significant op 95% niveau)\n        -   Als p = 0.02, dan p \\< 0.01 (significant op 99% niveau)\n        -   Als p = 0.0000005, dan p \\< 0.001 (significant op 99.9% niveau)\n        -   We rapporteren meestal niet hoger dan 99.9% of p \\< 0.001 (bv., we zeggen niet p \\< 0.000001, maar p \\< 0.001). We schrijven ook nooit p \\< 0.000.\n    -   Het betrouwbaarheidsinterval kan ook gebruikt worden om statistische significantie te bespreken en de onzekerheid rond de geschatte AMEs/voorspellingen aan te duiden. Als je het betrouwbaarheidsinterval bespreekt, kun je dit tussen haakjes toevoegen, bv. \"het gemiddelde marginale effect van leeftijd is 0.004 (95% CI: -0.006, 0.013)\".\n    -   Het is minder gebruikelijk de z-statistiek concreet te benoemen, maar het is ook geen probleem als je dit doet. Indien de z-waarde wordt opgenomen, zet je deze bij de p-waarde: \"(z = 1.18, p \\> 0.05)\".\n\n[^logit_06-1]: Als de N van het model laag is, kan eventueel een 90% niveau gebruikt worden.\n\nHieronder vind je een voorbeeld voor `gndr_F` (binaire factor) en `trstplt` (continue predictor) op basis van het hierboven geschatte model. Zie vorige hoofdstukken voor de berekening van de AME en odds ratio waarden voor deze variabelen.\n\n::: callout-tip\n#### Rapportagevoorbeeld\n\n**trstplt (AME)**: De kans dat iemand gaat stemmen is hoger als vertrouwen in politici hoger is. De kans neemt gemiddeld genomen met 2.3 percentpunten toe als vertouwen met 1 eenheid stijgt. De relatie is statistisch significant (p \\< 0.001).\n\n**gndr (AME)**: De kans om te stemmen is gemiddeld 0.5 percentpunten hoger voor mannen dan voor vrouwen. Deze relatie is echter niet statistisch significant (p = 0.78).\n\n**gndr (Odds Ratio)**: De odds om te stemmen voor mannen zijn 1.04 keer hoger dan die voor vrouwen. Het verschil is echter niet statistisch significant (p = 0.78).\n:::\n\nBijkomende richtlijnen voor besprekingen in papers:\n\n-   In je rapportage kun je ook een bespreking van de voorspelde waarden opnemen (bv. wat is de voorspelde kans dat iemand gaat stemmen bij lage en hoge niveaus van vetrouwen in politici?) Een plot van voorspelde waarden kan de bespreking verder verduidelijken. Zie @sec-presentation-predicted-probability-plots voor meer informatie.\n-   Als je onderzoek vooral gericht is op de relatie tussen een specifieke onafhankelijke variabele en de afhankelijke variabele dan is een discussie over de controlevariabelen doorgaans niet nodig.\n-   Het intercept wordt zelden besproken bij logistische regressies. Hte intercept is de odds op Y als alle predictoren gelijk zijn aan nul.\n-   Wees voorzichting in je bespreking van de relatie tussen de variabelen. Causaliteit is moeilijk te bepalen en is onderhevig aan sterke voorwaarden. Je schrijft bijgevolg dus meestal niet het \"effect van X op Y\" , maar \"de verandering in X is geassocieerd met de verandering in Y\".\n\n## Presentatie: Regressietabellen {#sec-presentation-regression-tables-logit}\n\nWe gebruiken de `modelsummary()` functie uit het `modelsummary` package om regressietabellen te produceren. De procedure en syntax is gelijkaardig aan die voor lineaire regressietabellen (zie @sec-presenting-linear-regression-regression-tables). Het belangrijkste verschil zit in de model fit statistieken.\n\n```{r}\nmodelsummary(Vote_model_mp,\n             stars = TRUE,\n             coef_rename = c(\"(Intercept)\" = \"Constante\",\n                             \"agea\" = \"Leeftijd\",\n                             \"gndr_FMale\" = \"Man\",\n                             \"trstplt\"= \"Vertrouwen in politici\",\n                             \"lrscale\" = \"links-recht positie\"),\n             gof_map = c(\"nobs\", \"logLik\"),\n             title = \"Opkomst in Nederland (ESS9)\",\n             notes = (\"Logistische regressiecoëfficiënten met standaardfouten tussen haakjes\"))\n```\n\n`gof_map = c(\"nobs\", \"logLik\")`\n\n:   We kunnen verschillende goodness-of-fit statistieken toevoegen aan de tabel. Hier beperken we ons tot het aantal observaties en de log likelihood. We kunnen alle statistieken weglaten met `gof_map = NA`. Het is meestal een goed idee een Pseudo R^2^ maatstaf als goodness-of-fit statistiek toe te voegen aan de tabel. `modelsummary()` voegt echter niet automatisch de Nagelkerke R^2^ toe. We kunnen deze wel manueel toevoegen aan de tabel in Word in een rij onder 'Log.Lik.'.\n\n### Tabellen met Odds Ratios\n\nOm odds ratios en hun betrouwbaarheidsintervallen in de regressietabel te presenteren moeten een aantal elementen toegevoegd worden. Vergeet in dit geval ook niet het onderschrift (`notes`) te veranderen.\n\n```{r}\nmodelsummary(Vote_model_mp,\n             exponentiate = TRUE, conf_level=0.95, #<1> \n             statistic = 'conf.int', #<2>\n             stars = TRUE,\n             coef_rename = c(\"(Intercept)\" = \"Constante\",\n                             \"agea\" = \"Leeftijd\",\n                             \"gndr_FMale\" = \"Man\",\n                             \"trstplt\"= \"Vertrouwen in politici\",\n                             \"lrscale\" = \"links-recht positie\"),\n             gof_map = c(\"nobs\", \"logLik\"),\n             title = \"Opkomst in Nederland (ESS9)\",\n             notes = (\"Odds ratios met 95% betrouwbaarheidsintervallen\"))\n```\n\n1.  Vraagt `modelsummary()` de logistische coëfficiënten te exponentiëren, wat de odds ratios oplevert.\n2.  Vraagt `modelsummary()` de 95% betrouwbaarheidsintervallen te produceren. Dit is gebruikelijk bij odds ratios.\n\n`exponentiate = TRUE,`\n\n:   Met deze code vragen we om de exponentiële coëfficiënten, i.e., de odds ratios.\n\n`conf_level=0.95,`\n\n:   Met deze code kunnen we het betrouwbaarheidsniveau aanpassen. Standaard is dit niveau 0.95. Als dit het gewenste niveau is, kan deze code ook worden weggelaten.\n\n`statistic = 'conf.int'`\n\n:   Met deze code vragen we om betrouwbaarheidsintervallen te presenteren en niet de standaardfouten (de default).\n\n## Presentatie: Plots van coëfficiënten (en odds ratios)\n\nWe kunnen de output ook presenteren in de vorm van een coëfficiëntenplot (eventueel met de volledige regressietabel in Appendix), net zoals bij lineaire regressiemodellen. De procedure wordt beschreven in @sec-presenting-linear-regression-coefficient-plots . Hier is een voorbeeld op basis van bovenstaand model:\n\n```{r}\ntidy(Vote_model_mp, conf.int = TRUE) |> # <1>\n  filter(term != \"(Intercept)\") |> #<2> \n  mutate(term = recode(term, # <3>\n                       \"gndr_FMale\" = \"Man\",\n                       \"agea\" = \"Leeftijd\",\n                       \"trstplt\" = \"Vertrouwen in politici\",\n                       \"lrscale\" = \"Links-rechts positie\")) |>\n  ggplot(aes(x= estimate, y= term)) +\n  geom_pointrange(aes(xmin=conf.low, \n                      xmax=conf.high)) +\n  labs(title = \"Opkomst in Nederland (ESS9)\", \n       y = \"Variabele\", \n       x = \"Logistische regressiecoëfficiënt\") + \n  geom_vline(xintercept=0, linetype=\"dashed\", color=\"red\") +\n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5, hjust = -0.1)\n\n```\n\n1.  We produceren het plot in 1 stap, gebruikmakend van de `|>` operator. Je zou de syntax echter kunnen opbreken in meerdere stappen: (1) `tidy`resultaten opslaan in nieuw object; (2) Hercoderen van de `term` variabelen in dat object; en (3) plot maken.\n2.  Het intercept wordt doorgaans niet getoond.\n3.  We zouden i.p.v. `recode()` ook eerst een factor kunnen maken van de `term`variabele met `factor()`. Daarmee zouden we labels kunnen toevoegen en de volgorde waarin de variabelen verschijnen kunnen aanpassen. Zie @sec-presenting-linear-regression-coefficient-plots.\n\nAls we odds ratios willen plotten vragen we eerts dat `tidy()` odds ratios produceert en vervolgens zetten we de referentielijn voor statistische significantie op 1. We veranderen ook het label op de x-as.:\n\n```{r}\ntidy(Vote_model_mp, conf.int = TRUE, exponentiate = TRUE) |>  # <1> \n  filter(term != \"(Intercept)\") |> \n  mutate(term = recode(term, \n                       \"gndr_FMale\" = \"Man\",\n                       \"agea\" = \"Leeftijd\",\n                       \"trstplt\" = \"Vertrouwen in politici\",\n                       \"lrscale\" = \"Links-rechts positie\")) |>\n  ggplot(aes(x= estimate, y= term)) +\n  geom_pointrange(aes(xmin=conf.low, \n                      xmax=conf.high)) +\n  labs(title = \"Opkomst in Nederland (ESS9)\", \n       y = \"Variabele\", \n       x = \"Odds Ratio\") + \n  geom_vline(xintercept = 1, linetype = 'dashed', color ='red') + # <2>\n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5)\n```\n\n1.  `exponentiate = TRUE` voor de odds ratios\n2.  Odds ratios zijn multiplicatief. Daarom moet de referentielijn op 1 komen te staan\n\n### Instructies\n\n-   Meestal plaats je de coëfficiënt op de x-as en de naam van de variabele op de y-as. Het is mogelijk dit te veranderen met de `ggplot` syntax, maar dan kunnen de variabelenamen makkelijker overlappen. Lange variabelennamen leiden wel vaker tot problemen met de visualisatie (in deze [blog](https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/) vind je enkele tips).\n-   Standaard plot `ggplot` de coëfficiënten in alfabetische volgorde. Dit kan ervoor zorgen dat variabelen die bij elkaar horen (bv. meerdere dummies van 1 onderliggende categorische variabele) niet bij elkaar staan in het plot (zoals in het voorbeeld hierboven). We kunnen de volgorde aanpassen als we de `term` variabele omzetten in een factor variabele en de volgorde van de levels zelf bepalen. Zie @sec-presenting-linear-regression-coefficient-plots\n-   Het toevoegen van de (afgeronde) coëfficiënt-waarde kan lezers helpen de resultaten beter te vatten.\n-   Meestal plotten we de 95% betrouwbaarheidsintervallen, maar dit kan aangepast worden (we kunnen `tidy` om andere niveaus vragen).\n-   In een rapport voeg je best een notitie onderaan de figuur toe, bv. \"Notitie: OLS coëfficiënten met 95% betrouwbaarheidsinterval\".\n-   Het is handig en gebruikelijk een referentielijn toe te voegen die nul aanduidt want dan kan statistische significantie (hier: bij p \\< 0.05) onmiddellijk afgelezen worden.\n\n## Presentatie: AME Plots\n\nWe kunnen ook de gemiddelde marginale effect ( average marginal effects, AME) plotten. Dit kan het meest informatieve zijn voor lezers gezien deze waarden in termen van probabiliteiten geïnterpreteerd kunnen worden. De procedure is gelijkaardig aan die voor coëfficiëntenplots, maar in plaats van `tidy()` gebruiken we de `avg_slopes()` functie uit het `marginaleffects` package:\n\n```{r}\navg_slopes(Vote_model_mp) |> # <1>\n  mutate(term = recode(term, #<2>\n                       \"gndr_F\" = \"Man\", #<3> \n                       \"agea\" = \"Leeftijd\",\n                       \"trstplt\" = \"Vertrouwen in politici\",\n                       \"lrscale\" = \"Links-rechts positie\")) |>\n  ggplot(aes(x = estimate, y = term)) + \n  geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) + \n  labs(title = \"Opkomst in Nederland (ESS9)\", \n       y = \"Variabele\", \n       x = \"Gemiddelde Marginale Effect\") + \n  geom_vline(xintercept = 0, linetype = 'dashed', color ='red') + \n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5)\n  \n```\n\n1.  We produceren het plot in 1 stap, gebruikmakend van de `|>` operator. Je zou de syntax echter kunnen opbreken in meerdere stappen: (1) `avg_slopes`resultaten opslaan in nieuw object; (2) Hercoderen van de `term` variabelen in dat object; en (3) plot\n2.  We zouden i.p.v. `recode()` ook eerst een factor kunnen maken van de `term`variabele met `factor()`. Daarmee zouden we labels kunnen toevoegen en de volgorde waarin de variabelen verschijnen kunnen aanpassen. Zie @sec-presenting-linear-regression-coefficient-plots.\n3.  `avg_slopes()` combineert niet de variabelenaam en de categorielabel bij factor variabelen in `term` (bv. het toont `gndr` in plaats van `gndrMale`).\n\nBovenstaand voorbeeld plot probabiliteiten lopende van 0 tot 1. Met de afronding op 2 decimalen vinden we gewoon een waarde van 0 voor links-rechtspositie en leeftijd. Dit is niet zo handig. We kunnen de resultaten ook in percentpunten uitdrukken wanneer we de AME (`estimate`) en de betrouwbaarheidsintervallen (`conf.low`, `conf.high`) met 100 vermenigvuldigen:\n\n```{r}\navg_slopes(Vote_model_mp) |> \n   mutate(term = recode(term, #<2>\n                       \"gndr_F\" = \"Man\", #<3> \n                       \"agea\" = \"Leeftijd\",\n                       \"trstplt\" = \"Vertrouwen in politici\",\n                       \"lrscale\" = \"Links-rechts positie\"), \n         estimate = estimate * 100, \n         conf.low = conf.low * 100,\n         conf.high = conf.high * 100) |> \n  ggplot(aes(x = estimate, y = term)) + \n  geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) + \n  labs(title = \"Opkomst in Nederland (ESS9)\", \n       y = \"Variabele\", \n       x = \"Gemiddelde Marginale Effect (Percentpunten)\") + \n  geom_vline(xintercept = 0, linetype = 'dashed', color ='red') + \n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5)\n\n```\n\n### Instructies\n\nDe richtlijnen voor coëfficiënteplots worden ook hier gehanteerd (zie boven en @sec-presenting-linear-regression-coefficient-plots).\n\n## Presentatie: Plots van Voorspelde Waarden {#sec-presentation-predicted-probability-plots}\n\nTen slotte kunnen we de resultaten van een model ook grafisch presenteren met behulp van voorspelde waarden. We zagen eerder hoe we de voorspelde waarden plotten voor specifieke waarden van een continue of categorische onafhankelijke variabele in een lineair regressiemodel (see @sec-presenting-linear-regression-predicted-values-plots). Nu doen we hetzelfde voor logistische modellen.\n\n### Continue onafhankelijke variabele\n\nDe output van het model toonde dat stemmen waarschijnlijker wordt naarmate mensen meer vertouwen hebben in politici. De AME toonde dat de stijging gemiddeld 2.3 percentpunten was per eenheid vertrouwen. Maar hoeveel impact heeft dit dan echt op stemgedrag? Gaat men van heel onwaarschijnlijk tot zeer waarschijnlijk om te stemmen? Een plot kan helpen dit te verduidelijken.\n\nWe beginnen met de `predictions()` functie om de voorspelde kansen te berekenen bij verschillende waarden van vertrouwen in politici (`trstplt`).\n\n```{r}\n#Voorspellingen opslaan\nPred_conts <- predictions(Vote_model_mp, \n                          newdata = datagrid(trstplt = seq(from = 0, to = 10, by = 2))) # <1>\n#en bekijken\ntibble(Pred_conts)\n```\n\n1.  We zouden `predictions()` ook intervallen van 1pt kunnen laten berekenen, maar dit is doorgaans niet nodig. `ggplot()` verbindt de punten in een lijn.\n\nWe voeren deze data door naar `ggplot()` zoals we voorheen ook bij lineaire regressie deden:\n\n```{r}\nggplot(Pred_conts, aes(x = trstplt, y = estimate)) +   # <1> \n  geom_line() +                                        # <2> \n  geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.2) +  # <3>\n  labs(title = \"Vertrouwen en opkomst in Nederland\", # <4> \n             x = \"Vertrouwen in politici\", \n       y = \"Voorspelde kans om te stemmen\")\n```\n\n1.  Zegt `ggplot()` welke data te gebruiken (`Pred_conts`) en wat op de x- (`trstplt`) en y-as (`estimate`) te zetten.\n2.  Zegt `ggplot()` dat we een verbindingslijn willen tussen de voorspellingen.\n3.  Zegt `ggplot()` dat we een band met betrouwbaarheidsintervallen willen en hoe donker de kleur daarvan mag zijn (`alpha = 0.2`).\n4.  Informatieve labels.\n\nWe zouden ook de schaal van y kunnen aanpassen om het volledige theoretische bereik van probabiliteiten (0 tot 1) weer te geven, indien we denken dat resultaten misleidend kunnen zijn zonder deze aanpassing:\n\n```{r}\nggplot(Pred_conts, aes(x = trstplt, y = estimate)) +   \n  geom_line() +                                        \n  geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.2) +  \n  labs(title = \"Vertrouwen en opkomst in Nederland\",\n             x = \"Vertrouwen in politici\", \n       y = \"Voorspelde kans om te stemmen\") + \n  scale_y_continuous(limits = c(0,1))\n```\n\n### Factor onafhankelijke variabele\n\nWe kunnen deze syntax gebruiken voor predictors die factors zijn:\n\n```{r}\n#Voorspellingen opslaan\nPred_cat <- predictions(Vote_model_mp, by = \"gndr_F\", newdata = \"mean\") \n\n#en bekijken\ntibble(Pred_cat)\n```\n\nDe data wordt dan naar een plot overgezet:\n\n```{r}\nggplot(Pred_cat, aes(x= gndr_F, y= estimate)) +   \n  geom_pointrange(aes(ymin=conf.low, ymax=conf.high)) +  \n  labs(title = \"Gender en opkomst in Nederland\", \n       x = \"Gender\",\n       y = \"Voorspelde kans om te stemmen\") +\n  geom_text(aes(label = round(estimate, 2)), hjust = -0.25) +\n  scale_x_discrete(labels = c(\"Male\" = \"Man\", \"Female\" = \"Vrouw\"))\n```\n\n### Instructies\n\n-   Welke variabelen en waarden plot je?\n    -   Als de variabele binair/categorisch is, gebruik je alle categorieën die relevant zijn voor de discussie.\n    -   Als de variabele continue is gebruik je het minimum en maximum met redelijke tussenintervallen. Om het minimum en maximum te bepalen kijk je naar de data voor de observaties gebruikt in het model (dit is niet noodzakelijk de volledige dataset gezien observaties kunnen wegvallen door missing waarden). Met de `predictions()` kun je gemakkelijk een dataset aanmaken met alle observaties gebruikt in het model en vervolgens gebruik je `summary` om minimum en maximum te bepalen (zie @sec-predictions-for-a-continuous-predictor-variable).\n-   We gebruiken een lijn met betrouwbaarheidsintervallen voor continue predictoren; voor categorische doen we beroep op `geom_pointrange()` of `geom_errorbar()`.\n-   De y-schaal verdient bijzonder aandacht bij dit soort plots. In het eerste voorbeeld (continue predictor) wordt `scale_y_continuous()` gebruikt om ervoor te zorgen dat het plot het volledige bereik van de afhankelijke variabele (kans om te stemmen) omvat. Het tweede voorbeeld (categorische predictor) laat de keuze aan `ggplot()`. Soms maakt `ggplot()` de schaal kleiner om ongebruikte ruimte weg te laten, maar dan kan een effect groter lijken dan het is. Deze aanpak heeft ook wel nadelen, bijvoorbeeld juist veel ongebruikte ruimte in een plot en minder duidelijke visualisatie. Socioloog Kieran Healy geeft een verdere [bespreking](https://socviz.co/lookatdata.html#problems-of-honesty-and-good-judgment) over deze verschillende manieren om de schaal vorm te geven in zijn boek over datavisualisatie.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"logit_06.html"},"language":{"toc-title-document":"Inhoudsopgave","toc-title-website":"Op deze pagina","related-formats-title":"Andere formaten","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Bron","other-links-title":"Andere Links","code-links-title":"Code Links","launch-dev-container-title":"Dev Container starten","launch-binder-title":"Binder starten","article-notebook-label":"Artikel Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Broncode downloaden","notebook-preview-back":"Terug naar Artikel","manuscript-meca-bundle":"MECA Archief","section-title-abstract":"Samenvatting","section-title-appendices":"Bijlagen","section-title-footnotes":"Voetnoten","section-title-references":"Referenties","section-title-reuse":"Hergebruik","section-title-copyright":"Auteursrechten","section-title-citation":"Citaat","appendix-attribution-cite-as":"Citeer dit werk als:","appendix-attribution-bibtex":"BibTeX citaat:","appendix-view-license":"Licentie Bekijken","title-block-author-single":"Auteur","title-block-author-plural":"Auteurs","title-block-affiliation-single":"Affiliatie","title-block-affiliation-plural":"Affiliaties","title-block-published":"Publicatiedatum","title-block-modified":"Gewijzigd","title-block-keywords":"Trefwoorden","callout-tip-title":"Tip","callout-note-title":"Opmerking","callout-warning-title":"Waarschuwing","callout-important-title":"Belangrijk","callout-caution-title":"Opgelet","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Alle code tonen","code-tools-hide-all-code":"Alle code verbergen","code-tools-view-source":"Broncode bekijken","code-tools-source-code":"Broncode","tools-share":"Share","tools-download":"Download","code-line":"Regel","code-lines":"Regels","copy-button-tooltip":"Kopieer naar klembord","copy-button-tooltip-success":"Gekopieerd!","repo-action-links-edit":"Pagina bewerken","repo-action-links-source":"Broncode bekijken","repo-action-links-issue":"Een probleem melden","back-to-top":"Terug naar boven","search-no-results-text":"Geen resultaten","search-matching-documents-text":"Gevonden documenten","search-copy-link-title":"Kopieer link om te zoeken","search-hide-matches-text":"Extra overeenkomsten verbergen","search-more-match-text":"meer overeenkomst in dit document","search-more-matches-text":"meer overeenkomsten in dit document","search-clear-button-title":"Wissen","search-text-placeholder":"","search-detached-cancel-button-title":"Annuleren","search-submit-button-title":"Verzenden","search-label":"Zoeken","toggle-section":"Schakel sectie","toggle-sidebar":"Schakel zijbalknavigatie","toggle-dark-mode":"Schakel donkere modus","toggle-reader-mode":"Schakel leesmodus","toggle-navigation":"Schakel navigatie","crossref-fig-title":"Figuur","crossref-tbl-title":"Tabel","crossref-lst-title":"Listing","crossref-thm-title":"Stelling","crossref-lem-title":"Lemma","crossref-cor-title":"Conclusie","crossref-prp-title":"Voorstel","crossref-cnj-title":"Aanname","crossref-def-title":"Definitie","crossref-exm-title":"Voorbeeld","crossref-exr-title":"Oefening","crossref-ch-prefix":"Hoofdstuk","crossref-apx-prefix":"Bijlage","crossref-sec-prefix":"Paragraaf","crossref-eq-prefix":"Vergelijking","crossref-lof-title":"Lijst van figuren","crossref-lot-title":"Lijst van tabellen","crossref-lol-title":"Lijst van listings","environment-proof-title":"Bewijs","environment-remark-title":"Opmerking","environment-solution-title":"Oplossing","listing-page-order-by":"Sorteer op","listing-page-order-by-default":"Standaard","listing-page-order-by-date-asc":"Oudste","listing-page-order-by-date-desc":"Nieuwste","listing-page-order-by-number-desc":"Aflopend","listing-page-order-by-number-asc":"Oplopend","listing-page-field-date":"Datum","listing-page-field-title":"Titel","listing-page-field-description":"Beschrijving","listing-page-field-author":"Auteur","listing-page-field-filename":"Bestandsnaam","listing-page-field-filemodified":"Gewijzigd","listing-page-field-subtitle":"Subtitel","listing-page-field-readingtime":"Leestijd","listing-page-field-wordcount":"Woordentelling","listing-page-field-categories":"Categorieën","listing-page-minutes-compact":"{0} min","listing-page-category-all":"Alle","listing-page-no-matches":"Geen overeenkomsten","listing-page-words":"{0} woorden","listing-page-filter":"Filter","draft":"Ontwerp"},"metadata":{"lang":"nl","fig-responsive":true,"quarto-version":"1.5.57","bibliography":["references.bib"],"editor":"visual","theme":{"light":"cosmo","dark":"darkly"},"code-annotations":"hover"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}