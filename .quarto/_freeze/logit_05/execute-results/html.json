{
  "hash": "2a8886e72b3d23e0b9bf5eb9f63a5fa7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ncode-annotations: hover\n---\n\n\n\n# Assumpties van Logistische Regressie {#sec-logistic-regression-assumptions}\n\n\n\n::: {.cell}\n\n:::\n\n\n\nOok logistische modellen rusten op assumpties. In dit hoofdstuk leren we na te gaan of aan deze assumpties voldaan is. In het bijzonder focussen we op de volgende assumpties:\n\n-   Beperkte multicollineariteit\n-   Lineariteit van de logit\n-   Beperkte impact 'outliers' en 'influential cases'\n\nWe beginnen met het laden van relevante R packages en de data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#specifieke packages voor testen assumpties\nlibrary(car)             #meerdere assumptie testen\nlibrary(ggResidpanel)    #assumpties testen met grafieken\nlibrary(expss)           #frequentietabellen maken\n\n#algemene packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(broom)           #data voor residuals en influential cases\n\n#Data\nESS9NL <- import(\"data/ESS9e03, Netherlands.sav\")\n```\n:::\n\n\n\nWe hebben natuurlijk een model nodig. We gebruiken `vote_model4` uit het vorige hoofdstuk waarin we de kans voorspellen dat iemand gaat stemmen op basis van informatie over gender, leeftijd, vertrouwen in politici en links-rechtsideologie.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Data management\nESS9NL <- ESS9NL |>\n  #Factor maken van categorische variabelen\n  mutate(gndr_F = factorize(gndr), \n         vote_F = factorize(vote))  |> \n  #Not Eligible op missing zetten\n  mutate(vote_F = na_if(vote_F,\"Not eligible to vote\")) |> \n  #Relevel van variabelen\n  mutate(vote_F = relevel(vote_F, \"No\"), \n         gndr_F = relevel(gndr_F, \"Female\"))\n\n#Subset van de data\nESS9NL_glm <- ESS9NL |>\n  filter(complete.cases(vote_F,  gndr_F,  agea,  trstplt,  lrscale)) # <1> \n\n#Het model\nVote_model4 <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = ESS9NL_glm, family = \"binomial\")\n\n#Resultaten\nsummary(Vote_model4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = vote_F ~ gndr_F + agea + trstplt + lrscale, family = \"binomial\", \n    data = ESS9NL_glm)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -0.284194   0.380455  -0.747    0.455    \ngndr_FMale   0.043281   0.154201   0.281    0.779    \nagea         0.018349   0.004503   4.075 4.61e-05 ***\ntrstplt      0.195020   0.038706   5.039 4.69e-07 ***\nlrscale      0.029257   0.039306   0.744    0.457    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1173.9  on 1424  degrees of freedom\nResidual deviance: 1135.3  on 1420  degrees of freedom\nAIC: 1145.3\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\n1.  We gebruiken een subset van de data met enkel complete observaties. Dit hebben we gedaan in het vorige hoofdstuk en is ook nuttig voor sommige asumptiechecks.\n\n## Beperkte multicollineariteit\n\nWe kunnen nagaan of ons model onderhevig is aan te sterke multicollineariteit met de `vif()` functie uit het `car` package. Dit is gelijkaardig aan wat we deden voor lineaire regressie ( @sec-linear-no-excessive-multicollinearity). Dezelfde vuistregels zijn van toepassing. Voor logistische regressiemodellen wordt een 'generalized VIF' berekend.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvif(Vote_model4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  gndr_F     agea  trstplt  lrscale \n1.013505 1.018080 1.019284 1.013647 \n```\n\n\n:::\n:::\n\n\n\nDe resultaten duiden op geen problemen met multicollineariteit.\n\n## Lineariteit van de logit\n\nLogistische regressie veronderstelt dat veranderingen in de log odds (de logit) lineair geassocieerd zijn met Y=1. Om de assumptie te checken gebruiken we de `augment()` functie uit het `broom` package. Deze functie creëert een dataframe met de variabelen gebruikt in het model, alsook belangrijke statistieken om assumpties te testen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naugment(Vote_model4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,425 × 11\n   vote_F gndr_F  agea trstplt lrscale .fitted .resid    .hat .sigma   .cooksd\n   <fct>  <fct>  <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>     <dbl>\n 1 Yes    Female    32       6       5    1.62  0.601 0.00238  0.894 0.0000947\n 2 No     Male      57       7       5    2.32 -2.20  0.00175  0.893 0.00356  \n 3 Yes    Female    45       8       5    2.25  0.448 0.00220  0.894 0.0000467\n 4 Yes    Female    34       7       5    1.85  0.540 0.00237  0.894 0.0000749\n 5 Yes    Male      67       6       6    2.33  0.430 0.00188  0.894 0.0000365\n 6 No     Female    85       5       4    2.37 -2.22  0.00330  0.893 0.00710  \n 7 Yes    Female    40       7       5    1.96  0.513 0.00199  0.894 0.0000561\n 8 Yes    Male      71       8       7    2.83  0.339 0.00245  0.894 0.0000292\n 9 Yes    Female    84       5       5    2.38  0.421 0.00310  0.894 0.0000577\n10 Yes    Male      24       7       5    1.71  0.576 0.00360  0.894 0.000131 \n# ℹ 1,415 more rows\n# ℹ 1 more variable: .std.resid <dbl>\n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n#### Output uitleg\n\n-   `vote_F` t.e.m. `lrscale`: Deze kolommen bevatten de geobserveerde waarden op de betreffende variabelen voor alle observaties gebruikt in het model.\n-   `.fitted`: De voorspelde ('fitted') waarden op basis van de schattingen in het model in 'logit' vorm en dus niet in *probabiliteiten*.\n-   `.resid`: De residuals (fouten/errors) voor elke observatie. Ook gekend als de \"deviance residuals\".\n-   `.hat`: Diagonaal van de hat matrix (te negeren).\n-   `.sigma`: Geschatte standaardafwijking van de fouten als de observatie uit het model zou worden verwijderd (te negeren)\n-   `.cooksd`: Cook's D waarden (zie onder).\n-   `.std.resid`: gestandaardiseerde residuals (zie onder).\n:::\n\nWe zullen verder werken met de augment statistieken hier en voor outliers en influential cases dus maken we een nieuw dataobject met de resultaten:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel4_augmented <- augment(Vote_model4, data = ESS9NL_glm)\n```\n:::\n\n\n\n`augment(Vote_model4, data=ESS9NL_glm)`\n\n:   We voegen deze syntax toe aan de functie: `data = ESS9NL_glm`. De reden is dat we zo een dataobject creëren met de augment-statistieken, de variabelen gebruikt in het model, *en* alle overige variabelen in de originele ESS9 dataset. Dit kan nuttig zijn voor bepaalde handelingen. We kunnen enkel de overige variabelen toevoegen als de datasets evenveel rijen hebben. Dit is niet het geval als er missing waarden zijn en het model minder observaties heeft dan de originele dataset. Vandaar dat we eerst een `complete.cases`-data subset hebben gemaakt hierboven.\n\nOm lineariteit te checken plotten we de logit die `augment` heeft berekend telkens tegenover de onafhankelijke variabelen in het model, specifiek de continue onafhankelijke variabelen. We maken een scatterplot met een loess-lijn en `.fitted` geplot op de y-as.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Leeftijd\nggplot(model4_augmented, aes(x = agea, y = .fitted)) + \n  geom_point() + \n  geom_smooth(method = 'loess')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](logit_05_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Vertrouwen in politici\nggplot(model4_augmented, aes(x = trstplt, y = .fitted)) + \n  geom_point() + \n  geom_smooth(method = 'loess')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](logit_05_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# LR-ideologie\nggplot(model4_augmented, aes(x = lrscale, y = .fitted)) + \n  geom_point() + \n  geom_smooth(method = 'loess')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](logit_05_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n:::\n\n\n\nWe gaan na of de loess-lijn sterke afwijkingen van een lineaire relatie vertoont. Dit lijkt hier niet het geval.\n\n## Beperkte impact outliers en influential cases\n\nMet de `augment` functie hebben we reeds de gestandaardiseerde residuals en Cook's D waarden opgeslagen in een dataobject. We kijken eerst naar outliers, dan naar invloedrijke casussen\n\n### Outliers\n\nWe bekijken eerst de descriptieve statistieken voor de gestandaardiseerde residuals:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model4_augmented$.std.resid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-2.3983  0.4104  0.5040  0.1870  0.5916  1.0319 \n```\n\n\n:::\n:::\n\n\n\nDe output helpt ons na te gaan of er observaties zijn die de drempelwaarden (\\|1.96\\|, \\|2.58\\|, \\|3.29\\|) overschrijden. We zien dat de hoogste drempelwaarden (\\|2.58\\|, \\|3.29\\|) niet overschreden worden maar de laagste van 1.96 wel (het minimum is -2.398). Nu moeten we nog weten hoeveel observaties deze waarde overschrijden.\n\nDit kunnen we nagaan door net zoals bij lineaire regressie een dummy variabele te maken (0 = `.std.resid` \\< \\|1.96\\|, 1 = `.std.resid` \\> \\|1.96\\|) en de frequentietabel te inspecteren. [^logit_05-1] (zie @sec-linear-investigating-outliers voor de syntax voor de andere drempelwaarden)\n\n[^logit_05-1]: We zouden ook het gemiddelde van de 0/1 variabele kunnen berekenen gezien dit ons de proportie zou geven voor de '1' cases.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#dummy variabele maken: \nmodel4_augmented <- model4_augmented |>\n  mutate(SRE1.96 = case_when(\n    .std.resid > 1.96 | .std.resid < -1.96  ~ 1,\n    .std.resid > -1.96 & .std.resid < 1.96 ~ 0\n  ))\n\n#proportie opzoeken \nfre(model4_augmented$SRE1.96)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class='gmisc_table' style='border-collapse: collapse; margin-top: 1em; margin-bottom: 1em;' >\n<thead>\n<tr><th style='border-bottom: 1px solid grey; font-weight: 900; border-top: 2px solid grey; text-align: center;'>model4_augmented&#36;SRE1.96</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: center;'>&nbsp;Count&nbsp;</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: center;'>&nbsp;Valid percent&nbsp;</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: center;'>&nbsp;Percent&nbsp;</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: center;'>&nbsp;Responses, %&nbsp;</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: center;'>&nbsp;Cumulative responses, %&nbsp;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style='text-align: left;'>&nbsp;0&nbsp;</td>\n<td style='text-align: right;'>1344</td>\n<td style='text-align: right;'>94.3</td>\n<td style='text-align: right;'>94.3</td>\n<td style='text-align: right;'>94.3</td>\n<td style='text-align: right;'>94.3</td>\n</tr>\n<tr>\n<td style='text-align: left;'>&nbsp;1&nbsp;</td>\n<td style='text-align: right;'>81</td>\n<td style='text-align: right;'>5.7</td>\n<td style='text-align: right;'>5.7</td>\n<td style='text-align: right;'>5.7</td>\n<td style='text-align: right;'>100.0</td>\n</tr>\n<tr>\n<td style='text-align: left;'>&nbsp;#Total&nbsp;</td>\n<td style='text-align: right;'>1425</td>\n<td style='text-align: right;'>100</td>\n<td style='text-align: right;'>100</td>\n<td style='text-align: right;'>100</td>\n<td style='text-align: right;'></td>\n</tr>\n<tr>\n<td style='border-bottom: 2px solid grey; text-align: left;'>&nbsp;&lt;NA&gt;&nbsp;</td>\n<td style='border-bottom: 2px solid grey; text-align: right;'>0</td>\n<td style='border-bottom: 2px solid grey; text-align: right;'></td>\n<td style='border-bottom: 2px solid grey; text-align: right;'>0.0</td>\n<td style='border-bottom: 2px solid grey; text-align: right;'></td>\n<td style='border-bottom: 2px solid grey; text-align: right;'></td>\n</tr>\n</tbody>\n</table>\n`````\n:::\n:::\n\n\n\n5.7% van de observaties liggen buiten het +/- 1.96 interval. Om te onderzoeken of deze outliers de parameters van het model beïnvloeden, kunnen we het model opnieuw schatten zonder deze observaties. We doen dit door in onze dataset enkel observaties met een waarde van '0' op SRE1.96 op te nemen. We zouden dan de resultaten van het model met en het model zonder outliers vergelijken:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVote_model41.96 <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = subset(model4_augmented, SRE1.96 == 0), \n                family = \"binomial\")\n```\n:::\n\n\n\n### Influential cases\n\nOm te onderzoeken of er invloedrijke casussen aanwezig zijn inspecteren we de Cook's D waarden van de observaties in het model. We kunnen de descriptieve statistieken bekijken en het Cook's D plot via de `resid_panel()` funtie uit het `ggResidpanel` package. We hanteren dezelfde vuistregels als voor lineaire regressie (zie @sec-linear-investigating-influential-cases).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Summary of the Cook's D values\nsummary(model4_augmented$.cooksd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n2.331e-05 5.117e-05 8.959e-05 7.085e-04 2.442e-04 1.668e-02 \n```\n\n\n:::\n\n```{.r .cell-code}\n#Plot\nresid_panel(Vote_model4, plots = c('cookd'))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in helper_plotly_label(model): NAs introduced by coercion\nWarning in helper_plotly_label(model): NAs introduced by coercion\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](logit_05_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\nBeide methoden wijzen op lage Cook's D waarden; de maximum waarde is slechts 0.017. Indien we hogere waarden zouden vinden, zouden we deze observaties uit de dataset kunnen filteren en het model opnieuw schatten om resultaten met en zonder invloedrijke casussen te vergelijken. \n",
    "supporting": [
      "logit_05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}