{
  "hash": "4655149101d3df468d93a3ad41cacb72",
  "result": {
    "engine": "knitr",
    "markdown": "---\ncode-annotations: hover\n---\n\n\n\n# Logistische Regressie & Odds Ratios {#sec-logistic-regression-odds-ratios}\n\nLogistische regressiemodellen worden gebruikt voor binaire afhankelijke variabelen. We maken hier gebruik van de Nederlandse survey voor ronde 9 van de [European Social Survey](https://www.europeansocialsurvey.org) (ESS). Deze dataset is op de ESS website beschikbaar in SPSS format (.sav). We kunnen de `view_df` functie in `sjplot` gebruiken om de variabelen en hun labels in de dataset te inspecteren. Zie @sec-recall-peeking-inside-data-objects\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Packages\nlibrary(rio)             #laden van data\nlibrary(sjPlot)          #overzichten van data objecten\nlibrary(tidyverse)       #datamanipulatie en grafieken\nlibrary(broom)           #resultaten van regressiemodellen\n\n#Data\nESS9NL <- import(\"ESS9e03, Netherlands.sav\")\n\n#view_df example op subset van de dataset\nESS9NL |> \n  select(polintr, ppltrst) |> \n  sjPlot::view_df()\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table style=\"border-collapse:collapse; border:none;\">\n<caption>Data frame: select(ESS9NL, polintr, ppltrst)</caption>\n<tr>\n<th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">ID</th><th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">Name</th><th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">Label</th><th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">Values</th><th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">Value Labels</th>\n</tr>\n<tr>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">1</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">polintr</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">How interested in politics</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">1<br>2<br>3<br>4<br>7<br>8<br>9</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">Very interested<br>Quite interested<br>Hardly interested<br>Not at all interested<br>Refusal<br>Don't know<br>No answer</td>\n</tr>\n<tr>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">2</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">ppltrst</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">Most people can be trusted or you can't be too<br>careful</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">0<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>77<br>88<br>99</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">You can't be too careful<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>Most people can be trusted<br>Refusal<br>Don't know<br>No answer</td>\n</tr>\n\n</table>\n`````\n:::\n:::\n\n\n\nDe`view_df()` output toont dat er numerieke waarden zijn die geassocieerd zijn met ontbrekende waarden (bv. respondenten die \"Don't Know\" antwoorden krijgen een score van 8 op `polintr`). Deze waarden werden al naar 'NA' omgezet zoals je kunt zien in onderstaande tabel en dus is er geen verdere data managament nodig. Zie [Section 4.2](https://poweleiden.github.io/statistiek1/data_04_missing_data.html#recoding-missing-data){target=\"_blank\"} van het Statistiek 1 boek om deze leerstof op te frissen.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ESS9NL$polintr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  1   2   3   4 \n213 832 478 149 \n```\n\n\n:::\n:::\n\n\n\n::: callout-important\n#### Waarschuwing!\n\nKijk altijd goed naar instructies van opdrachten alsook verdere informatie over de dataset (bv. het codeboek, of informatie over de dataset te verkrijgen met functies zoals `view_df()` of `attributes()`) om te weten welke datamanagement stappen je moet zetten vooraleer je je analyse kan uitvoeren.\n:::\n\n## Logistische regressieanalyse\n\n### Data Management\n\nIn dit voorbeeld zullen we eerst onderzoeken of gender (`gndr`) opkomst bij verkiezingen bepaalt (`vote`).\n\nWe kijken eerst of data management nodig is:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Variabele attributen\nESS9NL |> \n  select(gndr, vote) |> \n  view_df()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table style=\"border-collapse:collapse; border:none;\">\n<caption>Data frame: select(ESS9NL, gndr, vote)</caption>\n<tr>\n<th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">ID</th><th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">Name</th><th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">Label</th><th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">Values</th><th style=\"border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;\">Value Labels</th>\n</tr>\n<tr>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">1</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">gndr</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">Gender</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">1<br>2<br>9</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top;\">Male<br>Female<br>No answer</td>\n</tr>\n<tr>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">2</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">vote</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">Voted last national election</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">1<br>2<br>3<br>7<br>8<br>9</td>\n<td style=\"padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee\">Yes<br>No<br>Not eligible to vote<br>Refusal<br>Don't know<br>No answer</td>\n</tr>\n\n</table>\n`````\n:::\n\n```{.r .cell-code}\n#Tabellen\ntable(ESS9NL$gndr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  1   2 \n833 840 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(ESS9NL$vote)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   1    2    3 \n1291  247  130 \n```\n\n\n:::\n:::\n\n\n\nDe onafhankelijke variabele heeft 2 categorieën en moet in een factor variabele worden omgezet. De afhankelijke variabele heeft 3 categorieën (Yes, No, Not Eligible). We maken hier een binaire factor variabele van door eerst de \"Not Eligible\" categorie op NA te zetten:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Factor maken\nESS9NL <- ESS9NL |>\n  mutate(gndr_F = factorize(gndr), #<1> \n         vote_F = factorize(vote)) #<2>  \n\n#not eligible op NA\nESS9NL <- ESS9NL |>\n  mutate(vote_F = na_if(vote_F,\"Not eligible to vote\"))\n```\n:::\n\n\n\n1.  De categorie met de laagste numerieke waarde wordt hierbij de referentiecategorie. We gebruiken factorize gezien datawaarden labels hebben.\n2.  We maken hier geen nieuwe variabele aan voor de gehercodeerde variabelen maar overschrijven de originele variabelen. Dit is doorgaans niet aangeraden voor studenten, gelukkig weten wij meestal wel waar we mee bezig zijn.\n\nWe checken de niveaus van de variabelen, in het bijzonder van de vote variabele:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(ESS9NL$vote_F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Yes\"                  \"No\"                   \"Not eligible to vote\"\n[4] \"Refusal\"              \"Don't know\"           \"No answer\"           \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(ESS9NL$vote_F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n                 Yes                   No Not eligible to vote \n                1291                  247                    0 \n             Refusal           Don't know            No answer \n                   0                    0                    0 \n```\n\n\n:::\n:::\n\n\n\nDe `vote` variabele is nu een factor variabele met \"Yes\" als de referentiecategorie. Dit is niet wat we willen gezien we stemmen willen voorspellen. Als we de variabele zo laten voorspelt het model of een persoon *niet* heeft gestemd. We veranderen dit met de relevel functie (zie @sec-relevelling).[^logit_01-1]\n\n[^logit_01-1]: Met `factor()` zouden we direct in de syntax de volgorde van de niveaus aan kunnen duiden: `mutate(vote_binary = factor(vote, levels = c(2, 1), labels = c(\"Did not vote\", \"Voted\"))`. Het gebruik van factor vermijdt een veelvoorkomnde fout besproken in volgend hoofdstuk.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Relevel de variabele\nESS9NL <- ESS9NL |> \n  mutate(vote_F = relevel(vote_F, \"No\"))\n\n#en controleer het resultaat\nlevels(ESS9NL$vote_F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"No\"                   \"Yes\"                  \"Not eligible to vote\"\n[4] \"Refusal\"              \"Don't know\"           \"No answer\"           \n```\n\n\n:::\n:::\n\n\n\n`mutate(vote_F = relevel(vote_F, \"No\"))`\n\n:   We gebruiken de relevel functie op de `vote` variabele. We creëren hier geen nieuwe variabele, maar overschrijven de oude. Je zou er ook voor kunnen kiezen een nieuwe variabele te maken. De categorie tussen dubbele aanhalingstekens zal de eerste categorie worden en dus de referentiecategorie in de regressie. We gebruiken het label \"No\" omdat de variabele reeds tot factor is getransformeerd (en dus niet de originele numerieke waarde '2').\n\nLaten we nu kijken naar de `gndr_F` variabele:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ESS9NL$gndr_F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     Male    Female No answer \n      833       840         0 \n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(ESS9NL$gndr_F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Male\"      \"Female\"    \"No answer\"\n```\n\n\n:::\n:::\n\n\n\nAls we de niveaus bekijken zien we dat 'Male' als referentie zal worden genomen. Dit is prima, maar bij wijze van voorbeeld veranderen we dit hieronder naar 'Female'. We zien ook een derde categorie 'No answer'. Dit label werd gegeven aan de waarde in de variabele maar is leeg. R zal deze dus verwijderen in de analyses.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nESS9NL <- ESS9NL |> \n  mutate(gndr_F = relevel(gndr_F, \"Female\"))\n\n#controleer je codering\nlevels(ESS9NL$gndr_F)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Female\"    \"Male\"      \"No answer\"\n```\n\n\n:::\n:::\n\n\n\n::: callout-important\n#### Waarschuwing!\n\nDe afhankelijke variabele voor een logistische regressie is een (factor) binaire variabele. Zorg ervoor dat de referentiecategorie de uitkomst is die je niet wil voorspellen en de hoogste categorie net die is die je wil voorspellen. Anders zal je interpretatie foutief zijn.\n:::\n\n### Logistische regressie uitvoeren\n\nHet uitvoeren van logistische regressie in R is gelijkaardig aan lineare regressie. In plaats van de ingebouwde functie `lm()`, gebruiken we de eveneens ingebouwde `glm()` functie. De afkorting staat voor '**g**eneralized **l**inear **m**odel'.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Schat het model\nVote_model <- glm(vote_F ~ gndr_F, \n                data = ESS9NL, family = \"binomial\")\n```\n:::\n\n\n\n`Vote_model <-`\n\n:   We slaan de resultaten op in een data object met naam naar keuze.\n\n`glm(vote_F ~ gndr_F,`\n\n:   We voeren de glm functie uit met gefactoriseerde vote als afhankelijke variabele, voorspeld (\\~) door onze enige onafhankelijke variabele: gndr (gefactoriseerd). We kunnen meerdere onafhankelijke variabelen toevoegen, gescheiden van elkaar met een '+' teken.\n\n`data = ESS9NL,`\n\n:   We geven aan welke dataset gebruikt wordt.\n\n`family = \"binomial\")`\n\n:   We verduidelijken de familie van modellen voor ons generalized linear model. Voor logistische regressie is dit \"binomial\". Dit gedeelte van de code blijft onveranderd. Zie de Veelvoorkomende Fouten appendix ( @sec-glm-factor) voor een error die je kunt tegenkomen als je dit gedeelte vergeet.\n\nDe resultaten bekijken we weer met de `summary()` functie:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(Vote_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = vote_F ~ gndr_F, family = \"binomial\", data = ESS9NL)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  1.56485    0.09535  16.412   <2e-16 ***\ngndr_FMale   0.18359    0.13925   1.318    0.187    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1355.5  on 1537  degrees of freedom\nResidual deviance: 1353.7  on 1536  degrees of freedom\n  (135 observations deleted due to missingness)\nAIC: 1357.7\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n#### Output uitleg\n\nDe output is gelijkaardig aan die van de lineaire regressie met `lm()`.\n\n-   Call: Het model dat geschat werd\n-   Deviance Residuals: beschrijvende statistieken over de residuals van het model.\n-   Coefficients: De logistische regressiecoëfficiënten (Estimate), hun standaardfouten (Std. Error), en de teststatistiek (z-waarde; de Z-statistiek is gelijk aan $\\frac{\\textrm{Coefficient}}{\\textrm{Std. Error}}$), en de p-waarde voor de z-statistiek (Pr(\\>\\|z\\|). Symbolen m.b.t. statistische significantie vind je rechts van de p-waarde waar van toepassing. De interpretatie van de symbolen wordt uitgelegd in de legende onder de coëfficiënten (\"Signif. Codes:\").\n-   (Dispersion parameter...): Te negeren.\n-   Area that begins with Null deviance: Informatie over de fit van het model, besproken in een volgend hoofdstuk.\n-   Number of Fisher Scoring Iterations: Aantal iteraties van het algoritme.\n:::\n\nWe kunnen meerdere predictoren toevoegen aan het model op een gelijkaardige manier als bij lineaire regressie: door ze te scheiden met een `+` teken. Hier voegen we leeftijd (`agea`), vertrouwen in politici (`trstplt`), en links-rechts positie (`lrscale`) toe. Datamanagement voor deze variabelen is niet nodig: ze zijn continue en missing waarden zijn reeds als NA aangeduid.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Schat het model\nVote_model_mp <- glm(vote_F ~ gndr_F + agea + trstplt + lrscale, \n                data = ESS9NL, family = \"binomial\")\n\n#Bekijk de output\nsummary(Vote_model_mp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = vote_F ~ gndr_F + agea + trstplt + lrscale, family = \"binomial\", \n    data = ESS9NL)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -0.284194   0.380455  -0.747    0.455    \ngndr_FMale   0.043281   0.154201   0.281    0.779    \nagea         0.018349   0.004503   4.075 4.61e-05 ***\ntrstplt      0.195020   0.038706   5.039 4.69e-07 ***\nlrscale      0.029257   0.039306   0.744    0.457    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1173.9  on 1424  degrees of freedom\nResidual deviance: 1135.3  on 1420  degrees of freedom\n  (248 observations deleted due to missingness)\nAIC: 1145.3\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\n::: callout-warning\n#### Interpretatie\n\nLogistische regressiecoëfficiënten geven een schatting van de verandering in de log van de odds dat Y=1 als X met 1 eenheid stijgt. Ze zijn dus niet makkelijk direct te interpreteren. We kunnen ze wel gebruiken om iets over de richting van de relatie te zeggen. Een positieve coëfficiënt toont dat de kans dat Y=1 stijgt als de onafhankelijke variabele stijgt. Een negatieve coëfficiënt toont dat de kans dat Y=1 daalt als de onafhankelijke variabele stijgt. Voor verdere interpretatie maak je best gebruik van de odds ratios (in minder mate), de gemiddelde marginale effecten (average marginal effects) (zie @sec-marginal-effects) of de voorspelde kansen (zie @sec-logit-predicted-probabilities) .\n\nVoor dit voorbeeld:\n\n-   Mannen hebben een grotere kans om te stemmen dan vrouwen, maar het verschil is niet statistisch significant (p = 0.28).\n-   Oudere respondenten hebben een grotere kans om te gaan stemmen en dit verband is statistisch significant (p \\< 0.001).\n-   Respondenten met meer vertrouwen in politici hebben een grotere kans om te gaan stemmen. deze relatie is statistisch significant (p \\< 0.001).\n-   Stemmen is meer waarschijnlijk naarmate respondenten zich rechtser positioneren op de ideologieschaal, maar dit effect is niet statistisch significant (p = 0.74).\n:::\n\n## Odds Ratios\n\nLogistische regressiecoëfficiënten kunnen omgezet worden in odds ratios die (iets) intuïtiever zijn om te interpereteren.\n\nWe kunnen de odds ratios en 95% betrouwbaarheidsintervallen verkrijgen met de `tidy` functie uit het `broom` package:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# logistische regressiecoëfficiënten en hun betrouwbaarheidsintervallen\ntidy(Vote_model_mp, conf.int = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  term        estimate std.error statistic     p.value conf.low conf.high\n  <chr>          <dbl>     <dbl>     <dbl>       <dbl>    <dbl>     <dbl>\n1 (Intercept)  -0.284    0.380      -0.747 0.455       -1.03       0.463 \n2 gndr_FMale    0.0433   0.154       0.281 0.779       -0.259      0.346 \n3 agea          0.0183   0.00450     4.07  0.0000461    0.00958    0.0272\n4 trstplt       0.195    0.0387      5.04  0.000000469  0.119      0.271 \n5 lrscale       0.0293   0.0393      0.744 0.457       -0.0480     0.106 \n```\n\n\n:::\n\n```{.r .cell-code}\n# odds ratios (i.e. 'exponentiële coëfficiënten') en hun betrouwbaarheidsintervallen\ntidy(Vote_model_mp, conf.int = TRUE, exp = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  term        estimate std.error statistic     p.value conf.low conf.high\n  <chr>          <dbl>     <dbl>     <dbl>       <dbl>    <dbl>     <dbl>\n1 (Intercept)    0.753   0.380      -0.747 0.455          0.357      1.59\n2 gndr_FMale     1.04    0.154       0.281 0.779          0.772      1.41\n3 agea           1.02    0.00450     4.07  0.0000461      1.01       1.03\n4 trstplt        1.22    0.0387      5.04  0.000000469    1.13       1.31\n5 lrscale        1.03    0.0393      0.744 0.457          0.953      1.11\n```\n\n\n:::\n:::\n\n\n\nZo lees je de syntax:\n\n`tidy(Vote_model_mp`\n\n:   We gebruiken de tidy functie op het model tussen haakjes.\n\n`conf.int = TRUE`\n\n:   We vragen R om de betrouwbaarheidsintervallen weer te geven. We kunnen 'FALSE' schrijven of deze code weglaten als we de betrouwbaarheidsintervallen niet willen.\n\n`exp = TRUE)`\n\n:   We vragen hier om de exponentiële (exponentiated) logistische regressiecoëfficiënten, oftewel de odds ratios. We kunnen 'FALSE' schrijven of deze code weglaten als we de logistische regressiecoëfficiënten willen.\n\n::: callout-warning\n#### Interpretatie\n\nVoor de interpretatie van odds ratios zijn er 3 zaken waar je op moet letten.\n\nTen eerste, odds ratios vertellen ons iets over de relatieve *odds* dat Y = 1 (bv. iemand gaat stemmen). Dit is verschillend van de coëfficiënten. de coefficiënten zijn de *gelogde* versies van de relatieve odds..\n\nTen tweede, odds ratios zijn multiplicatief en worden geïnterpreteerd in termen van 1 in plaats van 0. Een odds ratio groter dan 1 betekent een hogere kans dat Y=1. Een odds ratio lager dan 1 betekent een lagere kans dat Y=1. Een odds ratio van 1 betekent dat er geen effect is. Een betrouwbaarheidsinterval voor een odds ratio waar 1 niet in voorkomt duidt een statistisch significant effect aan. Een odds ratio kan niet negatief zijn.\n\nTen derde interpreteren we ook de odds ratios met een multiplicatieve logica. In het voorbeeld vinden we dat de odds om te stemmen 1.04 *keer groter* zijn voor mannelijke respondenten dan vrouwelijke respondenten, ceteris paribus. Het effect is wel niet significant. De odds om te stemmen vermenigvuldigen met 1.02 telkens leeftijd met 1 eenheid omhoog gaat (de andere onafhankelijke variabelen constant gehouden).\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}