{
  "hash": "421df6c698e5bab996b1f299bebbc4b4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ncode-annotations: hover\ncitation-location: margin\n---\n\n\n\n# Rapporteren en Presenteren van Resultaten {#sec-reporting-and-presenting-results}\n\n\n\n::: {.cell}\n\n:::\n\n\n\nDit document bevat algemene richtlijnen over het correct presenteren en rapporteren van correlaties en lineaire regressiemodellen. Sommige secties hebben een \"Rapportage\" sub-sectie met instructies over hoe je resultaten bespreekt in rapporten. \"Instructies\" sub-secties geven verdere tips over hoe je resultaten best visueel presenteert.\n\nWe laden de packages en data gebruikt in dit hoofdstuk eerst:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Packages\nlibrary(rio)             #laden van data\nlibrary(tidyverse)       #data manipulatie en grafieken\nlibrary(broom)           #samenvattingen regressiemodellen\nlibrary(marginaleffects) #voorspelde waarden berekenen\nlibrary(modelsummary)    #tabellen opstellen\n\n#Data\ndemdata <- import(\"demdata.rds\")\n```\n:::\n\n\n\n## Beschrijvende Statistieken {#sec-report-descriptives}\n\nVooraleer we beginnen aan het onderzoeken van verbanden tussen variabelen, is het gebruikelijk om alle variabelen op zich te onderzoeken: wat zijn de minima en maxima, het gemiddelde, en de standaardafwijking (voor continue variabelen) of de frequenties (voor binaire/categorische variabelen)? In een onderzoekspaper vind je dan ook vaak een tabel met deze descriptieve statistieken (ofwel in de tekst zelf, ofwel in Appendix). Deze tabel geeft de lezer (en de onderzoeker!) meer inzicht in de gebruikte variabelen.\n\n### Continue variabelen\n\nWe kunnen gemakkelijk een descriptieve tabel maken met het `modelsummary` package en de `datasummary` functie binnen dat package:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatasummary(v2x_polyarchy + gini_2019\n            ~ Mean + SD + Min + Max + N, data = demdata)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_djwfzx5zjrcg97671uog(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_djwfzx5zjrcg97671uog\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_djwfzx5zjrcg97671uog');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_djwfzx5zjrcg97671uog(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_djwfzx5zjrcg97671uog\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 0, j: 1 }, { i: 0, j: 4 }, { i: 0, j: 3 }, { i: 0, j: 2 }, { i: 0, j: 5 },  ], css_id: 'tinytable_css_zdi29zidf094hi5ej548',}, \n          { positions: [ { i: 2, j: 0 },  ], css_id: 'tinytable_css_yvwz287yqg65bb1dzhhi',}, \n          { positions: [ { i: 1, j: 1 }, { i: 1, j: 4 }, { i: 1, j: 3 }, { i: 1, j: 2 }, { i: 1, j: 5 },  ], css_id: 'tinytable_css_wt5sfkw5ajxvwadfrs6d',}, \n          { positions: [ { i: 1, j: 0 },  ], css_id: 'tinytable_css_s757xzas2rcq6zdm74dn',}, \n          { positions: [ { i: 2, j: 1 }, { i: 2, j: 4 }, { i: 2, j: 3 }, { i: 2, j: 2 }, { i: 2, j: 5 },  ], css_id: 'tinytable_css_9i52zigme0cioidkn8iz',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_96x60kvh62tjj7nyw4ul',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_djwfzx5zjrcg97671uog(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_zdi29zidf094hi5ej548, .table th.tinytable_css_zdi29zidf094hi5ej548 { text-align: right; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_yvwz287yqg65bb1dzhhi, .table th.tinytable_css_yvwz287yqg65bb1dzhhi { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_wt5sfkw5ajxvwadfrs6d, .table th.tinytable_css_wt5sfkw5ajxvwadfrs6d { text-align: right; }\n      .table td.tinytable_css_s757xzas2rcq6zdm74dn, .table th.tinytable_css_s757xzas2rcq6zdm74dn { text-align: left; }\n      .table td.tinytable_css_9i52zigme0cioidkn8iz, .table th.tinytable_css_9i52zigme0cioidkn8iz { text-align: right; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_96x60kvh62tjj7nyw4ul, .table th.tinytable_css_96x60kvh62tjj7nyw4ul { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_djwfzx5zjrcg97671uog\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">Mean</th>\n                <th scope=\"col\">SD</th>\n                <th scope=\"col\">Min</th>\n                <th scope=\"col\">Max</th>\n                <th scope=\"col\">N</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>v2x_polyarchy</td>\n                  <td>0.51</td>\n                  <td>0.25</td>\n                  <td>0.01</td>\n                  <td>0.91</td>\n                  <td>179</td>\n                </tr>\n                <tr>\n                  <td>gini_2019</td>\n                  <td>34.36</td>\n                  <td>6.87</td>\n                  <td>22.60</td>\n                  <td>48.00</td>\n                  <td>70</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\nZo lees je de syntax:\n\n`datasummary(`\n\n:   We gebruiken de `datasummary`functie op de variabelen tussen haakjes\n\n`v2x_polyarchy + gini_2019`\n\n:   Dit zijn de variabelen die we willen opnemen in de tabel. Meerdere variabelen kunnen toegevoegd worden met behulp van een `+` teken. Voor een tabel met alle variabelen uit de dataset kun je `All(naam dataset)`gebruiken. Dit doe je doorgaans enkel als de dataset niet veel variabelen bevat.\n\n`~ Mean + SD + Min + Max + N,`\n\n:   We geven hier na de tilde `~` weer welke statistieken we precies willen. De statistieken gevraagd hier zijn het meest gebruikelijk.\n\n`data = demdata`\n\n:   We geven hier aan uit welk dataobject de variabelen afkomstig zijn.\n\nDe tabel geeft reeds alle nodige informatie aan de lezer. Zo kan je uit de N afleiden dat een bivariate analyse van deze twee variabelen gebruik zal maken van veel minder cases dan beschikbaar in `v2x_polyarchy`omdat er best was ontbrekende waarden zijn bij `gini_2019`.\n\n### Binaire en categorische variabelen\n\nWe kunnen ook binaire en categorische variabelen toevoegen aan een tabel, maar hier geef je doorgaans andere statistieken: de N en het percentage observaties in de dataset. We nemen de voorbeelden `TYPEDEMO1984` en `Typeregime2006`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# transformeren naar factor\ndemdata <- demdata |> \n  mutate(TYPEDEMO1984_factor = factorize(TYPEDEMO1984))\ndemdata <- demdata |> \n  mutate(Typeregime2006_factor = factorize(Typeregime2006))\n\n#tabel met percentage en N\ndatasummary(TYPEDEMO1984_factor + Typeregime2006_factor \n            ~ N + Percent(), data = demdata)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_vjuen277c5ipjl26d72d(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_vjuen277c5ipjl26d72d\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_vjuen277c5ipjl26d72d');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_vjuen277c5ipjl26d72d(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_vjuen277c5ipjl26d72d\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 1, j: 2 }, { i: 3, j: 2 }, { i: 4, j: 2 }, { i: 3, j: 3 }, { i: 2, j: 2 }, { i: 1, j: 3 }, { i: 2, j: 3 }, { i: 4, j: 3 },  ], css_id: 'tinytable_css_rl01im984hhgoyqazcdg',}, \n          { positions: [ { i: 0, j: 2 }, { i: 0, j: 3 },  ], css_id: 'tinytable_css_mdi9r2wdt10ol5iva74c',}, \n          { positions: [ { i: 5, j: 0 }, { i: 5, j: 1 },  ], css_id: 'tinytable_css_ja7xi9zhmqjrcaijkd9j',}, \n          { positions: [ { i: 5, j: 2 }, { i: 5, j: 3 },  ], css_id: 'tinytable_css_9a4x3q4d8g0voa0dyq9w',}, \n          { positions: [ { i: 1, j: 0 }, { i: 3, j: 0 }, { i: 4, j: 0 }, { i: 3, j: 1 }, { i: 2, j: 0 }, { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 4, j: 1 },  ], css_id: 'tinytable_css_1nhcx6gyewr1mx5h7r3y',}, \n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 },  ], css_id: 'tinytable_css_0albq4n0rthkkgkgvibn',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_vjuen277c5ipjl26d72d(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_rl01im984hhgoyqazcdg, .table th.tinytable_css_rl01im984hhgoyqazcdg { text-align: right; }\n      .table td.tinytable_css_mdi9r2wdt10ol5iva74c, .table th.tinytable_css_mdi9r2wdt10ol5iva74c { text-align: right; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_ja7xi9zhmqjrcaijkd9j, .table th.tinytable_css_ja7xi9zhmqjrcaijkd9j { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_9a4x3q4d8g0voa0dyq9w, .table th.tinytable_css_9a4x3q4d8g0voa0dyq9w { text-align: right; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_1nhcx6gyewr1mx5h7r3y, .table th.tinytable_css_1nhcx6gyewr1mx5h7r3y { text-align: left; }\n      .table td.tinytable_css_0albq4n0rthkkgkgvibn, .table th.tinytable_css_0albq4n0rthkkgkgvibn { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_vjuen277c5ipjl26d72d\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">  </th>\n                <th scope=\"col\">N</th>\n                <th scope=\"col\">Percent</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>Type of democracy, 1984</td>\n                  <td>Autocracies</td>\n                  <td>86</td>\n                  <td>48.04</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>Democracies</td>\n                  <td>57</td>\n                  <td>31.84</td>\n                </tr>\n                <tr>\n                  <td>Type of regime 2006 (3 cat)</td>\n                  <td>Liberal democracy</td>\n                  <td>71</td>\n                  <td>39.66</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>Electoral democracy</td>\n                  <td>53</td>\n                  <td>29.61</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>Autocracy</td>\n                  <td>41</td>\n                  <td>22.91</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n`~ N + Percent(),`\n\n:   We geven hier na de tilde `~` weer welke statistieken we precies willen. In het geval van factorvariabelen zijn deze gebruikelijk. Let erop dat het percentage dat wordt gegeven ook `NA` waarden gebruikt in de berekening. Hieronder tonen we hoe je dit kan aanpassen.\n\nDe verschillende syntax suggereert dat we voor continue en binaire/categorische variabelen best aparte tabellen maken. Toch is dit niet nodig. In een analyse transformeert R achter de schermen een factorvariabele in meerdere dummy-variabelen. Deze 0-1 variabelen kunnen we opnemen samen met continue variabelen in een tabel. Het gemiddelde geeft dan de proportie weer van observaties in deze categorie, terwijl de N het aantal valide cases voor de variabele als geheel weergeeft.\n\nWe kunnen de dummy variabelen zelf aanmaken via `mutate` maar het kan sneller met het `fastdummies` package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#laad het package (meestal aan het begin van je script)\nlibrary(fastDummies)\n\n#dummy variabelen aanmaken voor alle categorieën van de variabelen\ndemdata <- dummy_cols(demdata, \n                      select_columns = \n                        c(\"TYPEDEMO1984\", \"Typeregime2006\"))\n```\n:::\n\n\n\n`dummy_cols(demdata`\n\n:   we passen de functie `dummy_cols`toe en duiden eerst de dataset aan die van toepassing is.\n\n`select_columns = c(\"TYPEDEMO1984\", \"Typeregime2006\"))`\n\n:   Nu creëeren we dummy-variabelen voor alle categorieën (inclusief NA) van de aangeduide categorische variabelen van de dataset.[^linear_08-1] De nieuwe dummy-variabelen worden toegevoegd aan de dataset met de `demdata <-` syntax. De naam wordt automatisch gegenereerd: de naam van de variabele met daaraan gelinkt de numerieke code (of tekst-code indien de variabele niet numeriek is). De niet-gefactorde versie van `TYPEDEMO1984` in dit voorbeeld neemt 2 mogelijke waarden aan: 1 = democratie and 2 = autocratie.[^linear_08-2] De functie creëert de volgende dummies: `TYPEDEMO1984_1` (observaties met de waarde '1' scoorden '1' op de originele variabele; observaties met score '0' scoorden '2' op de originele variabele) en `TYPEDEMO1984_2` (observaties met de waarde '1' scoorden '2' op de originele variabele; observaties met score '0' scoorden '1' op de originele variabele). We kunnen dit beter zien in de kruistabel hieronder.\n\n[^linear_08-1]: De functie creëert ook een dummy-variabele voor ontbrekende waarden als die er zijn. We vinden bijvoorbeeld ook een `TYPEDEMO1984_NA` variabele waarbij '1' observaties aanduidt met een NA waarde voor de originele variabele en '0' observaties met een valide waarde ('1' of '2' hier). Deze dummy-variabele wordt genegeerd bij de creatie van tabellen.\n\n[^linear_08-2]: We gebruiken hier de originele, niet-gefactorde versies van de variabelen in dit voorbeeld. De functie werkt in principe ook met de gefactorde versie. Dan zou je bijvoorbeeld de volgende dummies krijgen voor `TYPEDEMO1984`: `TYPEDEMO1984_factor_Autocracies` en `TYPEDEMO1984__factor_Democracies`. Deze aanpak kan echter complicaties met zich meebrengen als labels meerder woorden bevatten zoals 'Electoral Democracy' met een spatie tussen de woorden. R kan hier niet altijd goed mee omgaan en dergelijke variablen zullen ingesloten zijn door backticks (\\`). Bijvoorbeeld: \\`Typeregime2006_factor_Electoral Democracy\\`. Indien je deze variabele wil gebruiken in verdere toepassingen moet je de backticks gebruiken en dat is niet altijd handig.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crosstab of original variable and dummies via dummy_cols()\ntable(demdata$TYPEDEMO1984, demdata$TYPEDEMO1984_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   \n     0  1\n  1  0 86\n  2 57  0\n```\n\n\n:::\n\n```{.r .cell-code}\ntable(demdata$TYPEDEMO1984, demdata$TYPEDEMO1984_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   \n     0  1\n  1 86  0\n  2  0 57\n```\n\n\n:::\n:::\n\n\n\nWe kunnen de dummyvariabelen toevoegen aan de `datasummary` functie samen met de continue variabelen.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tabel maken voor dummies alsof het continue variabelen zijn\ndatasummary(v2x_polyarchy + gini_2019+\n            TYPEDEMO1984_1 + TYPEDEMO1984_2 +\n            Typeregime2006_1 + \n            Typeregime2006_2 +\n            Typeregime2006_3 \n            ~ Mean + SD + Min + Max + N, data = demdata)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_3q67lnrlbrl2k0bwehwv(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_3q67lnrlbrl2k0bwehwv\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_3q67lnrlbrl2k0bwehwv');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_3q67lnrlbrl2k0bwehwv(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_3q67lnrlbrl2k0bwehwv\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 7, j: 2 }, { i: 7, j: 4 }, { i: 7, j: 3 }, { i: 7, j: 1 }, { i: 7, j: 5 },  ], css_id: 'tinytable_css_uau94flpiribb2dnbwgg',}, \n          { positions: [ { i: 7, j: 0 },  ], css_id: 'tinytable_css_tvu6eoxm10dxg83fds3e',}, \n          { positions: [ { i: 1, j: 1 }, { i: 5, j: 1 }, { i: 2, j: 1 }, { i: 4, j: 1 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 4, j: 3 }, { i: 4, j: 2 }, { i: 5, j: 2 }, { i: 6, j: 2 }, { i: 4, j: 4 }, { i: 3, j: 1 }, { i: 1, j: 3 }, { i: 2, j: 3 }, { i: 6, j: 1 }, { i: 1, j: 5 }, { i: 5, j: 3 }, { i: 6, j: 3 }, { i: 4, j: 5 }, { i: 3, j: 2 }, { i: 1, j: 4 }, { i: 2, j: 4 }, { i: 3, j: 4 }, { i: 3, j: 3 }, { i: 5, j: 4 }, { i: 6, j: 4 }, { i: 3, j: 5 }, { i: 5, j: 5 }, { i: 2, j: 5 }, { i: 6, j: 5 },  ], css_id: 'tinytable_css_tbtecmd8sc0qua48w1si',}, \n          { positions: [ { i: 0, j: 1 }, { i: 0, j: 5 }, { i: 0, j: 3 }, { i: 0, j: 2 }, { i: 0, j: 4 },  ], css_id: 'tinytable_css_fyotq3wss2ks75w1pv9q',}, \n          { positions: [ { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 4, j: 0 }, { i: 5, j: 0 }, { i: 6, j: 0 },  ], css_id: 'tinytable_css_buwdt8szgpyxw9953lve',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_aju5zlc03ivw721p9ri2',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_3q67lnrlbrl2k0bwehwv(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_uau94flpiribb2dnbwgg, .table th.tinytable_css_uau94flpiribb2dnbwgg { text-align: right; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_tvu6eoxm10dxg83fds3e, .table th.tinytable_css_tvu6eoxm10dxg83fds3e { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_tbtecmd8sc0qua48w1si, .table th.tinytable_css_tbtecmd8sc0qua48w1si { text-align: right; }\n      .table td.tinytable_css_fyotq3wss2ks75w1pv9q, .table th.tinytable_css_fyotq3wss2ks75w1pv9q { text-align: right; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_buwdt8szgpyxw9953lve, .table th.tinytable_css_buwdt8szgpyxw9953lve { text-align: left; }\n      .table td.tinytable_css_aju5zlc03ivw721p9ri2, .table th.tinytable_css_aju5zlc03ivw721p9ri2 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_3q67lnrlbrl2k0bwehwv\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">Mean</th>\n                <th scope=\"col\">SD</th>\n                <th scope=\"col\">Min</th>\n                <th scope=\"col\">Max</th>\n                <th scope=\"col\">N</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>v2x_polyarchy</td>\n                  <td>0.51</td>\n                  <td>0.25</td>\n                  <td>0.01</td>\n                  <td>0.91</td>\n                  <td>179</td>\n                </tr>\n                <tr>\n                  <td>gini_2019</td>\n                  <td>34.36</td>\n                  <td>6.87</td>\n                  <td>22.60</td>\n                  <td>48.00</td>\n                  <td>70</td>\n                </tr>\n                <tr>\n                  <td>TYPEDEMO1984_1</td>\n                  <td>0.60</td>\n                  <td>0.49</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>143</td>\n                </tr>\n                <tr>\n                  <td>TYPEDEMO1984_2</td>\n                  <td>0.40</td>\n                  <td>0.49</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>143</td>\n                </tr>\n                <tr>\n                  <td>Typeregime2006_1</td>\n                  <td>0.43</td>\n                  <td>0.50</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>165</td>\n                </tr>\n                <tr>\n                  <td>Typeregime2006_2</td>\n                  <td>0.32</td>\n                  <td>0.47</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>165</td>\n                </tr>\n                <tr>\n                  <td>Typeregime2006_3</td>\n                  <td>0.25</td>\n                  <td>0.43</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>165</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\nDe gemiddelden voor de dummy-variabelen geven de proportie van observaties met de score '1' weer. De berekening negeert ontbrekende 'NA' waarden in tegenstelling tot de methode hierboven zonder dummies. De waarden zijn dus correcter. In deze tabel hebben we all dummies opgenomen. In de praktijk laten we bij binaire variabelen vaak de referentiecategorie weg (bv., enkel`TYPEDEMO1984_2` in de tabel).\n\n### Presentatie: Descriptieve tabellen\n\nVoorgaande tabellen gebruiken nog de naam van de variabelen in de dataset. Deze zijn vaak niet intuïtief voor een lezer. We zullen de namen dan ook veranderen vooraleer we een tabel presenteren. Dit doen we met behulp van de `rename` functie.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# we maken een nieuwe, kleinere dataset met hernoemde variabelen\ntable_data <- demdata |> \n  select(v2x_polyarchy, gini_2019, \n         TYPEDEMO1984_1, TYPEDEMO1984_2,\n         Typeregime2006_1, Typeregime2006_2, Typeregime2006_3) |> \n  rename(\"Polyarchiescore (2020)\" = v2x_polyarchy, \n         \"Economische ongelijkheid (2019)\" = gini_2019,\n         \"Autocratie (1984)\"  = TYPEDEMO1984_1,\n         \"Democratie (1984)\" = TYPEDEMO1984_2,\n         \"Liberale democratie (2006)\" = Typeregime2006_1, \n         \"Electorale democratie (2006)\" = Typeregime2006_2,\n         \"Autocratie (2006)\" = Typeregime2006_3)\n\n#we vragen een datatabel voor alle variabelen in de nieuwe dataset\ndatasummary(All(table_data)\n            ~ Mean + SD + Min + Max + N, data = table_data)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_zks3c6bhz9syiwc8m2m2(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_zks3c6bhz9syiwc8m2m2\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_zks3c6bhz9syiwc8m2m2');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_zks3c6bhz9syiwc8m2m2(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_zks3c6bhz9syiwc8m2m2\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 7, j: 0 },  ], css_id: 'tinytable_css_zoaoyeirwqyphnq57bq3',}, \n          { positions: [ { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 4, j: 0 }, { i: 5, j: 0 }, { i: 6, j: 0 },  ], css_id: 'tinytable_css_wa358evlb3pdpbof8sme',}, \n          { positions: [ { i: 0, j: 1 }, { i: 0, j: 5 }, { i: 0, j: 3 }, { i: 0, j: 2 }, { i: 0, j: 4 },  ], css_id: 'tinytable_css_vsbly8j96yc2xlll6v8a',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_b2oqt4dufbgr7quhe5k2',}, \n          { positions: [ { i: 1, j: 1 }, { i: 5, j: 1 }, { i: 2, j: 1 }, { i: 4, j: 1 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 4, j: 3 }, { i: 4, j: 2 }, { i: 5, j: 2 }, { i: 6, j: 2 }, { i: 4, j: 4 }, { i: 3, j: 1 }, { i: 1, j: 3 }, { i: 2, j: 3 }, { i: 6, j: 1 }, { i: 1, j: 5 }, { i: 5, j: 3 }, { i: 6, j: 3 }, { i: 4, j: 5 }, { i: 3, j: 2 }, { i: 1, j: 4 }, { i: 2, j: 4 }, { i: 3, j: 4 }, { i: 3, j: 3 }, { i: 5, j: 4 }, { i: 6, j: 4 }, { i: 3, j: 5 }, { i: 5, j: 5 }, { i: 2, j: 5 }, { i: 6, j: 5 },  ], css_id: 'tinytable_css_3b83kg6ttta08bv5nsz1',}, \n          { positions: [ { i: 7, j: 2 }, { i: 7, j: 4 }, { i: 7, j: 3 }, { i: 7, j: 1 }, { i: 7, j: 5 },  ], css_id: 'tinytable_css_1lslilwy95pw20y0qi56',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_zks3c6bhz9syiwc8m2m2(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_zoaoyeirwqyphnq57bq3, .table th.tinytable_css_zoaoyeirwqyphnq57bq3 { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_wa358evlb3pdpbof8sme, .table th.tinytable_css_wa358evlb3pdpbof8sme { text-align: left; }\n      .table td.tinytable_css_vsbly8j96yc2xlll6v8a, .table th.tinytable_css_vsbly8j96yc2xlll6v8a { text-align: right; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_b2oqt4dufbgr7quhe5k2, .table th.tinytable_css_b2oqt4dufbgr7quhe5k2 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_3b83kg6ttta08bv5nsz1, .table th.tinytable_css_3b83kg6ttta08bv5nsz1 { text-align: right; }\n      .table td.tinytable_css_1lslilwy95pw20y0qi56, .table th.tinytable_css_1lslilwy95pw20y0qi56 { text-align: right; border-bottom: solid #d3d8dc 0.1em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_zks3c6bhz9syiwc8m2m2\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">Mean</th>\n                <th scope=\"col\">SD</th>\n                <th scope=\"col\">Min</th>\n                <th scope=\"col\">Max</th>\n                <th scope=\"col\">N</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>Polyarchiescore (2020)</td>\n                  <td>0.51</td>\n                  <td>0.25</td>\n                  <td>0.01</td>\n                  <td>0.91</td>\n                  <td>179</td>\n                </tr>\n                <tr>\n                  <td>Economische ongelijkheid (2019)</td>\n                  <td>34.36</td>\n                  <td>6.87</td>\n                  <td>22.60</td>\n                  <td>48.00</td>\n                  <td>70</td>\n                </tr>\n                <tr>\n                  <td>Autocratie (1984)</td>\n                  <td>0.60</td>\n                  <td>0.49</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>143</td>\n                </tr>\n                <tr>\n                  <td>Democratie (1984)</td>\n                  <td>0.40</td>\n                  <td>0.49</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>143</td>\n                </tr>\n                <tr>\n                  <td>Liberale democratie (2006)</td>\n                  <td>0.43</td>\n                  <td>0.50</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>165</td>\n                </tr>\n                <tr>\n                  <td>Electorale democratie (2006)</td>\n                  <td>0.32</td>\n                  <td>0.47</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>165</td>\n                </tr>\n                <tr>\n                  <td>Autocratie (2006)</td>\n                  <td>0.25</td>\n                  <td>0.43</td>\n                  <td>0.00</td>\n                  <td>1.00</td>\n                  <td>165</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\nDe `modelsummary` website geeft nog andere manieren weer om variabelen te hernamen binnen de functie zelf; zie deze [link](https://modelsummary.com/vignettes/datasummary.html#renaming-with){target=\"_blank\"}.\n\n### Opslaan als Word document\n\nDeze tabel kunnen we naar Word exporteren met onderstaande syntax. Voor een tabel in een Nederlandse paper, verander je het woord 'mean' naar 'gemiddelde' in Word.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatasummary(All(table_data)\n            ~ Mean + SD + Min + Max + N, data = table_data,\n  output = \"descr_tabel.docx\")\n```\n:::\n\n\n\n`output = 'descr_tabel.docx'`\n\n:   Hier vragen we om een Word document (.docx) genaamd \"descr_tabel\" op te slaan. Dit bestand vind je terug in je R project folder. Je kan ook een subfolder aanduiden, bv. \"Output folder/descr_tabel.docx\". Let erop dat je het Word document niet geopend hebt als je de syntax opnieuw wil gebruiken met aanpassingen, anders kun je een foutmelding krijgen.\n\n## Puntenwolken of Scatterplots {#sec-report-scatterplots}\n\nWe kunnen een visuele weergave tonen van de bivariate relatie tussen twee continue variabelen in een puntenwolk of scatterplot. Hieronder is een voorbeeld voor de variabelen `gini_2019` en `v2x_polyarchy`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(demdata, aes(x = gini_2019, y = v2x_polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\") + \n  labs(x = \"Economische Ongelijkheid\", \n       y = \"Electorale Democratie\", \n       title = \"Economische Ongelijkheid en Electorale Democratie\")\n```\n\n::: {.cell-output-display}\n![](linear_08_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### Rapportage\n\nDe volgende zaken kun je best benoemen wanneer je een scatterplot bespreekt:\n\n-   De richting van de relatie, alsook de sterkte (maar let op dat je best ook de correlatiecoëfficiënt bekijkt gezien visuele weergaven ook misleidend kunnen zijn).\n-   Patronen of trends in het plot.\n-   Cases die extreme waarden hebben of cases die als outliers kunnen beschreven worden.\n\n### Instructies\n\n-   Zorg ervoor de je informatieve labels hebt voor de x -en y-as en een duidelijke titel.\n\n-   Je kan de regressielijn toevoegen aan het plot om de interpretatie te verduidelijken. Dit kan je doen met de syntax `method = \"lm\"`. Je kunt de syntax veranderen naar `method = \"loess\"` om een 'locally estimated scatterplot smoothing' line te plotten. Dit is handig voor het spotten van niet-lineaire patronen in de data. Zie @sec-quadratic-relationships\n\n-   Let op de tekstgrootte op de assen en zorg dat de tekst goed leesbaar is. De grootte van het lettertype kun je aanpassen met de syntax om het visuele thema van de figuur te veranderen, bv. door het volgende toe te voegen: `+ theme_grey(14)` of `+ theme_bw(18)`. Het nummer tussen haakjes bepaalt de grootte van het lettertype.Je kunt een lijst met de ingebouwde visuele ggplot schema's [hier](https://ggplot2.tidyverse.org/reference/ggtheme.html) vinden. Bijkomende opties zijn beschikbaar in het [ggthemes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/){target=\"_blank\"} package. Meer complexe veranderingen, zoals verschillende tekstgroottes voor titel en astitels, kun je uitvoeren via `theme()`, maar dit behandelen we niet in dit document.\n\n-   Bovenstaand plot toont de bivariate relatie tussen twee continue variabelen met toevoeging van de regressielijn. We kunnen ook de formule van de lijn toevoegen met `geom_text()`. Dit doen we door een `+` toe te voegen na `labs()` en de volgende regel toe te voegen: `geom_text(x = 40, y=0.1, label=\"Dem Score = 1.06 + (-0.012 * Inequality)\")` . De formule vind je met `lm`(zie onder). De `x=` en `y=`gedeelten geven de waarden (coördinaten) weer waar het label in het plot moet komen. Het kan nodig zijn de waarden stelselmatig aan te passen om een mooie weergave te bereiken. Bepaalde packages in R kunnen dit proces vergemakkelijken, zoals deze [functie](https://rpkgs.datanovia.com/ggpubr/reference/stat_regline_equation.html) uit het `ggpubr` package. Dit package behoort niet tot de leerstof.\n\n## Correlaties\n\nVoor dit voorbeeld berekenen we de Pearson correlatie tussen economische ongelijkheid (hogere waarden = meer ongelijk; `gini_2019`) en electorale democratie (hogere waarden = meer democratie; `v2x_polyarchy`).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor1 <- cor.test(x = demdata$gini_2019, \n                 y = demdata$v2x_polyarchy, \n                 method = 'pearson')\n\ncor1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  demdata$gini_2019 and demdata$v2x_polyarchy\nt = -3.0433, df = 68, p-value = 0.003325\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.5374741 -0.1211040\nsample estimates:\n       cor \n-0.3462257 \n```\n\n\n:::\n:::\n\n\n\nZie @sec-correlation-coefficients voor richtlijnen over de interpretatie van correlatiecoëfficiënten.\n\n### Rapportage\n\nDe volgende zaken neem je best op in je rapportage:\n\n-   De specifieke correlatie je gebruikt hebt (bv. Pearson).\n-   Een bespreking van de richting van de relatie (positief, negatief, geen relatie), waarbij ook aandacht is voor de codering van gebruikte variabelen.\n-   Een bespreking van de statistische significantie:\n    -   Significantie hebben we meestal op de niveaus van 95% (p \\< 0.05), 99% (p \\< 0.01), en 99.9% (p \\< 0.001) [^linear_08-3]\n    -   Raporteer op basis van het hoogste signficantieniveau dat de p-waarde aangeeft:\n        -   Als p = 0.04, dan p \\< 0.05 (significant op 95% niveau)\n        -   Als p = 0.02, dan p \\< 0.01 (significant op 99% niveau)\n        -   Als p = 0.0000005, dan p \\< 0.001 (significant op 99.9% niveau)\n    -   We rapporteren meestal niet hoger dan 99.9% of p \\< 0.001 (bv., we zeggen niet p \\< 0.000001, maar p \\< 0.001). We schrijven ook nooit p \\< 0.000.\n-   Een bespreking van de sterkte van de relatie. (zie @sec-correlation-coefficients)\n\n[^linear_08-3]: Een 90% betrouwbaarheidsniveau kan passend zijn indien het model een lage N heeft.\n\n::: callout-tip\n#### Voorbeeld rapportage\n\nHogere waarden voor economische ongelijkheid hangen samen met lagere waarden voor electorale democratie ($r$ = -0.35). De associatie heeft een gemiddelde sterkte en is statistisch significant (p $<$ 0.01).\n:::\n\n### Presentatie: Correlatietabellen\n\nWanneer we slechts de correlatie tussen twee variabelen beschrijven, kunnen we deze discussie gewoon in onze tekst opnemen zoals hierboven. Wanneer we echter analyses doen met meerdere continue variabelen is het een goede praktijk om een correlatietabel op te stellen die de correlatie tussen deze variabelen weergeeft. Deze tabel kan in de hoofdtekst van een paper of in een appendix worden opgenomen. De tabel kan aangemaakt worden met de `datasummary_correlation()` functie uit het `modelsummary` package. Hier is een voorbeeld met 4 variabelen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemdata |> \n  select(v2x_polyarchy, gini_2019, cpi, gdp_ppp) |> \n  rename(\"Electorale democratie\" = v2x_polyarchy, \n         \"Economische ongelijkheid\" = gini_2019, \n         \"Corruptie\" = cpi, \n         \"BBP\" = gdp_ppp) |> \n  datasummary_correlation(method = \"pearson\",\n                          title = \"Relatie continue variabelen\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_4zbbpz3u3u44duvcjo3f(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_4zbbpz3u3u44duvcjo3f\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_4zbbpz3u3u44duvcjo3f');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_4zbbpz3u3u44duvcjo3f(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_4zbbpz3u3u44duvcjo3f\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 },  ], css_id: 'tinytable_css_z3z6s4yaeblt834acjm9',}, \n          { positions: [ { i: 3, j: 2 }, { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 3, j: 1 }, { i: 2, j: 3 }, { i: 3, j: 3 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 1, j: 4 }, { i: 2, j: 4 }, { i: 3, j: 4 }, { i: 1, j: 3 },  ], css_id: 'tinytable_css_xawnk5bca44lmz76n9d3',}, \n          { positions: [ { i: 4, j: 0 },  ], css_id: 'tinytable_css_e5bu0s2g948goj6wyake',}, \n          { positions: [ { i: 4, j: 1 }, { i: 4, j: 2 }, { i: 4, j: 3 }, { i: 4, j: 4 },  ], css_id: 'tinytable_css_bg7ae4nbigwvbixajzaw',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_9hwaalje3fr17i0pms26',}, \n          { positions: [ { i: 0, j: 1 }, { i: 0, j: 2 }, { i: 0, j: 3 }, { i: 0, j: 4 },  ], css_id: 'tinytable_css_30mr07do842sdzszdjij',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_4zbbpz3u3u44duvcjo3f(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_z3z6s4yaeblt834acjm9, .table th.tinytable_css_z3z6s4yaeblt834acjm9 { text-align: left; }\n      .table td.tinytable_css_xawnk5bca44lmz76n9d3, .table th.tinytable_css_xawnk5bca44lmz76n9d3 { text-align: right; }\n      .table td.tinytable_css_e5bu0s2g948goj6wyake, .table th.tinytable_css_e5bu0s2g948goj6wyake { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_bg7ae4nbigwvbixajzaw, .table th.tinytable_css_bg7ae4nbigwvbixajzaw { text-align: right; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_9hwaalje3fr17i0pms26, .table th.tinytable_css_9hwaalje3fr17i0pms26 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_30mr07do842sdzszdjij, .table th.tinytable_css_30mr07do842sdzszdjij { text-align: right; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_4zbbpz3u3u44duvcjo3f\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Relatie continue variabelen</caption>\n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">Electorale democratie</th>\n                <th scope=\"col\">Economische ongelijkheid</th>\n                <th scope=\"col\">Corruptie</th>\n                <th scope=\"col\">GDP per capita, PPP (constant 2017 international $)</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>Electorale democratie</td>\n                  <td>1</td>\n                  <td>.</td>\n                  <td>.</td>\n                  <td>.</td>\n                </tr>\n                <tr>\n                  <td>Economische ongelijkheid</td>\n                  <td>-.35</td>\n                  <td>1</td>\n                  <td>.</td>\n                  <td>.</td>\n                </tr>\n                <tr>\n                  <td>Corruptie</td>\n                  <td>.66</td>\n                  <td>-.53</td>\n                  <td>1</td>\n                  <td>.</td>\n                </tr>\n                <tr>\n                  <td>GDP per capita, PPP (constant 2017 international $)</td>\n                  <td>.40</td>\n                  <td>-.52</td>\n                  <td>.79</td>\n                  <td>1</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n::: callout-note\n#### Output uitleg\n\nElke cel bevate een correlatiecoëfficiënt voor 2 gepaarde variabelen. De correlatie tussen corruptie en economische ongelijkheid is bijvoorbeeld -0,53, terwijl de correlatie tussen GDP en corruptie 0,79 is.\n\nOpmerking: De titel wordt in dit document onderaan de tabel weergegeven, maar wordt bovenaan afgedrukt bij het opslaan in een Word-document (zie hieronder), wat de meer conventionele plaatsing is.\n:::\n\nZo lees je de syntax:\n\n`demdata |> select(…)`\n\n:   Hier selected we de dataset (`demdata`) en de variabelen waartussen we de correlaties willen berekenen. Zonder `select(…)` berekent R de correlaties tussen alle variabelen in de dataset!\n\n`rename(…)`\n\n:   We geven de variabelen een andere naam zodat presentatie van de variabelen in de tabel duidelijker is voor lezers.\n\n`datasummary_correlation(method = \"pearson\", title = \"...\")`\n\n:   Hier duiden we aan welke correlatie we precies willen en geven we een duidelijke titel (Pearson correlation: method = \"pearson\"; Spearman: method = \"spearman\").\n\nWe kunnen deze tabel naar een Microsoft Word bestand exporteren zodat we de tabel kunnen gebruiken in eigen papers met volgende syntax toevoeging (Je ziet de tabel nu wel niet langer in R verschijnen):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemdata |> \n  select(v2x_polyarchy, gini_2019, cpi, gdp_ppp) |> \n  rename(\"Electorale democratie\" = v2x_polyarchy, \n         \"Economische ongelijkheid\" = gini_2019, \n         \"Corruptie\" = cpi, \n         \"BBP\" = gdp_ppp) |> \n  datasummary_correlation(method = \"pearson\",\n                          title = \"Relatie continue variabelen\",\n                          output = \"correlatietabel.docx\")\n```\n:::\n\n\n\n`output = \"correlatietabel.docx\"`\n\n:   Hier vragen we de output te exporteren naar een Word (.docx) bestand. De naam van het bestand bepaal je zelf. Het bestand is terug te vinden in je projectfolder of de folder waar je syntax bestand (script of Markdown) zich in bevindt. In Word kunnnen nog verdere aanpassingen worden gedaan. [^linear_08-4]\n\n[^linear_08-4]: We willen bijvoorbeeld misschien asteriks toevoegen voor statistische significantie. Dit lukt niet gemakkelijk vanzelf met `datasummary_correlation` (De website van het package beschrijft wel [deze methode](https://modelsummary.com/vignettes/datasummary.html#datasummary_correlation){target=\"_blank\"}).Je kunt ook altijd `cor.test`gebruiken om significantie na te gaan.\n\n::: callout-important\n#### Waarschuwing!\n\nJe kunt problemen tegenkomen met deze syntax indien je je Word-bestand met tabel open hebt in Word en de syntax nogmaals runt, bijvoorbeeld om een foutje te corrigeren. We raden aan het Word bestand altijd te sluiten voor je de syntax opnieuw runt.\n:::\n\n#### Instructies\n\n-   Doorgaans plaatsen we de afhankelijke variabele op de eerste rij in een correlatietabel. Dit doe je door de variabele als eerste te noemen in de `select()` regel van de syntax hierboven.\n-   De variabelen hernoem je zodat het duidelijk is voor de lezer wat ze inhouden. Gebruik dus niet gewoon de naam van de variabelen zoals ze opgeslagen zijn in de dataset.\n-   Geef de tabel een informatieve titel.\n-   Het is gebruikelijk om asterisks te plaatsen in de tabel om statistische significantie weer te geven (\\*\\*\\* = p \\< 0.01, \\*\\* = p \\< 0.01, \\* = p \\< 0.05). Jammergenoeg kan `datasummary_correlation()` dit niet automatisch toevoegen. Wel kun je deze symbolen manueel (op basis van `cor.test`) toevoegen aan een tabel in een .docx (Word) bestand.\n-   Correlatie (en regressie) tabellen gemaakt met `modelsummary` kun je verder aanpassen met instructies op [deze webpagina](https://modelsummary.com/vignettes/appearance.html){target=\"_blank\"}. Dit is echter niet nodig voor dit vak.\n\n## OLS Regressiemodellen {#sec-reporting-linear-regression}\n\nLineaire regressie, oftewel OLS (Ordinary Least Squares) regressie modelleert veranderingen in het gemiddelde van een afhankelijke variabele als lineaire functie van een of meerdere onafhankelijke variabelen. We gebruiken hier de `demdata` dataset en voorspellen electorale democratiescores in het jaar 2020 als functie van economische ongelijkheid (gini_2019), de status van het regime van een land in 1984 (TYPEDEMO1984) en regio van de wereld waarin een land is gesitueerd (1 = Europa, 2 = Afrika, 3 = Azië, 4 = Amerikas).\n\nHieronder vind je de syntax en output in R. Deze output neem je niet rechtstreeks op in een paper. In de plaats daarvan maak je een formele tabel of een coëfficiëntenplot (zie onder).\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Factor maken categorische variabelen\ndemdata <- demdata |> \n  mutate(TYPEDEMO1984 = factorize(TYPEDEMO1984), \n         region = factor(region, \n                    levels=c(2,3,1,4), #Ref. groep eerst inde rij\n                    labels=c(\"Afrika\", \"Azië\", \"Europa\", \"Amerika's\")))\n\n#model schatten en opslaan\nexample_model <- lm(v2x_polyarchy ~ gini_2019 + TYPEDEMO1984 + region, \n                    data=demdata)\n\n#Resultaten\nsummary(example_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = v2x_polyarchy ~ gini_2019 + TYPEDEMO1984 + region, \n    data = demdata)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.52522 -0.06736  0.03585  0.09521  0.37555 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)   \n(Intercept)              0.899777   0.271068   3.319  0.00175 **\ngini_2019               -0.013400   0.005693  -2.354  0.02282 * \nTYPEDEMO1984Democracies  0.067402   0.061709   1.092  0.28028   \nregionAzië               0.040365   0.149003   0.271  0.78765   \nregionEuropa             0.244037   0.157307   1.551  0.12753   \nregionAmerika's          0.253473   0.150635   1.683  0.09907 . \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1893 on 47 degrees of freedom\n  (126 observations deleted due to missingness)\nMultiple R-squared:  0.4378,\tAdjusted R-squared:  0.378 \nF-statistic:  7.32 on 5 and 47 DF,  p-value: 3.842e-05\n```\n\n\n:::\n:::\n\n\n\nVoor interpretatierichtlijnen, zie @sec-performing-a-multiple-linear-regression.\n\n### Rapportage\n\nJe rapport bevat best de volgende zaken:\n\n-   Een bespreking van de richting van de relatie (positief/negatief) en een inhoudelijke interpretatie van wat dit concreet betekent op basis van hoe de variabelen gemeten zijn en welke schaal zij hebben.\n    -   Bij een multiple regressie is het belangrijk te verduidelijken dat het effect dat je vindt voor een onafhankelijke variabele gecontroleerd is op de andere onafhankelijke variabelen in het model. Deze worden 'constant gehouden' (oftewel 'ceteris paribus').\n-   Een bespreking van de statistische significantie (verwerpen of niet nulhypothese?) met vermelding van p-waarde en/of het betrouwbaarheidsinterval.\n    -   Coëfficiënten met p-waarden groter dan 0.05 worden meestal niet als statistisch significant of als statistisch significant bij conventionele niveaus beschouwd.[^linear_08-5] Rapporteer op basis van het hoogste signficantieniveau dat de p-waarde aangeeft:\n        -   Als p = 0.04, dan p \\< 0.05 (significant op 95% niveau)\n        -   Als p = 0.02, dan p \\< 0.01 (significant op 99% niveau)\n        -   Als p = 0.0000005, dan p \\< 0.001 (significant op 99.9% niveau)\n        -   We rapporteren meestal niet hoger dan 99.9% of p \\< 0.001 (bv., we zeggen niet p \\< 0.000001, maar p \\< 0.001). We schrijven ook nooit p \\< 0.000.\n    -   Het betrouwbaarheidsinterval kan ook gebruikt worden om statistische significantie te bespreken en de onzekerheid rond de geschatte coëfficiënten aan te duiden. Als je het betrouwbaarheidsinterval bespreekt, kun je dit tussen haakjes toevoegen na de coëfficiënt, bv. \"De coëfficiënt voor economische ongelijkheid is 0.8 (95% CI: 0.5, 1.1)\".\n    -   Het is minder gebruikelijk de t-statistiek concreet te benoemen, maar het is ook geen probleem als je dit doet. Indien de t-waarde wordt opgenomen, zet je deze bij de p-waarde: \"(t = 1.98, p \\< 0.05)\".\n\n[^linear_08-5]: Een 90% betrouwbaarheidsniveau kan passend zijn indien het model een lage N heeft.\n\nHier vind je uitgewerkte voorbeelden voor `gini_2019` (een continue variabele) en `TYPEDEMO1984` (een binaire variabele).\n\n::: {.callout-tip title=\"Report\"}\n**gini_2019**: We verwachten dat het niveau van electorale democratie lager is als economische ongelijkheid stijgt, gecontroleerd op de effecten van regimestatus in het verleden en regio in de wereld. Gebaseerd op het model verwachten we dat electoral democratie met -0.01 eenheden daalt als economische ongelijkheid met 1 eenheid stijgt. Dit effect is statistisch signifcant (p \\< 0.05).\n\n**TYPEDEMO1984**: Het regressiemodel toont dat landen die als democratie werden beschouwd in 1984 ook vandaag democratischer zijn. Gemiddeld genomen scoren deze landen 0.07 eenheden hoger op electorale democratie in 2020 dan landen die in 1984 geen democratie waren, gecontroleerd op ongelijkheid en regio in de wereld. Het verschil is echter niet statistisch significant (p \\> 0.05).\n:::\n\nBijkomende tips:\n\n-   In een bespreking van een onderzoek kun je behalve een discussie van de coëfficiënten ook een bespreking van voorspelde waarden opnemen (bv. welk niveau van democratie verwacht je bij hoge en lage ongelijkheid volgens je model). Een plot van voorspelde waarden kan de bespreking verder verduidelijken. Zie @sec-presenting-linear-regression-predicted-values-plots voor meer informatie.\n-   Als je onderzoek vooral gericht is op de relatie tussen een specifieke onafhankelijke variabele en de afhankelijke variabele dan is een discussie van de coëfficiënten van de controlevariabelen doorgaans niet nodig.\n-   Het intercept wordt zelden vermeld in onderzoekspapers. In een bivariaat model waarbij de predictor binair is, is het intercept wel inhoudelijk interessant, want dan staat de 0 voor de gemiddelde score op de afhankelijke variabele voor de referentiecategorie. In een experiment zou je bijvoorbeeld scores vergelijken van de controlegroep (X=0) en de experimentele groep (x=1).\n-   Wees voorzichting in je bespreking van de relatie tussen de variabelen. Causaliteit is moeilijk te bepalen en is onderhevig aan sterke voorwaarden. Je schrijft bijgevolg dus meestal niet het \"effect van X op Y\" , maar \"deze verandering in X is geassocieerd met deze verandering in Y\".\n\n## Lineaire Regressietabellen {#sec-presenting-linear-regression-regression-tables}\n\nEen gebruikelijke methode om de resultaten van regressiemodellen te presenteren is met behulp van een tabel. Via het `modelsummary`package (en functie met dezelfde naam) kunnen we R gebruiken om zo'n tabel aan te maken.\n\n### Regressietabel voor 1 model\n\nAls voorbeeld maken we hier een regressietabel voor een model waarin de score voor electorale democratie voorspeld wordt aan de hand van 1 onafhankelijke variabele: de corruptieperceptie-index (`cpi`). Hieronder vinden we de standaard output zonder toevoegingen:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Schatten en opslaan van het model\nmodel1 <- lm(v2x_polyarchy ~ cpi, data = demdata)\n\n#basisfunctie voor regressietabel\nmodelsummary(model1)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_90xhersx0j7jgyf8jdiv(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_90xhersx0j7jgyf8jdiv\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_90xhersx0j7jgyf8jdiv');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_90xhersx0j7jgyf8jdiv(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_90xhersx0j7jgyf8jdiv\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 0, j: 1 },  ], css_id: 'tinytable_css_sj43gz9xbfabh22uh4qu',}, \n          { positions: [ { i: 4, j: 1 },  ], css_id: 'tinytable_css_qh75nzdih7oj02xu0ew7',}, \n          { positions: [ { i: 12, j: 1 },  ], css_id: 'tinytable_css_hqrw8jv1s7i7wn9s5nq8',}, \n          { positions: [ { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 3, j: 1 }, { i: 8, j: 1 }, { i: 5, j: 1 }, { i: 6, j: 1 }, { i: 7, j: 1 }, { i: 9, j: 1 }, { i: 10, j: 1 }, { i: 11, j: 1 },  ], css_id: 'tinytable_css_ca3cpmwgy0ubsvgw6l30',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_7rem35k3tgjv3eir0xs8',}, \n          { positions: [ { i: 4, j: 0 },  ], css_id: 'tinytable_css_68crqohjkjqlxzo2vvvw',}, \n          { positions: [ { i: 12, j: 0 },  ], css_id: 'tinytable_css_108bwe7006olj9hofl6z',}, \n          { positions: [ { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 8, j: 0 }, { i: 5, j: 0 }, { i: 6, j: 0 }, { i: 7, j: 0 }, { i: 9, j: 0 }, { i: 10, j: 0 }, { i: 11, j: 0 },  ], css_id: 'tinytable_css_0bmowfi9lyfdswvu9ft9',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_90xhersx0j7jgyf8jdiv(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_sj43gz9xbfabh22uh4qu, .table th.tinytable_css_sj43gz9xbfabh22uh4qu { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_qh75nzdih7oj02xu0ew7, .table th.tinytable_css_qh75nzdih7oj02xu0ew7 { text-align: center; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_hqrw8jv1s7i7wn9s5nq8, .table th.tinytable_css_hqrw8jv1s7i7wn9s5nq8 { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_ca3cpmwgy0ubsvgw6l30, .table th.tinytable_css_ca3cpmwgy0ubsvgw6l30 { text-align: center; }\n      .table td.tinytable_css_7rem35k3tgjv3eir0xs8, .table th.tinytable_css_7rem35k3tgjv3eir0xs8 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_68crqohjkjqlxzo2vvvw, .table th.tinytable_css_68crqohjkjqlxzo2vvvw { text-align: left; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_108bwe7006olj9hofl6z, .table th.tinytable_css_108bwe7006olj9hofl6z { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_0bmowfi9lyfdswvu9ft9, .table th.tinytable_css_0bmowfi9lyfdswvu9ft9 { text-align: left; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_90xhersx0j7jgyf8jdiv\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">(1)</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>(Intercept)</td>\n                  <td>0.140</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.036)</td>\n                </tr>\n                <tr>\n                  <td>cpi</td>\n                  <td>0.009</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.001)</td>\n                </tr>\n                <tr>\n                  <td>Num.Obs.</td>\n                  <td>174</td>\n                </tr>\n                <tr>\n                  <td>R2</td>\n                  <td>0.438</td>\n                </tr>\n                <tr>\n                  <td>R2 Adj.</td>\n                  <td>0.435</td>\n                </tr>\n                <tr>\n                  <td>AIC</td>\n                  <td>-78.1</td>\n                </tr>\n                <tr>\n                  <td>BIC</td>\n                  <td>-68.6</td>\n                </tr>\n                <tr>\n                  <td>Log.Lik.</td>\n                  <td>42.061</td>\n                </tr>\n                <tr>\n                  <td>F</td>\n                  <td>134.123</td>\n                </tr>\n                <tr>\n                  <td>RMSE</td>\n                  <td>0.19</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n`modelsummary(`\n\n:   Naamn van de functie\n\n`model1,`\n\n:   naam van het model waarvan we de resultaten in een tabel willen presenteren.\n\nDeze tabel kan verbeterd worden. Ten eerste kunnen we de statistische significantie van de coëfficiënten aanduiden met een asterisk (\\*) of andere symbolen. Ten tweede kunnen we onze variabelen duidelijkere labels geven. Ten derde kunnen we model fit statistieken die minder interessant zijn weglaten uit de tabel. Ten slotte kunnen we een titel en onderschrift toevoegen.\n\nDit doen we met volgende syntax:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelsummary(model1, \n             stars = TRUE, # <1>             \n             coef_rename = c(    # <2>             \n               \"(Intercept)\" = \"Constante\",\n               \"cpi\" = \"Corruptieperceptie-index\"), \n             gof_map = c(\"nobs\", \"r.squared\", \"adj.r.squared\"), # <3>\n             title = \"Electorale Democratie voorspeld door corruptie\", # <4>\n             notes = \"Lineaire regressiecoëfficiënten met standaardfouten tussen haakjes\") # <5> \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_5i9971r2jeaj5d6ra2jl(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_5i9971r2jeaj5d6ra2jl\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_5i9971r2jeaj5d6ra2jl');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_5i9971r2jeaj5d6ra2jl(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_5i9971r2jeaj5d6ra2jl\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 5, j: 0 }, { i: 6, j: 0 },  ], css_id: 'tinytable_css_z2k7eym2u6xc7pz35hec',}, \n          { positions: [ { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 3, j: 1 }, { i: 5, j: 1 }, { i: 6, j: 1 },  ], css_id: 'tinytable_css_ypv62fr5gpodik9rx2cv',}, \n          { positions: [ { i: 4, j: 1 },  ], css_id: 'tinytable_css_p0z0a0pbcayh4qcey0ev',}, \n          { positions: [ { i: 7, j: 0 },  ], css_id: 'tinytable_css_gwgcl4hvgooxr0cbmm3h',}, \n          { positions: [ { i: 4, j: 0 },  ], css_id: 'tinytable_css_bfnhjmih01wb4g4r0k3i',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_aoi3nci34n48bl1lpq0o',}, \n          { positions: [ { i: 7, j: 1 },  ], css_id: 'tinytable_css_3lprn2lyrkm2l9lnvrd8',}, \n          { positions: [ { i: 0, j: 1 },  ], css_id: 'tinytable_css_3ez5iy84yqq6s5mjo8gc',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_5i9971r2jeaj5d6ra2jl(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_z2k7eym2u6xc7pz35hec, .table th.tinytable_css_z2k7eym2u6xc7pz35hec { text-align: left; }\n      .table td.tinytable_css_ypv62fr5gpodik9rx2cv, .table th.tinytable_css_ypv62fr5gpodik9rx2cv { text-align: center; }\n      .table td.tinytable_css_p0z0a0pbcayh4qcey0ev, .table th.tinytable_css_p0z0a0pbcayh4qcey0ev { text-align: center; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_gwgcl4hvgooxr0cbmm3h, .table th.tinytable_css_gwgcl4hvgooxr0cbmm3h { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_bfnhjmih01wb4g4r0k3i, .table th.tinytable_css_bfnhjmih01wb4g4r0k3i { text-align: left; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_aoi3nci34n48bl1lpq0o, .table th.tinytable_css_aoi3nci34n48bl1lpq0o { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_3lprn2lyrkm2l9lnvrd8, .table th.tinytable_css_3lprn2lyrkm2l9lnvrd8 { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_3ez5iy84yqq6s5mjo8gc, .table th.tinytable_css_3ez5iy84yqq6s5mjo8gc { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_5i9971r2jeaj5d6ra2jl\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Electorale Democratie voorspeld door corruptie</caption>\n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">(1)</th>\n              </tr>\n        </thead>\n        <tfoot><tr><td colspan='2'>+ p < 0.1, * p < 0.05, ** p < 0.01, *** p < 0.001</td></tr>\n<tr><td colspan='2'>Lineaire regressiecoëfficiënten met standaardfouten tussen haakjes</td></tr></tfoot>\n        <tbody>\n                <tr>\n                  <td>Constante</td>\n                  <td>0.140***</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.036)</td>\n                </tr>\n                <tr>\n                  <td>Corruptieperceptie-index</td>\n                  <td>0.009***</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.001)</td>\n                </tr>\n                <tr>\n                  <td>Num.Obs.</td>\n                  <td>174</td>\n                </tr>\n                <tr>\n                  <td>R2</td>\n                  <td>0.438</td>\n                </tr>\n                <tr>\n                  <td>R2 Adj.</td>\n                  <td>0.435</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n1.  Voegt \"stars\" of asterisks toe voor statistische significantie.\n2.  We hernoemen de variabeln voor de duidelijkheid `coef_rename()`\n3.  We selecteren de fit statistieken die we willen rapporteren `gof_map()`\n4.  We geven een titel aan de table `title =`\n5.  En ten slotte geven we informatie aan de lezer over wat we precies weergeven `notes =`\n\n`stars = TRUE,`\n\n:   Met deze optie voegen we symbolen voor statistische significantie toe. De legende voor de symbolen wordt automatisch toegevoegd aan de tabel.\n\n`coef_rename = c(...)`\n\n:   Met deze functie kunnen we de namen van de onafhankelijke variabelen hernoemen. We doen dit voor het `intercept` en voor `cpi`. Voor zowel de originele naam als de nieuwe naam gebruik je dubbele (of enkele) aanhalingstekens.\n\n`gof_map = c(...)`\n\n:   Hier geven we aan welke \"goodness of fit\" (gof) statistieken we willen. We voegen hier de statistieken die we willen toe: het aantal observaties (\"nobs\"), de R² (\"r.squared\"), en de adjusted R² (\"adj.r.squared\"). De andere statistieken worden dan weggelaten.[^linear_08-6]\n\n`title = ...`\n\n:   Titel voor de tabel.\n\n`notes = (...)`\n\n:   Onderschrift voor de tabel. Hier verduidelijk je aan de lezer wat er precies af te lezen valt: de lineaire regressiecoëfficiënten met standaardfouten tussen haakjes.\n\n[^linear_08-6]: Het alternatief is om `gof_omit()` te gebruiken en die statistieken die we niet willen te specificeren.\n\n### Regressietabel met meerdere modellen\n\nWe kunnen `modelsummary()` ook gebruiken om een regressietabel met meerdere modellen te maken. Bijvoorbeeld, een model met enkel `cpi` en een model met alle predictors. We kunnen de modellen eerst in een lijst ('list') opslaan en dan `modelsummary()` op de lijst gebruiken. De rest van de syntax blijft grotendeels hetzelfde behalve de toevoeging van de andere onafhankelijke variabelen in het `coef_rename()` gedeelte.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#model met 3 predictors\nmodel2 <- lm(v2x_polyarchy ~ cpi + v2caviol + region, data = demdata)\n\n#lijst maken\nmodel_list <- list(model1, model2)\n\n#lijst gebruiken in modelsummary()\nmodelsummary(model_list, \n             stars = TRUE, \n             coef_rename = c(\n               \"(Intercept)\" = \"Constante\",\n               \"cpi\" = \"Corruptieperceptie-index\", \n               \"v2caviol\" = \"Politiek geweld\",\n               \"regionAsia\" = \"Azië\",\n               \"regionEurope\" = \"Europa\", \n               \"regionAmericas\" = \"Amerika's\"), \n             gof_map = c(\"nobs\", \"r.squared\", \"adj.r.squared\"), \n             title = \"Electorale democratie voorspeld door corruptie, politiek geweld en regio\", \n             notes = \"Lineaire regressiecoëfficiënten met standaardfouten tussen haakjes. Referentiegroep regio = Afrika\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_nbj1a4titdewsl6xyi36(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_nbj1a4titdewsl6xyi36\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_nbj1a4titdewsl6xyi36');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_nbj1a4titdewsl6xyi36(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_nbj1a4titdewsl6xyi36\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 12, j: 2 }, { i: 12, j: 1 },  ], css_id: 'tinytable_css_srsuhire9wzwugd3p8ct',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_rrtlnk2x35tyefjmeau9',}, \n          { positions: [ { i: 0, j: 1 }, { i: 0, j: 2 },  ], css_id: 'tinytable_css_f9gkxkrq1krkr6vrdper',}, \n          { positions: [ { i: 15, j: 0 },  ], css_id: 'tinytable_css_e3hzpyau8dvsjl9d0tuj',}, \n          { positions: [ { i: 15, j: 1 }, { i: 15, j: 2 },  ], css_id: 'tinytable_css_cvrmlcy1gxidzsbzrmrk',}, \n          { positions: [ { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 4, j: 0 }, { i: 5, j: 0 }, { i: 6, j: 0 }, { i: 7, j: 0 }, { i: 8, j: 0 }, { i: 9, j: 0 }, { i: 10, j: 0 }, { i: 11, j: 0 }, { i: 13, j: 0 }, { i: 14, j: 0 },  ], css_id: 'tinytable_css_3a3wbha4ujo2qxyhcjch',}, \n          { positions: [ { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 4, j: 1 }, { i: 5, j: 1 }, { i: 6, j: 1 }, { i: 7, j: 1 }, { i: 8, j: 1 }, { i: 9, j: 1 }, { i: 10, j: 1 }, { i: 11, j: 1 }, { i: 9, j: 2 }, { i: 13, j: 1 }, { i: 14, j: 1 }, { i: 3, j: 2 }, { i: 3, j: 1 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 7, j: 2 }, { i: 4, j: 2 }, { i: 5, j: 2 }, { i: 6, j: 2 }, { i: 11, j: 2 }, { i: 8, j: 2 }, { i: 13, j: 2 }, { i: 10, j: 2 }, { i: 14, j: 2 },  ], css_id: 'tinytable_css_0mnuah9m7p9bh5ldrmw6',}, \n          { positions: [ { i: 12, j: 0 },  ], css_id: 'tinytable_css_0mlj5fzo1imzrues8ml2',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_nbj1a4titdewsl6xyi36(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_srsuhire9wzwugd3p8ct, .table th.tinytable_css_srsuhire9wzwugd3p8ct { text-align: center; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_rrtlnk2x35tyefjmeau9, .table th.tinytable_css_rrtlnk2x35tyefjmeau9 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_f9gkxkrq1krkr6vrdper, .table th.tinytable_css_f9gkxkrq1krkr6vrdper { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_e3hzpyau8dvsjl9d0tuj, .table th.tinytable_css_e3hzpyau8dvsjl9d0tuj { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_cvrmlcy1gxidzsbzrmrk, .table th.tinytable_css_cvrmlcy1gxidzsbzrmrk { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_3a3wbha4ujo2qxyhcjch, .table th.tinytable_css_3a3wbha4ujo2qxyhcjch { text-align: left; }\n      .table td.tinytable_css_0mnuah9m7p9bh5ldrmw6, .table th.tinytable_css_0mnuah9m7p9bh5ldrmw6 { text-align: center; }\n      .table td.tinytable_css_0mlj5fzo1imzrues8ml2, .table th.tinytable_css_0mlj5fzo1imzrues8ml2 { text-align: left; border-bottom: solid black 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_nbj1a4titdewsl6xyi36\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Electorale democratie voorspeld door corruptie, politiek geweld en regio</caption>\n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">(1)</th>\n                <th scope=\"col\">(2)</th>\n              </tr>\n        </thead>\n        <tfoot><tr><td colspan='3'>+ p < 0.1, * p < 0.05, ** p < 0.01, *** p < 0.001</td></tr>\n<tr><td colspan='3'>Lineaire regressiecoëfficiënten met standaardfouten tussen haakjes. Referentiegroep regio = Afrika</td></tr></tfoot>\n        <tbody>\n                <tr>\n                  <td>Constante</td>\n                  <td>0.140***</td>\n                  <td>0.178***</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.036)</td>\n                  <td>(0.038)</td>\n                </tr>\n                <tr>\n                  <td>Corruptieperceptie-index</td>\n                  <td>0.009***</td>\n                  <td>0.007***</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.001)</td>\n                  <td>(0.001)</td>\n                </tr>\n                <tr>\n                  <td>Politiek geweld</td>\n                  <td></td>\n                  <td>-0.009</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.010)</td>\n                </tr>\n                <tr>\n                  <td>regionAzië</td>\n                  <td></td>\n                  <td>-0.090**</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.034)</td>\n                </tr>\n                <tr>\n                  <td>regionEuropa</td>\n                  <td></td>\n                  <td>0.108*</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.042)</td>\n                </tr>\n                <tr>\n                  <td>regionAmerika's</td>\n                  <td></td>\n                  <td>0.145***</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.041)</td>\n                </tr>\n                <tr>\n                  <td>Num.Obs.</td>\n                  <td>174</td>\n                  <td>174</td>\n                </tr>\n                <tr>\n                  <td>R2</td>\n                  <td>0.438</td>\n                  <td>0.559</td>\n                </tr>\n                <tr>\n                  <td>R2 Adj.</td>\n                  <td>0.435</td>\n                  <td>0.546</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\nDe functie zal standaard het eerste model 'Model 1' noemen en het tweede 'Model 2'. We kunnen dit desgewenst veranderen met behulp van onze lijst, waarin we dan niet alleen de namen van de objecten aangegeven maar ook de naam die we aan het model willen geven (door middel van: 'naam model in tabel' = object):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lijst met namen\nmodel_list_named <- list(\n  'Enkel Corruptie' = model1, \n  'Alle predictoren' = model2)\n\n#tabel maken\nmodelsummary(model_list_named, \n             stars = TRUE, \n             coef_rename = c(\n               \"(Intercept)\" = \"Constante\",\n               \"cpi\" = \"Corruptieperceptie-index\", \n               \"v2caviol\" = \"Politiek geweld\",\n               \"regionAsia\" = \"Azië\",\n               \"regionEurope\" = \"Europa\", \n               \"regionAmericas\" = \"Amerika's\"), \n             gof_map = c(\"nobs\", \"r.squared\", \"adj.r.squared\"), \n             title = \"Electorale democratie voorspeld door corruptie, politiek geweld en regio\", \n             notes = \"Lineaire regressiecoëfficiënten met standaardfouten tussen haakjes. Referentiegroep regio = Afrika\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_ophlakpk2kgmy0mluptw(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_ophlakpk2kgmy0mluptw\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_ophlakpk2kgmy0mluptw');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_ophlakpk2kgmy0mluptw(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_ophlakpk2kgmy0mluptw\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 4, j: 1 }, { i: 5, j: 1 }, { i: 6, j: 1 }, { i: 7, j: 1 }, { i: 8, j: 1 }, { i: 9, j: 1 }, { i: 10, j: 1 }, { i: 11, j: 1 }, { i: 9, j: 2 }, { i: 13, j: 1 }, { i: 14, j: 1 }, { i: 3, j: 2 }, { i: 3, j: 1 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 7, j: 2 }, { i: 4, j: 2 }, { i: 5, j: 2 }, { i: 6, j: 2 }, { i: 11, j: 2 }, { i: 8, j: 2 }, { i: 13, j: 2 }, { i: 10, j: 2 }, { i: 14, j: 2 },  ], css_id: 'tinytable_css_xacsu4h5khm81p3px79v',}, \n          { positions: [ { i: 15, j: 1 }, { i: 15, j: 2 },  ], css_id: 'tinytable_css_wq8jo2pfvskzrzra6mew',}, \n          { positions: [ { i: 0, j: 1 }, { i: 0, j: 2 },  ], css_id: 'tinytable_css_ujs2sk6djagg6c4bvoav',}, \n          { positions: [ { i: 12, j: 2 }, { i: 12, j: 1 },  ], css_id: 'tinytable_css_mjqhu0wwqlnpww01jig0',}, \n          { positions: [ { i: 12, j: 0 },  ], css_id: 'tinytable_css_mbompf5iyntksqcspeiu',}, \n          { positions: [ { i: 15, j: 0 },  ], css_id: 'tinytable_css_hv5i1bmk7pexg00ge63f',}, \n          { positions: [ { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 4, j: 0 }, { i: 5, j: 0 }, { i: 6, j: 0 }, { i: 7, j: 0 }, { i: 8, j: 0 }, { i: 9, j: 0 }, { i: 10, j: 0 }, { i: 11, j: 0 }, { i: 13, j: 0 }, { i: 14, j: 0 },  ], css_id: 'tinytable_css_fsjbabv2lqymnudelhsx',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_6fn6g0y1ycm7btw79vcb',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_ophlakpk2kgmy0mluptw(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_xacsu4h5khm81p3px79v, .table th.tinytable_css_xacsu4h5khm81p3px79v { text-align: center; }\n      .table td.tinytable_css_wq8jo2pfvskzrzra6mew, .table th.tinytable_css_wq8jo2pfvskzrzra6mew { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_ujs2sk6djagg6c4bvoav, .table th.tinytable_css_ujs2sk6djagg6c4bvoav { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n      .table td.tinytable_css_mjqhu0wwqlnpww01jig0, .table th.tinytable_css_mjqhu0wwqlnpww01jig0 { text-align: center; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_mbompf5iyntksqcspeiu, .table th.tinytable_css_mbompf5iyntksqcspeiu { text-align: left; border-bottom: solid black 0.05em; }\n      .table td.tinytable_css_hv5i1bmk7pexg00ge63f, .table th.tinytable_css_hv5i1bmk7pexg00ge63f { text-align: left; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_fsjbabv2lqymnudelhsx, .table th.tinytable_css_fsjbabv2lqymnudelhsx { text-align: left; }\n      .table td.tinytable_css_6fn6g0y1ycm7btw79vcb, .table th.tinytable_css_6fn6g0y1ycm7btw79vcb { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_ophlakpk2kgmy0mluptw\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Electorale democratie voorspeld door corruptie, politiek geweld en regio</caption>\n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">Enkel Corruptie</th>\n                <th scope=\"col\">Alle predictoren</th>\n              </tr>\n        </thead>\n        <tfoot><tr><td colspan='3'>+ p < 0.1, * p < 0.05, ** p < 0.01, *** p < 0.001</td></tr>\n<tr><td colspan='3'>Lineaire regressiecoëfficiënten met standaardfouten tussen haakjes. Referentiegroep regio = Afrika</td></tr></tfoot>\n        <tbody>\n                <tr>\n                  <td>Constante</td>\n                  <td>0.140***</td>\n                  <td>0.178***</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.036)</td>\n                  <td>(0.038)</td>\n                </tr>\n                <tr>\n                  <td>Corruptieperceptie-index</td>\n                  <td>0.009***</td>\n                  <td>0.007***</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>(0.001)</td>\n                  <td>(0.001)</td>\n                </tr>\n                <tr>\n                  <td>Politiek geweld</td>\n                  <td></td>\n                  <td>-0.009</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.010)</td>\n                </tr>\n                <tr>\n                  <td>regionAzië</td>\n                  <td></td>\n                  <td>-0.090**</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.034)</td>\n                </tr>\n                <tr>\n                  <td>regionEuropa</td>\n                  <td></td>\n                  <td>0.108*</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.042)</td>\n                </tr>\n                <tr>\n                  <td>regionAmerika's</td>\n                  <td></td>\n                  <td>0.145***</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td>(0.041)</td>\n                </tr>\n                <tr>\n                  <td>Num.Obs.</td>\n                  <td>174</td>\n                  <td>174</td>\n                </tr>\n                <tr>\n                  <td>R2</td>\n                  <td>0.438</td>\n                  <td>0.559</td>\n                </tr>\n                <tr>\n                  <td>R2 Adj.</td>\n                  <td>0.435</td>\n                  <td>0.546</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n### Opslaan als Word document\n\nWe kunnen de regressietabellen gemaakt met `modelsummary()` ook opslaan in een Word document door de optie 'output' te gebruiken:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelsummary(model_list_named, \n             stars = TRUE, \n             coef_rename = c(\n               \"(Intercept)\" = \"Constante\",\n               \"cpi\" = \"Corruptieperceptie-index\", \n               \"v2caviol\" = \"Politiek geweld\",\n               \"regionAsia\" = \"Azië\",\n               \"regionEurope\" = \"Europa\", \n               \"regionAmericas\" = \"Amerika's\"), \n             gof_map = c(\"nobs\", \"r.squared\", \"adj.r.squared\"), \n             title = \"Electorale democratie voorspeld door corruptie, politiek geweld en regio\", \n             notes = \"Lineaire regressiecoëfficiënten met standaardfouten tussen haakjes. Referentiegroep regio = Afrika\", \n             output = 'regressie_tabel.docx') \n```\n:::\n\n\n\n`output = 'regressie_tabel.docx'`\n\n:   Hier vragen we om een Word document (.docx) genaamd \"regressie_tabel\" op te slaan. Dit bestand vind je terug in je R project folder. Je kan ook een subfolder aanduiden, bv. \"Output folder/regressie_tabel.docx\". Let erop dat je het Word document niet geopend hebt als je de syntax opnieuw wil gebruiken met aanpassingen, anders kun je een foutmelding krijgen. In Word zelf krijg je vaak een lange, uitgerekte tabel. Dit kun je verhelpen door in Word naar de tab 'Indeling van tabel' te gaan en op 'AutoAanpassen naar venster' te klikken.\n\n### Instructies\n\n-   Het is gebruikelijk de ongestandaardiseerde coëfficiënt weer te geven met standaardfouten tussen haakjes onder de coëfficiënt. Dit is de standaardoutput voor de `modelsummary` functie. Standaard worden drie decimalen gebruikt. Dit is ook de conventie in de literatuur, maar het aantal decimalen kan aangepast worden met syntax. Standaardfouten kunnen echter ook tussen haakjes naast de coëfficiënt gezet worden.\n-   Voorzie de tabel van een informatieve titel, duidelijke namen voor de variabelen en een notitie onderaan die verduidelijkt welke informatie precies wordt weergegeven.\n-   Voor categorische variabelen kun je de referentiegroep op verschillende manieren verduidelijken: 1) je kunt deze informatie opnemen in de notitie zoals in het voorbeeld; 2) je kunt de referentiegroep aanduiden in de benaming van de variabele bv. \"Azië (ref.: Afrika\"; 3) je kunt de referentiegroep ook opnemen in een aparte rij in de tabel. Deze optie wordt beschreven op de `modelsummary` [webpagina](https://vincentarelbundock.github.io/modelsummary/articles/modelsummary.html#add_rows). De webpagina bevat ook verdere informatie om je tabel aan te passen naar voorkeur.\n-   Standaard nummert `modelsummary` de modellen in de tabel (bv. (1), (2), etc.). Je kan echter ook een specifieke kolomnaam geven. Dit is bijvoorbeeld handig als modellen een andere afhankelijke variabele hebben.\n\n## Plotten van coëfficiënten {#sec-presenting-linear-regression-coefficient-plots}\n\nDe resultaten van regressiemodellen kunnen ook in de vorm van een \"coefficient plot\" (plot van coëfficiënten) weergegeven worden. Deze plot bevat de coëfficiënten en hun betrouwbaarheidsintervallen (doorgaans op het 95% niveau). De constante wordt doorgaans niet opgenomen in de figuur.\n\nBij wijze van voorbeeld plotten we hier de resultaten van een model dat electorale democratie voorspelt op basis van corruptie, politiek geweld en regimestatus in 1984. We maken gebruik van de `tidy()` functie uit het `broom` package en de `ggplot()` functie uit het `tidyverse` package.\n\n<!--- Note: switched models because the categorical variable was creating the need to discuss how to arrange it in the plot --->\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Model\nplot_model <- lm(v2x_polyarchy ~ cpi + v2caviol + TYPEDEMO1984, data = demdata)\n\n#Oslaan van resultaten in tidy dataframe\n#MOET betrouwbaarheidsintervallen bevatten\nplot_model_tidied <- tidy(plot_model, conf.int = TRUE)\n\n#resultaat bekijken\nplot_model_tidied\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 7\n  term                   estimate std.error statistic p.value conf.low conf.high\n  <chr>                     <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n1 (Intercept)             0.187     0.0426      4.40  2.19e-5  0.103     0.272  \n2 cpi                     0.00636   0.00106     6.01  1.55e-8  0.00427   0.00846\n3 v2caviol               -0.00872   0.0123     -0.712 4.78e-1 -0.0330    0.0155 \n4 TYPEDEMO1984Democraci…  0.153     0.0349      4.37  2.39e-5  0.0837    0.222  \n```\n\n\n:::\n:::\n\n\n\nWe kunnen met deze data een figuur maken met `ggplot()` maar eerst doen we nog wat data management. We geven bijvoorbeeld andere namen aan de variabelen (opgeslaan in `term`) om duidelijker de resultaten te presenteren. [^linear_08-7]\n\n[^linear_08-7]: We kunnen ook de volgorde waarin de variabelen verschijnen in het plot aanpassen. We doen dit door van `term`een factor te maken en dan de volgorde van de niveaus aan te passen met `relevel`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#duidelijkere namen:\nplot_model_tidied <- plot_model_tidied |> \n  mutate(term = recode(term, \n                       \"cpi\" = \"Corruptieperceptie-Index\", \n                       \"v2caviol\" = \"Politiek geweld\",  \n                       \"TYPEDEMO1984Democracies\" = \"Democratie in 1984?\"))\n\nplot_model_tidied\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 7\n  term                   estimate std.error statistic p.value conf.low conf.high\n  <chr>                     <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n1 (Intercept)             0.187     0.0426      4.40  2.19e-5  0.103     0.272  \n2 Corruptieperceptie-In…  0.00636   0.00106     6.01  1.55e-8  0.00427   0.00846\n3 Politiek geweld        -0.00872   0.0123     -0.712 4.78e-1 -0.0330    0.0155 \n4 Democratie in 1984?     0.153     0.0349      4.37  2.39e-5  0.0837    0.222  \n```\n\n\n:::\n:::\n\n\n\nDan maken we het plot:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_model_tidied |> \n  filter(term != \"(Intercept)\") |>  # <1> \n  ggplot(aes(x = estimate, y = term)) +  \n  geom_pointrange(aes(xmin = conf.low, \n                      xmax = conf.high)) + \n  labs(title = \"OLS coëfficiënten voor electorale democratie\", \n       x = \"OLS coëfficiënt\", \n       y = \"Onafhankelijke variabele\") + \n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\") + # <2>\n  geom_text(aes(label = round(estimate, 2)), vjust = -0.5, hjust = -0.5) # <3> \n```\n\n::: {.cell-output-display}\n![](linear_08_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n1.  filter intercept weg uit dataframe\n2.  Voeg lijn toe bij x = 0\n3.  Voeg de coëfficiënten toe aan het plot, afgerond op 2 decimalen\n\n`plot_model_tidied |> filter(term != \"(Intercept)\") |>`\n\n:   We gebruiken het data object dat we eerder aangemaakt hebben (`plot_model_tidied`) en filteren het intercept uit de data gezien die doorgaans niet geplot wordt.\n\n`ggplot(aes(x=estimate, y=term)) +`\n\n:   We gebruiken `ggplot()` en bepalen welke variabelen op de x--as (hier: 'estimate', de waarde voor de coëfficiënten) en de y-as (hier: de variabele `term` met de naam van onze variabelen) komen. De variabelen kunnen gewisseld worden van as, maar de getoonde manier levert meestal een betere visualisatie (anders zouden de namen van de variabelen kunnen overlappen).\n\n`geom_pointrange(aes(xmin=conf.low, xmax=conf.high))`\n\n:   Hier vragen we om de coefficiënten aan te duiden met een punt (\"point\"). Vervolgens vragen we om een lijn door het punt te tekenen om de reikwijdte (\"range\") van de betrouwbaarheidsintervallen voor te stellen. De `xmin` and `xmax` delen van de syntax bepalen de reikwijdte.[^linear_08-8] Hier gebruiken we `conf.low` and `conf.high`, de variabelen waarin de ondergrens en bovengrens van de intervallen is opgeslaan.\n\n`labs(...)`\n\n:   We geven hier namen aan de assen en geven ook een titel.\n\n`geom_vline(xintercept=0, linetype=\"dashed\", color=\"red\")`\n\n:   Hier vragen we R om een verticale referentielijn te tekenen (\"geom\\_**v**line\") waar x = 0. Deze lijn helpt met het bepalen van de significantie, aangezien overlap van het betrouwbaarheidsinterval met de lijn wijst op een niet-significante coëfficiënt.\n\n`geom_text(aes(label = round(estimate, 2)), vjust = -0.5, hjust = -0.5)`\n\n:   Hier vragen we om ook de waarde van de coëfficiënt weer te geven op de plot met `geom_text()`. De tekst die op het plot komt wordt bepaald met \"label =\". Hier vragen we om de 'estimate' (de coëfficiënt), maar afgerond (\"round\") tot 2 decimalen voor de duidelijkheid.\n\n[^linear_08-8]: Als we de coëfficiënten op de y-as plaatsen moeten we hier `ymin` en `ymax` aanduiden.\n\nMet `vjust = -0.5` bepalen we waar de tekst komt (\"*vertical* justification\"). Dit kunnen we gebruiken om overlap tussen tekst en geplotte waarden te voorkomen. Negatieve waarden plaatsen de tekst hoger, positieve waarden plaatsen de tekst lager.\n\nMet `hjust = -0.5` (\"*horizontal* justification\") kunnen we de tekst naar links (positieve waarden) of rechts (negatieve waarden) bewegen. In de praktijk kan het zijn dat je hier wat moet spelen met de waarden voor vjust en hjust om je plot goed te presenteren.\n\n::: callout-important\n#### Waarschuwing!\n\nStandaard plot `ggplot` coëfficiënten van variabelen in alfabetische volgorde (is to order the coefficients by the alphabetical order of the variable that contains the variable names (named)zoals opgeslaan in de `term` variabele in het dataframe geproduceerd door `tidy()`). Dit is niet altijd ideaal, bijvoorbeeld wanneer categorieën van een factor variabele niet bij elkaar komen te staan of wanneer we vooral geïnteresseerd zijn in 1 bepaalde predictor en niet willen dat die in het midden komt te staan in plaats van prominent bovenaan.\n\nEen voorbeeld:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Model met categorische variabele\ncat_model <- lm(v2x_polyarchy ~ cpi + v2caviol + region, data = demdata)\n\n#Tidy met simpel plot\ntidy(cat_model, conf.int = TRUE) |> \n  filter(term != \"(Intercept)\") |> \n  mutate(term = recode(term, \n                       \"cpi\" = \"Corruptieperceptie\", \n                       \"v2caviol\" = \"Politiek geweld\",\n                       \"regionAsia\" = \"Azië\",\n                       \"regionEurope\" = \"Europa\", \n                       \"regionAmericas\" = \"Amerika's\")) |> \n    ggplot(aes(x = estimate, y=term)) + \n    geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) +\n    labs(title = \"OLS coëfficiënten voor electorale democratie\", \n       x = \"OLS coëfficiënt\", \n       y = \"Onafhankelijke variabele\")\n```\n\n::: {.cell-output-display}\n![](linear_08_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\nDe coëfficiënten van de categorische regio variable staan niet bij elkaar. We kunnen dit aanpassen door van `term`een factor te maken en dan de volgorde van de niveaus aan te passen met `relevel`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(cat_model, conf.int = TRUE) |> \n  filter(term != \"(Intercept)\") |>  # <1>\n  mutate(term = factor(term,\n                       levels = c(\"regionEurope\", \"regionAsia\", \n                                  \"regionAmericas\", \"v2caviol\",\n                                  \"cpi\"),  # <2>\n                       labels = c(\"Europa\", \"Azië\", \n                                  \"Amerika's\", \"Pol. geweld\",\n                                  \"Corruptieperceptie\"))) |> \n    ggplot(aes(x = estimate, y=term)) + \n    geom_pointrange(aes(xmin = conf.low, xmax = conf.high))+\n    labs(title = \"OLS coëfficiënten voor electorale democratie\", \n       x = \"OLS coëfficiënt\", \n       y = \"Onafhankelijke variabele\")\n```\n\n::: {.cell-output-display}\n![](linear_08_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n1.  Omzetten naar een factor doe je nadat het intercept is weggefilterd. Dat kan in 1 stap zoals in het voorbeeld of in 2 aparte syntax-stappen.\n2.  `ggplot()` zal het eerste niveau als onderste variabele plotten, het laatste niveau wordt de bovenste enzovoort.\n:::\n\n### Instructies\n\n-   Meestal plaats je de coëfficiënt op de x-as en de naam van de variabele op de y-as. Het is mogelijk dit te veranderen met de `ggplot` syntax, maar dan kunnen de variabelenamen makkelijker overlappen. Lange variabelennamen leiden wel vaker tot problemen met de visualisatie (in deze [blog](https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/) vind je enkele tips).\n-   Het toevoegen van de (afgeronde) coëfficiënt-waarde kan lezers helpen de resultaten beter te vatten.\n-   Meestal plotten we de 95% betrouwbaarheidsintervallen, maar dit kan aangepast worden (we kunnen `tidy` om andere niveaus vragen).\n-   In een rapport voeg je best een notitie onderaan de figuur toe, bv. \"Notitie: OLS coëfficiënten met 95% betrouwbaarheidsinterval\".\n-   Het is handig en gebruikelijk een referentielijn toe te voegen die nul aanduidt want dan kan statistische significantie (hier: bij p \\< 0.05) onmiddellijk afgelezen worden\n-   Standaard plot `ggplot` de coëfficiënten in alfabetische volgorde. Dit kan ervoor zorgen dat variabelen die bij elkaar horen (bv. meerdere dummies van 1 onderliggende categorische variabele) niet bij elkaar staan in het plot. We kunnen de volgorde aanpassen als we de `term` variabele omzetten in een factor variabele en de volgorde van de levels zelf bepalen. Zie het 'waarschuwing'-vak hiervoven.\n-   @gelman2006 maakte de welbekende uitspraak (althans onder statistici) dat \"het verschil tussen 'significant' en 'niet significant' op zichzelf 'niet significant' is\". Dit betekent dat je op basis van de betrouwbaarheidsintervallen van coëfficiënten en hun overlap niet kunt bepalen of coefficiënten significant van elkaar verschillen, je kan enkel bepalen of een coëfficiënt verschillend is van 0 (de nulhypothese).\n\n## Voorspelde waarden plotten {#sec-presenting-linear-regression-predicted-values-plots}\n\nRegressietabellen en coëfficiëntenplots presenteren de coëfficiënten voor de onafhankelijke variabelen in een model: wat is de verwachte gemiddelde waarde van de DV wanneer alle predictors = 0 (entercept of constante) en wat is de verwachte verandering in Y gegeven als X met één eenheid stijgt (coëfficiënten van onafhankelijke variabelen). We kunnen ook voorspelde waarden en grafieken van die voorspelde waarden gebruiken om discussies over coëfficiënten aan te vullen en meer te kunnen zeggen over het *substantiële* belang van de geschatte relatie.\n\nHet proces is gelijkaardig dan dat van coëfficiëntenplots, maar nu maken we gebruik van de `predictions()` functie in plaats van `tidy()`. We werken immers met voorspellingen nu en niet de coëfficiënten. Zie @sec-predicted-residual-values voor meer informatie over de `predictions()` functie.\n\nHieronder geven we voorbeelden voor plots van voorspelde waarden op basis van continue en binaire/categorische onafhankelijke variabelen.\n\n### Continue onafhankelijke variabele\n\nVoor dit voorbeeld gebruiken we heet eerder geschatte `plot_model`, waarbij electorale democratiescores voorspeld worden aan de hand van de corruptieperceptie-index, politiek geweld, en regimestatus in het verleden. Stel nu dat corruptie (`cpi`) als continue predictor ons specifiek interesseert. We willen weten hoe demoratieniveau verandert op verschillende niveaus van corruptie. we gebruiken `predictions()` om de verwachte waarde voor v2x_polyarchy te berekenen wanneer corruptie waarden tussen 20 en 80 aanneemt (de andere onafhankelijke variabelen worden constant gehouden op hun gemiddelde of modus).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Voorspellingen berekenen\ncpi_preds <- predictions(plot_model, \n                         newdata = datagrid(cpi = c(20, 30, 40, 50, 60, 70, 80)))\n\n#en bekijken\ncpi_preds\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n cpi Estimate Std. Error    z Pr(>|z|)     S 2.5 % 97.5 %\n  20    0.318     0.0278 11.4   <0.001  98.4 0.264  0.373\n  30    0.382     0.0217 17.6   <0.001 227.5 0.339  0.424\n  40    0.445     0.0199 22.4   <0.001 367.4 0.406  0.484\n  50    0.509     0.0233 21.9   <0.001 349.5 0.463  0.555\n  60    0.573     0.0302 18.9   <0.001 263.5 0.513  0.632\n  70    0.636     0.0389 16.4   <0.001 197.8 0.560  0.713\n  80    0.700     0.0483 14.5   <0.001 155.9 0.605  0.795\n\nType:  response \n```\n\n\n:::\n:::\n\n\n\nDeze data kunnen we invoeren in `ggplot()` om een plot te maken.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cpi_preds, aes(x = cpi, y = estimate)) + # <1> \n       geom_line () + # <2> \n       geom_ribbon(aes(ymin = conf.low, ymax = conf.high), # <3> \n                   alpha = 0.2) +  \n       labs(title = \"Voorspelde electorale democratiescore op basis van corruptieperceptie\", # <4> \n            x = \"Corruptieperceptie-index (Hoger = Minder corrupt)\",   \n            y = \"Voorspelde waarde\") +  \n       scale_y_continuous(limits=c(0,1)) # <5>\n```\n\n::: {.cell-output-display}\n![](linear_08_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n1.  Duidt aan welke data en welk plot we willen gebruiken\n2.  Duidt aan dat we een lijn willen die voorspelde waarden verbindt\n3.  Duidt aan dat we een betrouwbaarheidsinterval willen en hoe donker dit interval geplot wordt\n4.  Informatieve titel en labels\n5.  De y-as zetten we van 0 tot 1 gezien dit het theoretisch bereik is van de afhankelijke variabele. Niet altijd nodig dit te doen.\n\n`ggplot(`\n\n:   : We gebruiken ggplot op het data object tussen haakjes.\n\n`cpi_preds, aes(x = cpi, y = estimate)) +`\n\n:   dataobject (`cpi_preds`) en de variabelen die we willen plotten op elke as.\n\n`geom_line() +`\n\n:   We vragen ggplot hier een lijn te trekken tussen de voorspelde waarden. Dit is gebruikelijk voor een continue onafhankelijke variabele.\n\n`geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2) +`\n\n:   Hier vragen we om een band ('ribbon') rond de lijn te tekenen om de betrouwbaarheidsintervallen voor de voorspelde waarden weer te geven. Via `aes()` bepalen we welke variabelen de ligging van de band bepalen: de ondergrens (`ymin`) en bovengrens (`ymax`) van de betrouwbaarheidsintervallen. Met `alpha=0.2` bepalen we hoe donker de band is. Hogere waarden zijn donkerder en kunnen de zichtbaarheid van de lijn zelf hinderen.\n\n`labs(...)`\n\n:   We voegen titel en astitels toe.\n\n`scale_y_continuous(limits = c(0,1))`\n\n:   We bepalen met deze syntax de limieten van de y-as, hier tussen 0 en 1.\n\nDe limieten van de as zelf bepalen kan handig zijn om data duidelijker te visualiseren. We kunnen ervoor kiezen om de as het volledige theoretische bereik van de afhankelijke variabele te laten aannemen, zoals we hier doen met een y-as van 0 tot 1. Door het volledige bereik van de afhankelijke variabele te gebruiken lijken de effecten ook niet groter dan ze zijn. Echter kan deze benadering er soms wel voor zorgen dat een grafiek veel wit bevat en minder visueel aantrekkelijk is. Zie [this webpage](https://handsondataviz.org/how-to-lie-with-charts.html){target=\"_blank\" rel=\"noreferrer noopener\"} voor voorbeelden van wat er mis kan gaan. In de praktijk maken we een afweging. Wat we wel willen vermijden is dat de schaal groter is dan het theoretische bereik van de afhankelijke variabele.[^linear_08-9]\n\n[^linear_08-9]: Socioloog Kieran Healy bespreekt meer in de diepte hoe data te inspecteren in zijn boek \"Data Visualization\", gratis beschikbaar [hier](https://socviz.co/){target=\"_blank\" rel=\"noreferrer noopener\"}. Zie in het bijzonder sectie 6 in Hoofdstuk 1, \"Problems of honesty and good judgment\".\n\n### Binaire/categorische onafhankelijke variabele\n\nOm voorspelde waarden voor een factor variabele te plotten is de procedure gelijkaardig. Hier plotten we de voorspelde waarden voor electoral democratie voor de verschillende niveaus van `TYPEDEMO1984`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Voorspelde waarden berekenen\ndemo_preds <- predictions(plot_model, \n                          by = 'TYPEDEMO1984', \n                          newdata = 'mean')  # <1> \n\n#en bekijken: \ndemo_preds\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n TYPEDEMO1984 Estimate Std. Error    z Pr(>|z|)     S 2.5 % 97.5 %\n  Autocracies    0.467     0.0205 22.8   <0.001 379.7 0.427  0.507\n  Democracies    0.620     0.0260 23.8   <0.001 413.9 0.569  0.671\n\nType:  response \n```\n\n\n:::\n:::\n\n\n\n1.  Houdt de andere onafhankelijke variabelen op hun gemiddelde of modus\n\nDit data object voeren we door naar de `ggplot()` functie. We maken gebruik van `geom_pointrange()` zoals eerder voor het coëfficiëntenplot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(demo_preds, aes(x = TYPEDEMO1984, y = estimate)) + \n  geom_pointrange(aes(ymin = conf.low, ymax = conf.high)) + \n  labs(title = \"Voorspelde democratiescore aan de hand van regime in het verleden\", \n       y = \"Voorspelde waarde\", \n       x = \"Regime in 1984\") + \n  scale_y_continuous(limits = c(0,1)) +\n  scale_x_discrete(labels = c(\"Autocracies\" = \"Autocratie\", \"Democracies\" = \"Democratie\"))\n```\n\n::: {.cell-output-display}\n![](linear_08_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n`scale_x_discrete(labels = c(...)`\n\n:   We veranderen de labels voor de categorische variabele naar het Nederlands.\n\nWe kunnen hier ook de effectieve voorspelde waarden toevoegen aan het plot met `geom_text`. We kunnen de positie van de tekst weer bepalen met vjust en/of hjust. Dit doen we vooral met categorische variabelen en niet met continue predictors.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(demo_preds, aes(x=TYPEDEMO1984, y=estimate)) + \n  geom_pointrange(aes(ymin=conf.low, ymax=conf.high)) + \n  labs(title = \"Voorspelde democratiescore aan de hand van regime in het verleden\", \n       y = \"Voorspelde waarde\", \n       x = \"Regime in 1984\") + \n  geom_text(aes(label = round(estimate, 2)), hjust = -0.25)+\n  scale_x_discrete(labels = c(\"Autocracies\" = \"Autocratie\", \"Democracies\" = \"Democratie\"))\n```\n\n::: {.cell-output-display}\n![](linear_08_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n\n### Instructies\n\n-   Welke variabelen en waarden plot je?\n    -   Als de variabele binair/categorisch is, gebruik je alle categorieën die relevant zijn voor de discussie. (zie Week 3 R materialen voor een plot met categorieën).\n    -   Als de variabele continue is gebruik je het minimum en maximum met redelijke tussenintervallen. Om het minimum en maximum te bepalen kijk je naar de data voor de observaties gebruikt in het model (dit is niet noodzakelijk de volledige dataset gezien observaties kunnen wegvallen door missing waarden). Met de `predictions()` kun je gemakkelijk een dataset aanmaken met alle observaties gebruikt in het model en vervolgens gebruik je `summary` om minimum en maximum te bepalen (zie @sec-predictions-for-a-continuous-predictor-variable).\n-   Een lijn met 95% betrouwbaarheidsintervallen past bij een continue predictor, `geom_pointrange()` (of `geom_errorbar()`) bij een binaire/categorische variabele.\n-   De y-schaal verdient bijzonder aandacht bij dit soort plots. In het voorbeeld wordt `scale_y_continuous()` gebruikt om ervoor te zorgen dat het plot het volledige bereik van de afhankelijke variabele (democratiescore) omvat. Soms maakt `ggplot()` zelf de schaal kleiner (om ongebruikte ruimte weg te laten), maar dan kan een effect groter lijken dan het is. Deze aanpak heeft ook wel nadelen, bijvoorbeeld juist veel ongebruikte ruimte in een plot en minder duidelijke visualisatie. Socioloog Kieran Healy geeft een verdere [bespreking](https://socviz.co/lookatdata.html#problems-of-honesty-and-good-judgment) over deze verschillende manieren om de schaal vorm te geven in zijn boek over datavisualisatie.\n",
    "supporting": [
      "linear_08_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}